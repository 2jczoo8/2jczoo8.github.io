{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"themes/maupassant/source/css/copycode.scss","path":"css/copycode.scss","modified":0,"renderable":1},{"_id":"themes/maupassant/source/css/copyright.scss","path":"css/copyright.scss","modified":0,"renderable":1},{"_id":"themes/maupassant/source/css/donate.scss","path":"css/donate.scss","modified":0,"renderable":1},{"_id":"themes/maupassant/source/css/search.scss","path":"css/search.scss","modified":0,"renderable":1},{"_id":"themes/maupassant/source/css/style.scss","path":"css/style.scss","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/alipay.svg","path":"img/alipay.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/bitcoin.svg","path":"img/bitcoin.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/github.svg","path":"img/github.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/like.svg","path":"img/like.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/wechat.svg","path":"img/wechat.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/paypal.svg","path":"img/paypal.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","path":"js/codeblock-resizer.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/copycode.js","path":"js/copycode.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/donate.js","path":"js/donate.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/copyright.js","path":"js/copyright.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/fancybox.js","path":"js/fancybox.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/love.js","path":"js/love.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/share.js","path":"js/share.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/smartresize.js","path":"js/smartresize.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/recent-comments.js","path":"js/recent-comments.js","modified":0,"renderable":1},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"source/pdf/Combinatorics of permutations (Miklos Bona) (Z-Library).pdf","path":"pdf/Combinatorics of permutations (Miklos Bona) (Z-Library).pdf","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/0000.md","hash":"b880e324a5433b65c285c7beb093edb5b646ed9a","modified":1751118257465},{"_id":"source/_posts/0001.md","hash":"462f631022ee831368aa831f1f4b8b3a33367528","modified":1751118257465},{"_id":"source/_posts/0002.md","hash":"f1de40bd3186f5baec85c303aa4d747485a4f2f1","modified":1751118257465},{"_id":"source/_posts/0003.md","hash":"d85df2068f4a28a5609126a4d1ce0a75f11e5a01","modified":1751118257465},{"_id":"source/_posts/0004.md","hash":"42b40805610697fe4b8162cd30427cab94bd80ba","modified":1751118257465},{"_id":"source/_posts/0005.md","hash":"44fb05731c9798485dd1562831bae3342a7f92e2","modified":1751118257465},{"_id":"source/_posts/0006.md","hash":"3d4f6350f7479e3772fc276a9fbb886ba04070af","modified":1751118257465},{"_id":"source/_posts/0007.md","hash":"592cd5fb6def22bdba993e86235c348621edcf90","modified":1751118257465},{"_id":"source/_posts/0008.md","hash":"8e767f11ea23af9d34eec6591ffd6872adbc944d","modified":1751118257465},{"_id":"source/_posts/0009.md","hash":"12b1cbae8a180c7eae435403407a319c7004aecb","modified":1751118257466},{"_id":"source/_posts/0010.md","hash":"7cdda3d0b3bf0d3af4d09fce51c5a93bc38420a3","modified":1751118257466},{"_id":"source/_posts/0011.md","hash":"0d3229361733ebaecf4217580181416bc42dd748","modified":1751118257466},{"_id":"source/_posts/0012.md","hash":"5ebef265e3aebb7e2ff18208de18b7ddd37170ae","modified":1751118257466},{"_id":"source/_posts/test.md","hash":"10183594ec12bafee8448d2cca5f1cb6318a01f6","modified":1751119104180},{"_id":"source/favicon.ico","hash":"f97229749d1111b0f6009a79ca528d016216b3a6","modified":1751118257466},{"_id":"themes/maupassant/.gitignore","hash":"16945417d10c15c950306794dbb0d970b5a199fe","modified":1751118257485},{"_id":"themes/maupassant/.travis.yml","hash":"0339959f29deddc365e8fe8bd85da524410b9a23","modified":1751118257485},{"_id":"themes/maupassant/LICENSE","hash":"f0ac2f92770650c9835183f79010c0d307b34acd","modified":1751118257485},{"_id":"themes/maupassant/README.md","hash":"c6da8254deefb8054dfb3e174f6113b860ccde69","modified":1751118257485},{"_id":"themes/maupassant/_config.yml","hash":"3bb63e8371bdbdecc71a60b77cd4fe0771ba039a","modified":1751118257486},{"_id":"themes/maupassant/package.json","hash":"f092433469eb87362e831326425a6a5c3c9fea0d","modified":1751118257489},{"_id":"themes/maupassant/languages/de-DE.yml","hash":"5d3556a885e355a8c2da65ef3e7b3ee36a628bfa","modified":1751118257486},{"_id":"themes/maupassant/languages/en.yml","hash":"27d8484ce29989317624e9852c5495289fe5501c","modified":1751118257486},{"_id":"themes/maupassant/languages/es-ES.yml","hash":"58e1d04bcd1834fa9d2960e18e027abbbccbedc9","modified":1751118257486},{"_id":"themes/maupassant/languages/fr-FR.yml","hash":"b47906ec0abf867fb3e3360bc046b7afb68aee25","modified":1751118257486},{"_id":"themes/maupassant/languages/ko.yml","hash":"909a33e0befa6978e8e72157c6b415b48551ee31","modified":1751118257486},{"_id":"themes/maupassant/languages/nb-NO.yml","hash":"dfef2a8f7582f9bccf7cf8376fb2b96c1e452d5f","modified":1751118257486},{"_id":"themes/maupassant/languages/ru.yml","hash":"2476a631f4d3c668de04af85a6c2c97ba2a57e96","modified":1751118257486},{"_id":"themes/maupassant/languages/zh-CN.yml","hash":"433484ab11838cc8540aceaf13eb718fa180ed9c","modified":1751118257486},{"_id":"themes/maupassant/languages/zh-TW.yml","hash":"58905c7fa82ee4f2232bcd00301dfcd7b711c61e","modified":1751118257486},{"_id":"themes/maupassant/layout/archive.pug","hash":"9bf5245929529576b5d6678142276adf3c221a6d","modified":1751118257488},{"_id":"themes/maupassant/layout/base-without-sidebar.pug","hash":"6b1ff15ae71223ef2cae1a56e40d2354cf40ff31","modified":1751118257489},{"_id":"themes/maupassant/layout/base.pug","hash":"ebfbb48e5f4b6810d5ea0b9e1bb252196ff698e8","modified":1751118257489},{"_id":"themes/maupassant/layout/blogroll.pug","hash":"31106223b01f45ab0b9747f91db104b0f0d1d4cc","modified":1751118257489},{"_id":"themes/maupassant/layout/index.pug","hash":"3e71a8b314b57a3e8b9f1d275c482361025afb23","modified":1751118257489},{"_id":"themes/maupassant/layout/page.pug","hash":"9b72086ff877de064f804a59684140af09470484","modified":1751118257489},{"_id":"themes/maupassant/layout/single-column.pug","hash":"0593f261dc208bb0b5c4232eb41eff597a291bd9","modified":1751118257489},{"_id":"themes/maupassant/layout/post.pug","hash":"f69362f8bffcccf696f793b6084cdec773b85cc1","modified":1751118257489},{"_id":"themes/maupassant/layout/timeline.pug","hash":"cef82a79f57e4e491f2934d990da939c4bebceb6","modified":1751118257489},{"_id":"themes/maupassant/layout/tagcloud.pug","hash":"5c06b2a267070bd866b911cc894f314e97dfe2b4","modified":1751118257489},{"_id":"themes/maupassant/layout/_partial/after_footer.pug","hash":"e3e3edc6bccc3e9b111eeefade998784a147266d","modified":1751118257487},{"_id":"themes/maupassant/layout/_partial/comments.pug","hash":"046d6453fd31e338b8cc9311dc8b6d86a9cca074","modified":1751118257487},{"_id":"themes/maupassant/layout/_partial/helpers.pug","hash":"acdf9e2d52ee86c831fa15ce1570930c5779bc78","modified":1751118257487},{"_id":"themes/maupassant/layout/_partial/darkmode.pug","hash":"82567449d68025cc7fee5259d4769f5ee015aa26","modified":1751118257487},{"_id":"themes/maupassant/layout/_partial/footer.pug","hash":"650781b5bc8c632658ad6880ba663b1e3bfb5798","modified":1751118257487},{"_id":"themes/maupassant/layout/_partial/head.pug","hash":"a0dbd6ca60ff37f6c4f0aa89ee018b4c37b3d71e","modified":1751118257487},{"_id":"themes/maupassant/layout/_partial/mathjax.pug","hash":"b54b56faff9e47ab3ca3cdd55056c73e60776f3c","modified":1751118257487},{"_id":"themes/maupassant/layout/_partial/mathjax2.pug","hash":"f91a71eb8a1af225a4f0f7749fedf534cc0ceae0","modified":1751118257487},{"_id":"themes/maupassant/layout/_partial/paginator.pug","hash":"53f9cb77448e84a98da5eb688e2e12b173c555bb","modified":1751118257487},{"_id":"themes/maupassant/layout/_partial/post_nav.pug","hash":"a2d698c84bb6da08195fe870dbd7215f65388d3f","modified":1751118257487},{"_id":"themes/maupassant/layout/_partial/totop.pug","hash":"8225bbc3cdb9648bc2e6872e5c616a9a1e4def4f","modified":1751118257488},{"_id":"themes/maupassant/layout/_widget/category.pug","hash":"f2e9f6ff02b858b507f61768753b54846491f87a","modified":1751118257488},{"_id":"themes/maupassant/layout/_partial/wordcount.pug","hash":"7dde69ef8f86745b83ba5f03c75717a782752f2b","modified":1751118257488},{"_id":"themes/maupassant/layout/_partial/tag.pug","hash":"a21ffd35f129244729ad64128cafe4781447c96d","modified":1751118257487},{"_id":"themes/maupassant/layout/_widget/donate.pug","hash":"859eddafd2762072bc5af850038ff377578b0ce4","modified":1751118257488},{"_id":"themes/maupassant/layout/_widget/info.pug","hash":"82359802de5a4e3d80ec9a3737b071fd5c3be221","modified":1751118257488},{"_id":"themes/maupassant/layout/_widget/recent_posts.pug","hash":"5a86fcd97933c665b5afef701d8b30cfd2952691","modified":1751118257488},{"_id":"themes/maupassant/layout/_widget/links.pug","hash":"3f6048423887f359bb97d17621e961495d209a7c","modified":1751118257488},{"_id":"themes/maupassant/layout/_widget/copyright.pug","hash":"17e68ea3e87f128819d16ec30cd506a51fe80a7f","modified":1751118257488},{"_id":"themes/maupassant/layout/_widget/recent_comments.pug","hash":"e63c9f0a770324a03146fc263f3000c7cdc59631","modified":1751118257488},{"_id":"themes/maupassant/layout/_widget/tag.pug","hash":"9b73975ac67b471ae91803b8477932d2c5e5a4f2","modified":1751118257488},{"_id":"themes/maupassant/layout/_widget/search.pug","hash":"a141293ce93b312f4db9f28207d02ee578ede359","modified":1751118257488},{"_id":"themes/maupassant/source/css/copycode.scss","hash":"e2463b8dacf629e180a1b6cd80667ca8044292eb","modified":1751118257489},{"_id":"themes/maupassant/source/css/copyright.scss","hash":"a418da11a88d1feb14500df42ed97a64da6a7611","modified":1751118257490},{"_id":"themes/maupassant/source/css/donate.scss","hash":"95b2fd65042afecc0b5530847c369bcc11d74bd0","modified":1751118257490},{"_id":"themes/maupassant/source/css/search.scss","hash":"9406e138d7bb6a9ef4a067eba1dafa627519c8a7","modified":1751118257490},{"_id":"themes/maupassant/source/css/style.scss","hash":"388b9d5d850c042da2997d17c90a99fb83cb0150","modified":1751118257490},{"_id":"themes/maupassant/source/img/alipay.svg","hash":"3d94d2f9b09e352802628c9225578e1086f5fef3","modified":1751118257490},{"_id":"themes/maupassant/source/img/avatar.png","hash":"2f701dadc2dc8eb637f48b5eedf9bca7fb5fd031","modified":1751118257490},{"_id":"themes/maupassant/source/img/bitcoin.svg","hash":"590b6b6462896168d08b30dfe2de5f08950d5553","modified":1751118257490},{"_id":"themes/maupassant/source/img/github.svg","hash":"277798d16cb6106e45ef74f6b9972011fa43401b","modified":1751118257491},{"_id":"themes/maupassant/source/img/like.svg","hash":"e6e4bd1af076be9358316cac89efdc22ef4a5064","modified":1751118257491},{"_id":"themes/maupassant/source/img/wechat.svg","hash":"19c1f68ec8c0b8e9f7855e7a6e78077f70a1aedc","modified":1751118257491},{"_id":"themes/maupassant/source/img/paypal.svg","hash":"09786c983a10bc570dcd05b87cec601e9d01eb00","modified":1751118257491},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1751118257491},{"_id":"themes/maupassant/source/js/copycode.js","hash":"fde1f153bab1f00ae8930668094c00aa9ff3c7a3","modified":1751118257491},{"_id":"themes/maupassant/source/js/donate.js","hash":"bdddd8d9847462d020f7a511e7e12c046223195d","modified":1751118257491},{"_id":"themes/maupassant/source/js/copyright.js","hash":"7b1bd775ea22abf33d57f78628f436bf656e439a","modified":1751118257491},{"_id":"themes/maupassant/source/js/fancybox.js","hash":"0ec64dd79760e01f7d88611b1bd5221ec30b80cb","modified":1751118257492},{"_id":"themes/maupassant/source/js/love.js","hash":"5cf89f622bf891cf1986845eb92eadef6f358eb7","modified":1751118257492},{"_id":"themes/maupassant/source/js/search.js","hash":"6fdfd143646d12b8dbef9b5809cea768192f08aa","modified":1751118257492},{"_id":"themes/maupassant/source/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1751118257492},{"_id":"themes/maupassant/source/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1751118257492},{"_id":"themes/maupassant/source/js/share.js","hash":"a2f9de374523dc7f2ddb90ed5f24b668c20d9272","modified":1751118257492},{"_id":"themes/maupassant/source/js/recent-comments.js","hash":"78708f86aa1fdcc003a056b1f91aac62d31bb012","modified":1751118257492},{"_id":"source/pdf/Combinatorics of permutations (Miklos Bona) (Z-Library).pdf","hash":"c97ad87d6fc2c3feaf87b5560d64db79b6bf8d11","modified":1751118257484},{"_id":"public/search.xml","hash":"1cc983ee28cfed6e6852022e82361b22a3700b5a","modified":1751119106701},{"_id":"public/2025/06/28/test/index.html","hash":"5d578fc3345f05e016645cb99cf3a43643255330","modified":1751119106701},{"_id":"public/2025/05/24/0012/index.html","hash":"70001615088059c0658328c0d3c9d89910336403","modified":1751119106701},{"_id":"public/2025/04/25/0011/index.html","hash":"9e58aaacf5936de1f571c1d2798e46c23feeacdc","modified":1751119106701},{"_id":"public/2025/02/15/0010/index.html","hash":"4678d3b22312ef2671cfa1149a8e49333b5a7d23","modified":1751119106701},{"_id":"public/2025/02/03/0009/index.html","hash":"ba42f9b6f4e826989cad48da9e97fc15c217a613","modified":1751119106701},{"_id":"public/2024/11/30/0007/index.html","hash":"12aedf051f81935f1b260b0535991f69f2241db8","modified":1751119106701},{"_id":"public/2024/11/30/0008/index.html","hash":"6ac113cf2cb7b0d6221437c45c8dd80e56ede612","modified":1751119106701},{"_id":"public/2024/11/25/0006/index.html","hash":"c4037afbef2fe0dc3a78b7067457e93fd603fe4f","modified":1751119106701},{"_id":"public/2024/11/03/0005/index.html","hash":"a1522ec086371e48e42a1fcfb963af20062be43d","modified":1751119106701},{"_id":"public/2024/10/17/0004/index.html","hash":"93e4bdb0e91c67ecb031b2fc4e015679a8930625","modified":1751119106701},{"_id":"public/2024/10/10/0002/index.html","hash":"8e58783de18eb61db401d43475924b0dae96f433","modified":1751119106701},{"_id":"public/2024/10/16/0003/index.html","hash":"451718c37ebc817dbbfe8c8e2e17a3b83a931014","modified":1751119106701},{"_id":"public/2024/08/30/0001/index.html","hash":"f323e7a2da3658bfedef933b28c27793ddb23d17","modified":1751119106701},{"_id":"public/2024/08/26/0000/index.html","hash":"27bd61a55812600e5383dc4b665e00b2f8d9097a","modified":1751119106701},{"_id":"public/archives/index.html","hash":"979ae6e4706d5d6358b42e3f2f2fe7aa3cc505e8","modified":1751119106701},{"_id":"public/archives/page/2/index.html","hash":"07c6ac749600b6f7d8982eb6d01403db94ba2247","modified":1751119106701},{"_id":"public/archives/2024/index.html","hash":"83b1303801c6c77aa59e1871a6e00fa8a1c2557a","modified":1751119106701},{"_id":"public/archives/2024/08/index.html","hash":"ca08c2a11c7ab91f8e57119ae52e91334c10869f","modified":1751119106701},{"_id":"public/archives/2024/10/index.html","hash":"e81ef5875f14d1cbe2dcadb3003667c211630e0f","modified":1751119106701},{"_id":"public/archives/2024/11/index.html","hash":"61c37cfad9656413de31b88c6bc1d4db4c3197a9","modified":1751119106701},{"_id":"public/archives/2025/index.html","hash":"e937f0ef3c08f217588b34cb6c29837a8a263097","modified":1751119106701},{"_id":"public/archives/2025/02/index.html","hash":"0ba54ac767013d9a9c6cdce141033add7ad623c5","modified":1751119106701},{"_id":"public/archives/2025/04/index.html","hash":"5dcd5b4e3308e9a92d5b5d0a565ea5fa19220aa7","modified":1751119106701},{"_id":"public/archives/2025/05/index.html","hash":"3bcba16256eec75232d5ee97058de3caf86ee2b7","modified":1751119106701},{"_id":"public/archives/2025/06/index.html","hash":"9e67ca4a63e13409dc34dc8e240c21202b541589","modified":1751119106701},{"_id":"public/categories/随笔/index.html","hash":"68dcbebe5860e038d274b35c664ed55c62dc486f","modified":1751119106701},{"_id":"public/categories/做题记录/index.html","hash":"bdd047b4ba69d573cecdc2dbcff7e071ad83fc67","modified":1751119106701},{"_id":"public/categories/test/index.html","hash":"b72f226935745407155d445be820cd4559ba8aad","modified":1751119106701},{"_id":"public/index.html","hash":"5f8668eff7c72d65fc8493849f7a7d8814913a52","modified":1751119106701},{"_id":"public/page/2/index.html","hash":"1f4f22ed9bec6a0c0439bdd3078f7d42c2b797ac","modified":1751119106701},{"_id":"public/img/avatar.png","hash":"2f701dadc2dc8eb637f48b5eedf9bca7fb5fd031","modified":1751119106701},{"_id":"public/img/bitcoin.svg","hash":"590b6b6462896168d08b30dfe2de5f08950d5553","modified":1751119106701},{"_id":"public/img/github.svg","hash":"277798d16cb6106e45ef74f6b9972011fa43401b","modified":1751119106701},{"_id":"public/img/alipay.svg","hash":"3d94d2f9b09e352802628c9225578e1086f5fef3","modified":1751119106701},{"_id":"public/img/like.svg","hash":"e6e4bd1af076be9358316cac89efdc22ef4a5064","modified":1751119106701},{"_id":"public/img/paypal.svg","hash":"09786c983a10bc570dcd05b87cec601e9d01eb00","modified":1751119106701},{"_id":"public/img/wechat.svg","hash":"19c1f68ec8c0b8e9f7855e7a6e78077f70a1aedc","modified":1751119106701},{"_id":"public/css/copycode.css","hash":"803d8bf898f47c3929665eb7af97da22f11efacd","modified":1751119106701},{"_id":"public/css/copyright.css","hash":"e857156bd1f971fe6abdc22d2b8c82e495387438","modified":1751119106701},{"_id":"public/css/donate.css","hash":"d631def20dfb661439c506f28dc791f331d506f8","modified":1751119106701},{"_id":"public/css/search.css","hash":"0d0f73b357c3bc5077ef657c73f679b22bea93fb","modified":1751119106701},{"_id":"public/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1751119106701},{"_id":"public/js/copycode.js","hash":"fde1f153bab1f00ae8930668094c00aa9ff3c7a3","modified":1751119106701},{"_id":"public/css/style.css","hash":"b8bd7e1fcd5abf50d3c11028d1da3b6f0b4cf5c8","modified":1751119106701},{"_id":"public/js/donate.js","hash":"bdddd8d9847462d020f7a511e7e12c046223195d","modified":1751119106701},{"_id":"public/js/copyright.js","hash":"7b1bd775ea22abf33d57f78628f436bf656e439a","modified":1751119106701},{"_id":"public/js/fancybox.js","hash":"0ec64dd79760e01f7d88611b1bd5221ec30b80cb","modified":1751119106701},{"_id":"public/js/love.js","hash":"5cf89f622bf891cf1986845eb92eadef6f358eb7","modified":1751119106701},{"_id":"public/js/search.js","hash":"6fdfd143646d12b8dbef9b5809cea768192f08aa","modified":1751119106701},{"_id":"public/js/share.js","hash":"a2f9de374523dc7f2ddb90ed5f24b668c20d9272","modified":1751119106701},{"_id":"public/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1751119106701},{"_id":"public/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1751119106701},{"_id":"public/js/recent-comments.js","hash":"78708f86aa1fdcc003a056b1f91aac62d31bb012","modified":1751119106701},{"_id":"public/favicon.ico","hash":"f97229749d1111b0f6009a79ca528d016216b3a6","modified":1751119106701},{"_id":"public/pdf/Combinatorics of permutations (Miklos Bona) (Z-Library).pdf","hash":"c97ad87d6fc2c3feaf87b5560d64db79b6bf8d11","modified":1751119106701}],"Category":[{"name":"随笔","_id":"cmcgb3qs10002ewrd05uf5h2c"},{"name":"做题记录","_id":"cmcgb3qs30006ewrdet0cahmq"},{"name":"test","_id":"cmcgb3qs7000vewrd15xzb0cz"}],"Data":[],"Page":[],"Post":[{"title":"Hello！","date":"2024-08-25T16:00:00.000Z","toc":true,"mathjax":true,"_content":"### 前言\n\n转战github博客了，OI退役之后会在上面更文章的，我也不打算把cnblogs和洛谷文章搬运过来了。\n\n主要是因为cnblogs感觉要倒闭了，洛谷文章自由度太低，就投靠了github。暂时没有自己搭服务器的想法，以后可能会的。\n\n感谢Bot-wxt1221的帮助，没有他的帮助就没有这个博客。\n\n这篇博客大概就更些学习笔记，做题记录，随笔啥的。\n\n### 关于我\n\n目前是个普通高中生，坐标SC-CD。\n\n喜欢足球、游戏、数学。\n\n学习笔记应该就是记一些数学、计算机相关的东西\n\n做题记录应该就是记一些CP题和MO题\n\n随笔想写啥就写啥。\n","source":"_posts/0000.md","raw":"---\ntitle: Hello！\ndate: 2024-08-26\ntoc: true\ncategory: [随笔]\nmathjax: true\n---\n### 前言\n\n转战github博客了，OI退役之后会在上面更文章的，我也不打算把cnblogs和洛谷文章搬运过来了。\n\n主要是因为cnblogs感觉要倒闭了，洛谷文章自由度太低，就投靠了github。暂时没有自己搭服务器的想法，以后可能会的。\n\n感谢Bot-wxt1221的帮助，没有他的帮助就没有这个博客。\n\n这篇博客大概就更些学习笔记，做题记录，随笔啥的。\n\n### 关于我\n\n目前是个普通高中生，坐标SC-CD。\n\n喜欢足球、游戏、数学。\n\n学习笔记应该就是记一些数学、计算机相关的东西\n\n做题记录应该就是记一些CP题和MO题\n\n随笔想写啥就写啥。\n","slug":"0000","published":1,"updated":"2025-06-28T13:44:17.465Z","comments":1,"layout":"post","photos":[],"_id":"cmcgb3qry0000ewrdecj51axb","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>转战github博客了，OI退役之后会在上面更文章的，我也不打算把cnblogs和洛谷文章搬运过来了。</p>\n<p>主要是因为cnblogs感觉要倒闭了，洛谷文章自由度太低，就投靠了github。暂时没有自己搭服务器的想法，以后可能会的。</p>\n<p>感谢Bot-wxt1221的帮助，没有他的帮助就没有这个博客。</p>\n<p>这篇博客大概就更些学习笔记，做题记录，随笔啥的。</p>\n<h3 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h3><p>目前是个普通高中生，坐标SC-CD。</p>\n<p>喜欢足球、游戏、数学。</p>\n<p>学习笔记应该就是记一些数学、计算机相关的东西</p>\n<p>做题记录应该就是记一些CP题和MO题</p>\n<p>随笔想写啥就写啥。</p>\n","excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>转战github博客了，OI退役之后会在上面更文章的，我也不打算把cnblogs和洛谷文章搬运过来了。</p>\n<p>主要是因为cnblogs感觉要倒闭了，洛谷文章自由度太低，就投靠了github。暂时没有自己搭服务器的想法，以后可能会的。</p>\n<p>感谢Bot-wxt1221的帮助，没有他的帮助就没有这个博客。</p>\n<p>这篇博客大概就更些学习笔记，做题记录，随笔啥的。</p>\n<h3 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h3><p>目前是个普通高中生，坐标SC-CD。</p>\n<p>喜欢足球、游戏、数学。</p>\n<p>学习笔记应该就是记一些数学、计算机相关的东西</p>\n<p>做题记录应该就是记一些CP题和MO题</p>\n<p>随笔想写啥就写啥。</p>\n"},{"title":"有趣数学题1","date":"2024-08-29T16:00:00.000Z","toc":true,"mathjax":true,"_content":"\n晚上睡不着刷知乎，突然给我推送了这个问题，有人邀请我回答。\n\n我看了看，小东西挺别致，给他做了。\n\n下图是问题：\n\n![](https://s2.loli.net/2024/08/30/zvEdq85a2Nwp3lP.jpg)\n\n以下是我的解答：\n\n首先 $n=2$ 时显然合法。探索若最大值大于 $2$ 时的性质。\n\n先规定符号：\n\n任选三组人记为 $S_1,S_2,S_3$，记数列 $x_1,x_2,x_3$ 分别表示在上述3个集合中任选1个，2个，3个集合的交集大小的和。\n\n$Lemma 1.$ 此时任意两组人所组成的集合交集必定为2。\n\n证明：\n\n易知 $x_1=18$\n\n假设 $S_1 \\cap S_2 = \\emptyset$。\n\n$\\Rightarrow S_1 \\cup S_2 = U$\n\n$\\Rightarrow S_1 \\cup S_2 \\cup S_3 = U$\n\n同时 $x_3 = 0$\n\n此时三元容斥得 $x_1 - x_2 + x_3 = U$\n\n带入数据得 $x_2=6$\n\n$\\Rightarrow |S_1 \\cap S_2| + |S_1 \\cap S_3| + |S_2 \\cap S_3|=6$\n\n$\\Rightarrow |S_1 \\cap S_3| + |S_2 \\cap S_3|=6$\n\n$\\Rightarrow \\min (|S_1 \\cap S_3| , |S_2 \\cap S_3|) \\ge 3$\n\n故假设不成立。同上易得 $|S_1 \\cap S_2|=1$ 也不合法。证毕。\n\n$Lemma 2.$ 此时任意三组人交集为空集，任意三组并集为全集\n\n由 $Lemma 1$ 和三元容斥易得 $18 - 6 + x_3 = |S_1 \\cup S_2 \\cup S_3|$\n\n又因为 $x_3 \\ge 0$ $\\Rightarrow |S_1 \\cup S_2 \\cup S_3| \\ge 12$\n\n同时 $\\Rightarrow |S_1 \\cup S_2 \\cup S_3| \\le 12$\n\n$\\Rightarrow |S_1 \\cup S_2 \\cup S_3| = 12$\n\n$\\Rightarrow x_3 = 0$ 证毕。\n\n现在来证明 $n$ 一定小于 5。\n\n若 $n \\ge 5$，任选5组人记为 $S_1,S_2,S_3,S_4,S_5$，记数列 $x_1,x_2,x_3,x_4,x_5$ 分别表示在上述5个集合中任选1个，2个，3个，4个，5个集合的交集大小的和。\n\n容斥原理和上述引理易得 $x_1-x_2+x_3-x_4+x_5=12$\n\n化简并代入数据 $x_5-x_4 = 12$ 等式显然不成立。证毕。\n\n此时给出一组 $n=4$ 的构造，\n\n$1,2,3,4,5,6$\n\n$1,2,7,8,9,10$\n\n$3,4,7,8,11,12$\n\n$5,6,9,10,11,12$\n\n故n的最大值为4。\n","source":"_posts/0001.md","raw":"---\ntitle: 有趣数学题1\ndate: 2024-08-30\ntoc: true\ncategory: [做题记录]\nmathjax: true\n---\n\n晚上睡不着刷知乎，突然给我推送了这个问题，有人邀请我回答。\n\n我看了看，小东西挺别致，给他做了。\n\n下图是问题：\n\n![](https://s2.loli.net/2024/08/30/zvEdq85a2Nwp3lP.jpg)\n\n以下是我的解答：\n\n首先 $n=2$ 时显然合法。探索若最大值大于 $2$ 时的性质。\n\n先规定符号：\n\n任选三组人记为 $S_1,S_2,S_3$，记数列 $x_1,x_2,x_3$ 分别表示在上述3个集合中任选1个，2个，3个集合的交集大小的和。\n\n$Lemma 1.$ 此时任意两组人所组成的集合交集必定为2。\n\n证明：\n\n易知 $x_1=18$\n\n假设 $S_1 \\cap S_2 = \\emptyset$。\n\n$\\Rightarrow S_1 \\cup S_2 = U$\n\n$\\Rightarrow S_1 \\cup S_2 \\cup S_3 = U$\n\n同时 $x_3 = 0$\n\n此时三元容斥得 $x_1 - x_2 + x_3 = U$\n\n带入数据得 $x_2=6$\n\n$\\Rightarrow |S_1 \\cap S_2| + |S_1 \\cap S_3| + |S_2 \\cap S_3|=6$\n\n$\\Rightarrow |S_1 \\cap S_3| + |S_2 \\cap S_3|=6$\n\n$\\Rightarrow \\min (|S_1 \\cap S_3| , |S_2 \\cap S_3|) \\ge 3$\n\n故假设不成立。同上易得 $|S_1 \\cap S_2|=1$ 也不合法。证毕。\n\n$Lemma 2.$ 此时任意三组人交集为空集，任意三组并集为全集\n\n由 $Lemma 1$ 和三元容斥易得 $18 - 6 + x_3 = |S_1 \\cup S_2 \\cup S_3|$\n\n又因为 $x_3 \\ge 0$ $\\Rightarrow |S_1 \\cup S_2 \\cup S_3| \\ge 12$\n\n同时 $\\Rightarrow |S_1 \\cup S_2 \\cup S_3| \\le 12$\n\n$\\Rightarrow |S_1 \\cup S_2 \\cup S_3| = 12$\n\n$\\Rightarrow x_3 = 0$ 证毕。\n\n现在来证明 $n$ 一定小于 5。\n\n若 $n \\ge 5$，任选5组人记为 $S_1,S_2,S_3,S_4,S_5$，记数列 $x_1,x_2,x_3,x_4,x_5$ 分别表示在上述5个集合中任选1个，2个，3个，4个，5个集合的交集大小的和。\n\n容斥原理和上述引理易得 $x_1-x_2+x_3-x_4+x_5=12$\n\n化简并代入数据 $x_5-x_4 = 12$ 等式显然不成立。证毕。\n\n此时给出一组 $n=4$ 的构造，\n\n$1,2,3,4,5,6$\n\n$1,2,7,8,9,10$\n\n$3,4,7,8,11,12$\n\n$5,6,9,10,11,12$\n\n故n的最大值为4。\n","slug":"0001","published":1,"updated":"2025-06-28T13:44:17.465Z","comments":1,"layout":"post","photos":[],"_id":"cmcgb3qs00001ewrdhb7oh72s","content":"<p>晚上睡不着刷知乎，突然给我推送了这个问题，有人邀请我回答。</p>\n<p>我看了看，小东西挺别致，给他做了。</p>\n<p>下图是问题：</p>\n<p><img src=\"https://s2.loli.net/2024/08/30/zvEdq85a2Nwp3lP.jpg\" alt=\"\"></p>\n<p>以下是我的解答：</p>\n<p>首先 $n=2$ 时显然合法。探索若最大值大于 $2$ 时的性质。</p>\n<p>先规定符号：</p>\n<p>任选三组人记为 $S_1,S_2,S_3$，记数列 $x_1,x_2,x_3$ 分别表示在上述3个集合中任选1个，2个，3个集合的交集大小的和。</p>\n<p>$Lemma 1.$ 此时任意两组人所组成的集合交集必定为2。</p>\n<p>证明：</p>\n<p>易知 $x_1=18$</p>\n<p>假设 $S_1 \\cap S_2 = \\emptyset$。</p>\n<p>$\\Rightarrow S_1 \\cup S_2 = U$</p>\n<p>$\\Rightarrow S_1 \\cup S_2 \\cup S_3 = U$</p>\n<p>同时 $x_3 = 0$</p>\n<p>此时三元容斥得 $x_1 - x_2 + x_3 = U$</p>\n<p>带入数据得 $x_2=6$</p>\n<p>$\\Rightarrow |S_1 \\cap S_2| + |S_1 \\cap S_3| + |S_2 \\cap S_3|=6$</p>\n<p>$\\Rightarrow |S_1 \\cap S_3| + |S_2 \\cap S_3|=6$</p>\n<p>$\\Rightarrow \\min (|S_1 \\cap S_3| , |S_2 \\cap S_3|) \\ge 3$</p>\n<p>故假设不成立。同上易得 $|S_1 \\cap S_2|=1$ 也不合法。证毕。</p>\n<p>$Lemma 2.$ 此时任意三组人交集为空集，任意三组并集为全集</p>\n<p>由 $Lemma 1$ 和三元容斥易得 $18 - 6 + x_3 = |S_1 \\cup S_2 \\cup S_3|$</p>\n<p>又因为 $x_3 \\ge 0$ $\\Rightarrow |S_1 \\cup S_2 \\cup S_3| \\ge 12$</p>\n<p>同时 $\\Rightarrow |S_1 \\cup S_2 \\cup S_3| \\le 12$</p>\n<p>$\\Rightarrow |S_1 \\cup S_2 \\cup S_3| = 12$</p>\n<p>$\\Rightarrow x_3 = 0$ 证毕。</p>\n<p>现在来证明 $n$ 一定小于 5。</p>\n<p>若 $n \\ge 5$，任选5组人记为 $S_1,S_2,S_3,S_4,S_5$，记数列 $x_1,x_2,x_3,x_4,x_5$ 分别表示在上述5个集合中任选1个，2个，3个，4个，5个集合的交集大小的和。</p>\n<p>容斥原理和上述引理易得 $x_1-x_2+x_3-x_4+x_5=12$</p>\n<p>化简并代入数据 $x_5-x_4 = 12$ 等式显然不成立。证毕。</p>\n<p>此时给出一组 $n=4$ 的构造，</p>\n<p>$1,2,3,4,5,6$</p>\n<p>$1,2,7,8,9,10$</p>\n<p>$3,4,7,8,11,12$</p>\n<p>$5,6,9,10,11,12$</p>\n<p>故n的最大值为4。</p>\n","excerpt":"","more":"<p>晚上睡不着刷知乎，突然给我推送了这个问题，有人邀请我回答。</p>\n<p>我看了看，小东西挺别致，给他做了。</p>\n<p>下图是问题：</p>\n<p><img src=\"https://s2.loli.net/2024/08/30/zvEdq85a2Nwp3lP.jpg\" alt=\"\"></p>\n<p>以下是我的解答：</p>\n<p>首先 $n=2$ 时显然合法。探索若最大值大于 $2$ 时的性质。</p>\n<p>先规定符号：</p>\n<p>任选三组人记为 $S_1,S_2,S_3$，记数列 $x_1,x_2,x_3$ 分别表示在上述3个集合中任选1个，2个，3个集合的交集大小的和。</p>\n<p>$Lemma 1.$ 此时任意两组人所组成的集合交集必定为2。</p>\n<p>证明：</p>\n<p>易知 $x_1=18$</p>\n<p>假设 $S_1 \\cap S_2 = \\emptyset$。</p>\n<p>$\\Rightarrow S_1 \\cup S_2 = U$</p>\n<p>$\\Rightarrow S_1 \\cup S_2 \\cup S_3 = U$</p>\n<p>同时 $x_3 = 0$</p>\n<p>此时三元容斥得 $x_1 - x_2 + x_3 = U$</p>\n<p>带入数据得 $x_2=6$</p>\n<p>$\\Rightarrow |S_1 \\cap S_2| + |S_1 \\cap S_3| + |S_2 \\cap S_3|=6$</p>\n<p>$\\Rightarrow |S_1 \\cap S_3| + |S_2 \\cap S_3|=6$</p>\n<p>$\\Rightarrow \\min (|S_1 \\cap S_3| , |S_2 \\cap S_3|) \\ge 3$</p>\n<p>故假设不成立。同上易得 $|S_1 \\cap S_2|=1$ 也不合法。证毕。</p>\n<p>$Lemma 2.$ 此时任意三组人交集为空集，任意三组并集为全集</p>\n<p>由 $Lemma 1$ 和三元容斥易得 $18 - 6 + x_3 = |S_1 \\cup S_2 \\cup S_3|$</p>\n<p>又因为 $x_3 \\ge 0$ $\\Rightarrow |S_1 \\cup S_2 \\cup S_3| \\ge 12$</p>\n<p>同时 $\\Rightarrow |S_1 \\cup S_2 \\cup S_3| \\le 12$</p>\n<p>$\\Rightarrow |S_1 \\cup S_2 \\cup S_3| = 12$</p>\n<p>$\\Rightarrow x_3 = 0$ 证毕。</p>\n<p>现在来证明 $n$ 一定小于 5。</p>\n<p>若 $n \\ge 5$，任选5组人记为 $S_1,S_2,S_3,S_4,S_5$，记数列 $x_1,x_2,x_3,x_4,x_5$ 分别表示在上述5个集合中任选1个，2个，3个，4个，5个集合的交集大小的和。</p>\n<p>容斥原理和上述引理易得 $x_1-x_2+x_3-x_4+x_5=12$</p>\n<p>化简并代入数据 $x_5-x_4 = 12$ 等式显然不成立。证毕。</p>\n<p>此时给出一组 $n=4$ 的构造，</p>\n<p>$1,2,3,4,5,6$</p>\n<p>$1,2,7,8,9,10$</p>\n<p>$3,4,7,8,11,12$</p>\n<p>$5,6,9,10,11,12$</p>\n<p>故n的最大值为4。</p>\n"},{"title":"CF/AtC乱做记录","date":"2024-10-09T16:00:00.000Z","toc":false,"mathjax":true,"_content":"每50题就开个新文章。\n\n同步于[洛谷专栏](https://www.luogu.com.cn/article/fcbug12f)\n\n马上也快退役了，干点自己想干的事吧，别太功利了。 \n\n早就想开这个记录了，碍于之前学校各种各样的题单让我没时间做（其实时间是颓没的）。\n\n现在感觉做啥都也无所谓了，开始记录吧！\n\n本博客就简单记录一下，就记个大体思路。\n\n### 1.CF1773G Game of Questions *2800\n\n很神的状压DP啊，发现人数不多遂想到状压一下人数，设 $dp_S$ 表示场上只剩状态为 $S$ 的人，然后Genie赢的概率。\n\n难点在于转移，我们并不知道有哪些问题之前被问过，但是状压问题的话就太夸张了。注意到一个性质，一个问题问几遍都和问一遍等价。这个性质看上去很显然，但却是转移的关键所在。设 $w_{S,T}$ 表示从能让状态 $S$ 变成状态 $T$ 的问题个数。预处理出 $w$ 再DP即可。\n\n### 2.CF1775F Laboratory on Pluto *2500\n\n牛的数学题，感觉真不错。第一问是简单的，一边取成 $\\sqrt{n}$ 就是最小值。虽然我不是很会证，但你要枚举根号做好像也能过。\n\n主要是这个第二问的数数就比较困难，考虑连通块的形式，就是一个矩形四缺口这种感觉，但是缺口一定是阶梯状的，就意味着求的是拆分数，可以dp求解。求完了一个角上的方案数就背包一下就行了。这题牛就牛在单步似乎都很好想，合在一起就有点困难了，但也其实还好，我自己做的时候就是拆分数那里有点不会，可以看看 P1025 srf的那篇DP题解，学一下k部拆分数的DP求法，感觉挺妙的。\n\n### 3.AGC045A Xor Battle *2000\n\n很有趣的一道博弈论题目。还好开了题解，不然死都不会做。考虑从后往前枚举，设集合 $S_i$ 表示从 $i$ 开始走，有哪些数能使0赢。考虑使用线性基进行转移即可。\n\n### 4.AGC043D Merge Triplets *2700\n\n非常秀的DP题，考虑答案的形状。答案排列按下降段划分每一段都不会超过二，而且长为1的段一定比2的多。\n\n此乃本题第一秀。于是我们设计出状态 $dp_{i,j}$ 表示填到了第 $i$ 个位置长为1的段比长为2的段多了 $j$ 个的方案数。\n\n考虑转移，观察排列，按照偏序关系建出一棵外向树，用数拓扑序的方式进行DP，此乃二秀。\n\n### 5.ARC093E Bichrome Spanning Tree *2500\n\n非常牛的数数题。考虑原图的最小生成树，如果mst都比 $x$ 大，那肯定是没有方案的。 如果mst和 $x$ 一样大。那就意味着能够成mst的边必有异色，这个是好数的。另外一种困难些，考虑钦定一条边在权为 $x$ 的生成树中，那他这棵生成树是包含它的最小生成树，必定与一棵原图的最小生成树有交，构成最小生成树的边一定同色，这样数数就方便了许多。\n\n### 6.ABC279G At Most 2 Colors *2400\n\n牛的DP题，考虑状态设计，设 $dp_{i , 1/2}$ 表示填到 $i$ 这个位置时，最后 $k-1$ 个位置有几种不同颜色，$k-1$ 这个地方设计的有点巧妙，我也是这个地方想不到。如果光设计个 $k$,那么 $i - k$ 这个位置填啥又跟 $i$ 这个位置填啥没关系，会影响转移，换成 $k-1$ 就不会了。关键是求答案时答案对吗？看看自己的方程，是不是同时保证了后k个也只有两个颜色了呢。\n\n### 7.CF1385G Columns Swaps *2300\n\n2-sat 板子，无需多言\n\n### 8.ABC281G Farthest City *2300\n\n看你想不想的到BFS树结构，想到了就是一道简单DP。\n\n### 9.CF1657E Star MST *2200\n\n找到边权之间的偏序关系，有一个跟上一题类似的DP。\n\n### 10.ARC103F Distance Sums *2800\n\n妙妙构造题，非常的神奇。一看一个没思路。观察一下，发现d值最大的一定是某个叶子，d值最小的一定是重心。\n\n然后就考虑从叶子开始向上构造推测父亲是谁（钦定重心为根）。类似换根DP去转移然后二分推出父亲即可。\n\n### 11.ARC006D Median Pyramid Hard * 3000\n\n人才题。考虑二分？为什么要考虑这个？或许是因为中位数题好多都要二分。二分什么？二分答案。我们将大于二分出来的东西的数都看作是1其他看作是0，那么只需要关注顶部数的01情况，而这取决于最靠近中间的相同数对是0还是1，于是做完了。\n\n### 12.CF1659E AND-MEX Walk *2200\n\n考虑答案的范围，容易发现答案只有可能是0,1,2，分别使用并查集判断一下即可。\n\n### 13.CF1473E Minimum Path *2400\n\n模拟赛原题，有点牛的。要求的式子很有最短路的感觉，式子的本质是抽出一条最长的换上一条最短的。\n\nOK，比较美妙的一步来了。要想用最短路去求解，那么必须把后面那一坨塞进 $\\sum$ 里面去。\n\n刚刚想了式子的本质，现在扩展一下，任选两条边，用一条去换另一条的最小值，此时茅塞顿开，这个问题就可以用分层图最短路进行求解了。\n\n### 14.ARC127E Priority Queue *2700\n\n比较感性的一个题。正难则反，考虑计算被删除的集合的方案数，容易发现每个删除位置都有取值范围，而且还有一个奇奇怪怪的性质，每一次删的数都可以是离该次删除最接近的1，这样不会影响方案数，交换法不难证明。此时上文的取值范围也可以用类似于括号配对的方法求出来。既然集合计数那我就钦定一下数列是单调递增的，同时发现如果单增数列能取到，单增数列的排列也能取，反之同理，于是乎DP即可。\n\n感性就感性在每个性质看上去好像很显然证起来还是有一些困难的。\n\n### 15.ARC180D Division into 3 *2700\n\n放在任务里面吃灰的，今天终于给他做了。算是一种套路题吧？观察到区间最大值一定会被取到，分类讨论一下在哪个段。\n\n在A/C段中就用扫描线算答案，在B中就只让AC取左右端点各一个，这题也就完了。感觉还是很神奇，从一个显然的性质推导出来整个做法\n\n### 16.CF335F Buy One, Get One Free *3000\n\n反悔贪心神仙题，反悔策略怎么想出来的，大概率是用归纳法。显然是把序列从大到小排个序，同样代价的物品就分为一组，按组进行考虑。维护一个小根堆记录当前白嫖的东西的价值，每次先算出当前这一轮一开始就可以白嫖多少个，先不忙压入小根堆避免造成影响。剩下的东西就考虑是买好还是不买好，按反悔贪心策略执行即可（不想细说了，毕竟不是题解）。\n\n### 17.CF516D Drazil and Morning Exercise *2800\n\n询问次数只有50，考虑使用大于 O(n) 复杂度的东西执行单次询问。\n\n思考怎么样才能使联通块的计算更加方便，钦定一个根，枚举联通块的根。\n\n然后呢，要是联通块的 max，min 的差值求起来方便就更好了。\n\n不妨让他随层数单调，如何实现，以f最小的点为根即可，每次询问树上差分。\n\n### 18.ARC167C MST on Line++ *2400\n\n考虑数每个 $a_i$ 在 MST 中的出现次数。容易发现 $a_i$ 的顺序与答案没啥关系。接下来的一步比较神秘，考虑一个子问题，如果只能选小于等于 $a_i$ 的边，最多能选多少条，把每个排列的答案加起来，记为 $f_i$，那么 $ans=\\sum_{i=1}^{n} a_i \\times f_i$，组合求 $f_i$ 即可。\n\n### 19.ARC123D Inc, Dec - Decomposition *2100\n\n简单题啊，居然有自己能很快做出来的题，尝试构造 $b,c$，这是简单的，感性理解一下，然后三分一下偏差值就是答案了。\n\n三分可以理解正确性，但是为什么想我那样构造就是答案了呢，其他的构造方法对吗？感觉很奇怪啊。\n\n### 20.CF1270H Number of Components *3300\n\n先发现一个性质：如果 $l$ 和 $r$ 在一个联通块内，那么 $[l , r]$ 就都在一个联通块内，证明是容易的。\n\n发现了这个性质之后，我们只需要求 $i$ 和 $i + 1$ 是否在一个联通块内。具体的判断方式是 $\\min_{j=1} ^{i} a_j \\ge max_{j=i+1}^{n} a_j$。记 $w=max_{j=i+1}^{n} a_j$，把数组内大于 $w$ 的设为 $1$，否则设为 $0$。如果 $i$ 和 $i + 1$ 不在同一联通块内那么二进制序列会长成 $11...100...0$ 这个样子，对于每个w维护一下10段的个数即可。\n\n### 21.CF1548E Gregor and the Two Painters *3400\n\n可以说是一种套路题吧，数网格联通块通用方法就是选个主元，去数有多少个主元，转化成求解偏序问题即可。\n\n注意主元和联通块要有双射关系，不然就假了。这个方法也可以做 SCCPC2024 A 虽然那个题有更简单的方法。\n\n### 22.CF1656G Cycle Palindrome *3200\n\n先考虑构造一组满足回文的排列，再考虑交换相同值的位置使得在同一个环中。\n\n然后再四个四个地换，判一下就行。正确性证明是困难的，不证了。\n\n### 23.ARC156D Xor Sum 5 *2600\n记一个牛逼结论：**若组合数 $\\binom{n}{m}$ 是奇数，那么在二进制下，m是n的子集**\n\n推论：**$\\binom{n}{c1,c2,c3…ck}$为奇数，那么c是n的某一子集的一组二进制划分**\n\n我们就记 $c_i$ 表示第 $i$ 个数的出现次数，当他的sum有贡献时，他就是上文的推论。\n\n所以发现最多40个 $c_i$ 是非零的，于是乎就可以DP了。\n\n### 24.ABC271G Access Counter * 2300\n\n很难不想到矩阵快速幂，但是问题在于我怎么构造矩阵，这是本题的难点。\n\n首先是容易设计出基本DP的， $dp_{i,j}=\\sum_{k=1}^{24}dp_{i-1,k}\\times calc(k,j)$\n\ncalc通过一些基本数列手段可以是可以处理出来的，然后挂到矩阵这题也就结束了。\n\n### 25.CF1042E Vasya and Magic Matrix *2300\n\n朴素的期望DP，好像期望DP都是倒着的，大概就是从终状态转移到始状态的意思。\n\n矩阵的壳是个幌子，根本无需在意，把每个东西单拎出来按权排序后DP即可。\n\n### 26.CF1552E Colors and Intervals *2300\n\n牛的构造题，先观察到每次选的两个点之间一定没有和它们同色的点，不然一定不优。\n\n每个东西被覆盖的次数限制很奇怪，考虑它的意义是什么。看见分母的 $k-1$ 不难联想到同一颜色的段数，那么考虑按段的编号分类，每个段就选限制个颜色即可。\n\n### 27.CF1635F Closest Pair *2800\n\n结论题，设 $L_i$ 表示 $i$ 左边第一个 $w$ 小于等于 i的点，$R_i$ 同理。\n\n那么答案就在 $[L_i,i],[i,R_i]$ 中。转化为二维数点问题即可。\n\n### 28.CF1868C Travel Plan *2400\n\n式子题，考虑对于满二叉树怎么做，会了这个就把原数拆成 $logn$ 个满二叉树即可。\n\n具体的，枚举最大值，记 $ans_i$ 表示最大值 $\\le i$ 的答案，那么最后答案就是 $\\sum_{i=1}^{m}i\\times (ans_i - ans_{i-1})$\n\n对于具体的转移不多赘述，主要就是记两个东西，一个表示这个子树所有东西到根的答案和子树内所以东西的填法的和。\n\n### 29.CF599E Sandy and Nuts *2600\n\n困难的，状态想错了导致举步维艰，想到状态之后这题并不困难，主要是处理限制的时候要稍微注意一下细节。状态是 $dp_{i,S}$ 表示以 $i$ 为根的子树内的点集为 $S$ 的合法方案数。方程就是 $dp_{i,S}=\\sum_{T\\in S} dp_{u,T}\\times dp_{i , S\\oplus T}$。使用钦定技巧避免算重。\n\n### 30.CF623D Birthday *2700\n\n难点解析：揣测出题人。\n\n为啥不让你求模意义下的答案，精度误差为啥允许开这么大，样例解释为啥没有计算过程？有没有种可能，真实值根本算不出来？\n\n想到这里这题大概也就迎刃而解了，计算k轮猜到答案的概率。直接做不好做，考虑容斥进行计算。具体的，计算在最多 $k$ 轮的时候结束的概率。要是知道每个人被猜到几次的话就很容易算概率了。列出式子，每一步贪心即可。收敛速度较快，计算 $3e5$ 次即可通过此题。\n\n### 31.CF407D Largest Submatrix 3 *2700\n\n不难想到 $O(n^4)$ 暴力，枚举行的上下界，对列跑双指针。这个算法难以优化，更换枚举次序。枚举左右界再枚举下边界，类似于区间DP得去转移答案。（子矩阵背景的题目从来没有自己做出来过，呜呜呜）\n\n### 32.CF1844G Tree Weight *3000\n\n牛逼题目，这辈子没见过这么秀的。\n\n首先容易把 $d_i$ 拆成 $dep_i + dep_{i + 1} - 2 \\times dep_{lca(i,i+1)}$\n\n然后就会发现这个东西非常不优美，要是能够拆出来的东西少带点变量就好了，因为 $dep_1$ 我们是知道的，他就是0。少带点变量就会使得这个式子可以递推了！**注意到lca前面有个系数2，对等式两边取个2的模这个东西就没了！** 然后我们就可以考虑按二进制位进行递推了。具体的，设 $ans_{i,j}\\equiv dep_{i} \\mod 2^j$。 那么有 $ans_{i,j}={(d(i-1,i)-ans_{i-1,j}+2\\times ans_{lca(i-1,i),j-1})} \\mod 2^j$最后判一下-1即可。注意力惊人的人可以独立做出来，可惜我不是。\n\n### 33.CF1762D GCD Queries *2100\n\n似乎是比较容易的。其实无非就是就是让你每两次操作排除一个非零的数。按顺序遍历配合上指针优化再加上简单的分讨即可。\n\n### 34.CF1406E Deleting Numbers *2600\n\n非常厉害的交互！有点人类智慧的感觉。\n\n首先是容易想到一个每个质数操作两次在log一下的方法，算算发现操作次数会超。\n\n考虑优化。显然对于上述做法而言，质数这个点是不会变的，那能不能让没啥用每个质数只操作1次呢。\n\n可以的，我们依次对每个质数操作B，然后计算出理论答案，要是不一样的话我们就check一下它的幂次。\n\n可是这样对于最小的质数而言，我们就没法求了。所以每过根号次操作就做一遍 A 1。要是有出入就把块内所有东西都判一遍即可。\n\n### 35.CF1033E Hidden Bipartite Graph *2800\n\n也是非常厉害的交互！更加的人类智慧！\n\n积累一种不一样的判二分图的trick：图中抽一棵生成树，看一下奇数层的点之间有没有连边，偶数层之间有没有连边。\n\n对于这个题而言我们可以先用 $2nlogn$ 次询问分治的去问出一棵生成树来。然后我们再在奇偶层之间随机分治看看有没连边。很巧妙的是这个随机分治，每次把点集大小除以二而且每一层期望操作次数只有两次，非常聪明啊！\n\n### 36.CF1863G Swaps *2800\n\n套路题？容易想到 $a_i$ 向 $i$ 连条边。然后观察一次操作带来的影响，发现一次操作带来一个自环。同时可以构建出一个双射：能生成的序列可以这样构成：如果 $i$ 的入边被操作过，那么这个位置就是 $i$，否则就是一条未被标记的出边指向的点权，这是容易计数的，注意在联通块为环时特殊处理一下即可。\n\n### 37.JOISC2015 F 合鍵\n\n非常好题目，让我认识到自己的不足：对于奇怪的模型就失去了分析的能力。\n\n**容易想到** 把 $l,r$ 拆开一起排序，分讨每一段的贡献情况，然后DP统计贡献即可。\n\n### 38.ABC373G No Cross Matching *2400\n\n场上的时候有种流子的感觉，但是不会建模。现在会了神秘贪心。\n\n非常厉害的转化，相交线段可以通过交换变得不相交，这会使得总距离变短，那么我们是需要让总距离最短即可，按照冒泡排序模拟即可。\n\n### 39.Yahoo Programming Contest 2019 Odd Subrectangles *2600\n\n容易想到转化为异或为1。考虑现在已经选出了一些行，那些列符合答案，记第 $i$ 列的异或和为 $c_i$ ，只要有一个 $c_i$ 等于1，那么这就意味着方案数是 $2^{m-1}$，其他列情况任选，用这一列来调整即可。那么现在思考怎么选行能够使得至少有一个1，把每行当成一个二进制数，这个问题就转化成了怎么选使异或和部位0，为0是简单的，记 $x$ 表示线性基的大小，然后异或和为0的方案数就是 $2^{n - x}$，证明原理和刚才一样。\n\n### 40.CF513D Constrained Tree *2600\n\n自己的思路是转化成偏序问题后瞎构造，不会证明正确性，也没有实践，来记个题解做法。\n\n大概就是去dfs，dfs(u) 表示 $u$ 是一个叶子时的可行性，然后简单判断几下递归下去是简单的。\n\n### 41.CF1699E Three Days Grace *2600\n\n这题DP？我咋想到？分析整个删数的过程，容易发现就是分解而已。想到去枚举一个最小值，让最大值最小，考虑 $dp_{i,j}$ 表示分解出来最小的数比 $i$ 大，最大的数最小是多少，发现转移是调和级数级别的，双指针找答案即可。\n\n### 42.CF547D Mike and Fish *2600\n\n这种染色问题再配上这个网格图背景，很难不让人想到二分图染色。考虑怎么进行染色，有一种很简单的方法是相同横或纵坐标的点两两配对，要是剩一个就不管了，不难证明这是正确的。\n\n### 43.CF1253F Cheap Robot *2500\n\n感觉是困难的。遇到这种图上多询问的问题就先不要往什么LCT这种东西方面去思考，实在不行再试试，然后考虑对于单个询问怎么做，要求的答案根据什么量推出来，把图上有用的东西再留下来，看看在树上怎么做。这题就这样的，看两个相邻的充电站想要抵达对 $c$ 的限制是什么，化成一个关于c的不等式，然后放在重构树上询问就可以了。\n\n### 44.CF53E Dead Ends *2500\n\n似乎是简单的，反正我秒了。看见数据范围这样的小，看来是DP状态需要两个状压维，那DP状态就出来了, $dp_{S,T}$ 表示形成的生成树是 $S$ 集合，度为一的点是 $T$ 集合，发现要算重，再回头看看转移方程，是不是方案算了 $popcount(T)$ 次呢？所以除一下就好了。\n\n### 45.CF1485F Copy or Prefix Sum *2400\n\n容易设计一个 $nV$ 的DP， $f_{i,j}$ 表示填到 $i$ 和为 $j$ 的方案数，列出转移方程然后观察，一个相当于是右移，另一个相当于是上一位所有的和，于是乎用 map 维护一下DP过程即可。\n\n### 46.ARC059F Unhappy Hacking *2400\n\n难怪是上古ARC，这题放现在最多*1200，小糖DP，不想写了。\n\n### 47.ARC058F Iroha and Haiku *2500\n\n这个是真的educational啊，启发到我了。重要观察： $A+B+C \\le 17$。 于是乎考虑状压DP。\n\n$dp_{i,S}$ 表示填到第 $i$ 个数，可组成的后缀和集合为 $S$ 的方案数。最后求答案，正难则反。\n\n### 48.ARC060F Best Representation *2800\n\n顶级诈骗题，一眼看上去直接傻了。后来突然发现，只要不是一开始就不是周期串或者全相等那么第一问答案就是2，下一个模1e9+7就是个幌子。这下就清楚了，好像也就结束了，kmp看看周期即可。\n\n### 49.ARC061E Snuke's Subway Trip *2400\n\n可能是因为建虚点这个trick已经很普遍了吧，所以这题评了个绿，想到建虚点就做完了。\n\n### 50.ARC157E XXYX Binary Tree *2900\n\n感觉是个傻子题，但是我没做出来，差一个观察。\n\n观察1：可以通过 B 和 C 算出来应该有几个叶子填 Y ,几个非叶子填 Y。\n\n观察2：子树内填非叶子 Y 的数量是个区间， $[0,mx]$\n\n想到这里就是个简单题了，树上背包即可。\n","source":"_posts/0002.md","raw":"---\ntitle: CF/AtC乱做记录\ndate: 2024-10-10\ntoc: false\ncategory: [做题记录]\nmathjax: true\n---\n每50题就开个新文章。\n\n同步于[洛谷专栏](https://www.luogu.com.cn/article/fcbug12f)\n\n马上也快退役了，干点自己想干的事吧，别太功利了。 \n\n早就想开这个记录了，碍于之前学校各种各样的题单让我没时间做（其实时间是颓没的）。\n\n现在感觉做啥都也无所谓了，开始记录吧！\n\n本博客就简单记录一下，就记个大体思路。\n\n### 1.CF1773G Game of Questions *2800\n\n很神的状压DP啊，发现人数不多遂想到状压一下人数，设 $dp_S$ 表示场上只剩状态为 $S$ 的人，然后Genie赢的概率。\n\n难点在于转移，我们并不知道有哪些问题之前被问过，但是状压问题的话就太夸张了。注意到一个性质，一个问题问几遍都和问一遍等价。这个性质看上去很显然，但却是转移的关键所在。设 $w_{S,T}$ 表示从能让状态 $S$ 变成状态 $T$ 的问题个数。预处理出 $w$ 再DP即可。\n\n### 2.CF1775F Laboratory on Pluto *2500\n\n牛的数学题，感觉真不错。第一问是简单的，一边取成 $\\sqrt{n}$ 就是最小值。虽然我不是很会证，但你要枚举根号做好像也能过。\n\n主要是这个第二问的数数就比较困难，考虑连通块的形式，就是一个矩形四缺口这种感觉，但是缺口一定是阶梯状的，就意味着求的是拆分数，可以dp求解。求完了一个角上的方案数就背包一下就行了。这题牛就牛在单步似乎都很好想，合在一起就有点困难了，但也其实还好，我自己做的时候就是拆分数那里有点不会，可以看看 P1025 srf的那篇DP题解，学一下k部拆分数的DP求法，感觉挺妙的。\n\n### 3.AGC045A Xor Battle *2000\n\n很有趣的一道博弈论题目。还好开了题解，不然死都不会做。考虑从后往前枚举，设集合 $S_i$ 表示从 $i$ 开始走，有哪些数能使0赢。考虑使用线性基进行转移即可。\n\n### 4.AGC043D Merge Triplets *2700\n\n非常秀的DP题，考虑答案的形状。答案排列按下降段划分每一段都不会超过二，而且长为1的段一定比2的多。\n\n此乃本题第一秀。于是我们设计出状态 $dp_{i,j}$ 表示填到了第 $i$ 个位置长为1的段比长为2的段多了 $j$ 个的方案数。\n\n考虑转移，观察排列，按照偏序关系建出一棵外向树，用数拓扑序的方式进行DP，此乃二秀。\n\n### 5.ARC093E Bichrome Spanning Tree *2500\n\n非常牛的数数题。考虑原图的最小生成树，如果mst都比 $x$ 大，那肯定是没有方案的。 如果mst和 $x$ 一样大。那就意味着能够成mst的边必有异色，这个是好数的。另外一种困难些，考虑钦定一条边在权为 $x$ 的生成树中，那他这棵生成树是包含它的最小生成树，必定与一棵原图的最小生成树有交，构成最小生成树的边一定同色，这样数数就方便了许多。\n\n### 6.ABC279G At Most 2 Colors *2400\n\n牛的DP题，考虑状态设计，设 $dp_{i , 1/2}$ 表示填到 $i$ 这个位置时，最后 $k-1$ 个位置有几种不同颜色，$k-1$ 这个地方设计的有点巧妙，我也是这个地方想不到。如果光设计个 $k$,那么 $i - k$ 这个位置填啥又跟 $i$ 这个位置填啥没关系，会影响转移，换成 $k-1$ 就不会了。关键是求答案时答案对吗？看看自己的方程，是不是同时保证了后k个也只有两个颜色了呢。\n\n### 7.CF1385G Columns Swaps *2300\n\n2-sat 板子，无需多言\n\n### 8.ABC281G Farthest City *2300\n\n看你想不想的到BFS树结构，想到了就是一道简单DP。\n\n### 9.CF1657E Star MST *2200\n\n找到边权之间的偏序关系，有一个跟上一题类似的DP。\n\n### 10.ARC103F Distance Sums *2800\n\n妙妙构造题，非常的神奇。一看一个没思路。观察一下，发现d值最大的一定是某个叶子，d值最小的一定是重心。\n\n然后就考虑从叶子开始向上构造推测父亲是谁（钦定重心为根）。类似换根DP去转移然后二分推出父亲即可。\n\n### 11.ARC006D Median Pyramid Hard * 3000\n\n人才题。考虑二分？为什么要考虑这个？或许是因为中位数题好多都要二分。二分什么？二分答案。我们将大于二分出来的东西的数都看作是1其他看作是0，那么只需要关注顶部数的01情况，而这取决于最靠近中间的相同数对是0还是1，于是做完了。\n\n### 12.CF1659E AND-MEX Walk *2200\n\n考虑答案的范围，容易发现答案只有可能是0,1,2，分别使用并查集判断一下即可。\n\n### 13.CF1473E Minimum Path *2400\n\n模拟赛原题，有点牛的。要求的式子很有最短路的感觉，式子的本质是抽出一条最长的换上一条最短的。\n\nOK，比较美妙的一步来了。要想用最短路去求解，那么必须把后面那一坨塞进 $\\sum$ 里面去。\n\n刚刚想了式子的本质，现在扩展一下，任选两条边，用一条去换另一条的最小值，此时茅塞顿开，这个问题就可以用分层图最短路进行求解了。\n\n### 14.ARC127E Priority Queue *2700\n\n比较感性的一个题。正难则反，考虑计算被删除的集合的方案数，容易发现每个删除位置都有取值范围，而且还有一个奇奇怪怪的性质，每一次删的数都可以是离该次删除最接近的1，这样不会影响方案数，交换法不难证明。此时上文的取值范围也可以用类似于括号配对的方法求出来。既然集合计数那我就钦定一下数列是单调递增的，同时发现如果单增数列能取到，单增数列的排列也能取，反之同理，于是乎DP即可。\n\n感性就感性在每个性质看上去好像很显然证起来还是有一些困难的。\n\n### 15.ARC180D Division into 3 *2700\n\n放在任务里面吃灰的，今天终于给他做了。算是一种套路题吧？观察到区间最大值一定会被取到，分类讨论一下在哪个段。\n\n在A/C段中就用扫描线算答案，在B中就只让AC取左右端点各一个，这题也就完了。感觉还是很神奇，从一个显然的性质推导出来整个做法\n\n### 16.CF335F Buy One, Get One Free *3000\n\n反悔贪心神仙题，反悔策略怎么想出来的，大概率是用归纳法。显然是把序列从大到小排个序，同样代价的物品就分为一组，按组进行考虑。维护一个小根堆记录当前白嫖的东西的价值，每次先算出当前这一轮一开始就可以白嫖多少个，先不忙压入小根堆避免造成影响。剩下的东西就考虑是买好还是不买好，按反悔贪心策略执行即可（不想细说了，毕竟不是题解）。\n\n### 17.CF516D Drazil and Morning Exercise *2800\n\n询问次数只有50，考虑使用大于 O(n) 复杂度的东西执行单次询问。\n\n思考怎么样才能使联通块的计算更加方便，钦定一个根，枚举联通块的根。\n\n然后呢，要是联通块的 max，min 的差值求起来方便就更好了。\n\n不妨让他随层数单调，如何实现，以f最小的点为根即可，每次询问树上差分。\n\n### 18.ARC167C MST on Line++ *2400\n\n考虑数每个 $a_i$ 在 MST 中的出现次数。容易发现 $a_i$ 的顺序与答案没啥关系。接下来的一步比较神秘，考虑一个子问题，如果只能选小于等于 $a_i$ 的边，最多能选多少条，把每个排列的答案加起来，记为 $f_i$，那么 $ans=\\sum_{i=1}^{n} a_i \\times f_i$，组合求 $f_i$ 即可。\n\n### 19.ARC123D Inc, Dec - Decomposition *2100\n\n简单题啊，居然有自己能很快做出来的题，尝试构造 $b,c$，这是简单的，感性理解一下，然后三分一下偏差值就是答案了。\n\n三分可以理解正确性，但是为什么想我那样构造就是答案了呢，其他的构造方法对吗？感觉很奇怪啊。\n\n### 20.CF1270H Number of Components *3300\n\n先发现一个性质：如果 $l$ 和 $r$ 在一个联通块内，那么 $[l , r]$ 就都在一个联通块内，证明是容易的。\n\n发现了这个性质之后，我们只需要求 $i$ 和 $i + 1$ 是否在一个联通块内。具体的判断方式是 $\\min_{j=1} ^{i} a_j \\ge max_{j=i+1}^{n} a_j$。记 $w=max_{j=i+1}^{n} a_j$，把数组内大于 $w$ 的设为 $1$，否则设为 $0$。如果 $i$ 和 $i + 1$ 不在同一联通块内那么二进制序列会长成 $11...100...0$ 这个样子，对于每个w维护一下10段的个数即可。\n\n### 21.CF1548E Gregor and the Two Painters *3400\n\n可以说是一种套路题吧，数网格联通块通用方法就是选个主元，去数有多少个主元，转化成求解偏序问题即可。\n\n注意主元和联通块要有双射关系，不然就假了。这个方法也可以做 SCCPC2024 A 虽然那个题有更简单的方法。\n\n### 22.CF1656G Cycle Palindrome *3200\n\n先考虑构造一组满足回文的排列，再考虑交换相同值的位置使得在同一个环中。\n\n然后再四个四个地换，判一下就行。正确性证明是困难的，不证了。\n\n### 23.ARC156D Xor Sum 5 *2600\n记一个牛逼结论：**若组合数 $\\binom{n}{m}$ 是奇数，那么在二进制下，m是n的子集**\n\n推论：**$\\binom{n}{c1,c2,c3…ck}$为奇数，那么c是n的某一子集的一组二进制划分**\n\n我们就记 $c_i$ 表示第 $i$ 个数的出现次数，当他的sum有贡献时，他就是上文的推论。\n\n所以发现最多40个 $c_i$ 是非零的，于是乎就可以DP了。\n\n### 24.ABC271G Access Counter * 2300\n\n很难不想到矩阵快速幂，但是问题在于我怎么构造矩阵，这是本题的难点。\n\n首先是容易设计出基本DP的， $dp_{i,j}=\\sum_{k=1}^{24}dp_{i-1,k}\\times calc(k,j)$\n\ncalc通过一些基本数列手段可以是可以处理出来的，然后挂到矩阵这题也就结束了。\n\n### 25.CF1042E Vasya and Magic Matrix *2300\n\n朴素的期望DP，好像期望DP都是倒着的，大概就是从终状态转移到始状态的意思。\n\n矩阵的壳是个幌子，根本无需在意，把每个东西单拎出来按权排序后DP即可。\n\n### 26.CF1552E Colors and Intervals *2300\n\n牛的构造题，先观察到每次选的两个点之间一定没有和它们同色的点，不然一定不优。\n\n每个东西被覆盖的次数限制很奇怪，考虑它的意义是什么。看见分母的 $k-1$ 不难联想到同一颜色的段数，那么考虑按段的编号分类，每个段就选限制个颜色即可。\n\n### 27.CF1635F Closest Pair *2800\n\n结论题，设 $L_i$ 表示 $i$ 左边第一个 $w$ 小于等于 i的点，$R_i$ 同理。\n\n那么答案就在 $[L_i,i],[i,R_i]$ 中。转化为二维数点问题即可。\n\n### 28.CF1868C Travel Plan *2400\n\n式子题，考虑对于满二叉树怎么做，会了这个就把原数拆成 $logn$ 个满二叉树即可。\n\n具体的，枚举最大值，记 $ans_i$ 表示最大值 $\\le i$ 的答案，那么最后答案就是 $\\sum_{i=1}^{m}i\\times (ans_i - ans_{i-1})$\n\n对于具体的转移不多赘述，主要就是记两个东西，一个表示这个子树所有东西到根的答案和子树内所以东西的填法的和。\n\n### 29.CF599E Sandy and Nuts *2600\n\n困难的，状态想错了导致举步维艰，想到状态之后这题并不困难，主要是处理限制的时候要稍微注意一下细节。状态是 $dp_{i,S}$ 表示以 $i$ 为根的子树内的点集为 $S$ 的合法方案数。方程就是 $dp_{i,S}=\\sum_{T\\in S} dp_{u,T}\\times dp_{i , S\\oplus T}$。使用钦定技巧避免算重。\n\n### 30.CF623D Birthday *2700\n\n难点解析：揣测出题人。\n\n为啥不让你求模意义下的答案，精度误差为啥允许开这么大，样例解释为啥没有计算过程？有没有种可能，真实值根本算不出来？\n\n想到这里这题大概也就迎刃而解了，计算k轮猜到答案的概率。直接做不好做，考虑容斥进行计算。具体的，计算在最多 $k$ 轮的时候结束的概率。要是知道每个人被猜到几次的话就很容易算概率了。列出式子，每一步贪心即可。收敛速度较快，计算 $3e5$ 次即可通过此题。\n\n### 31.CF407D Largest Submatrix 3 *2700\n\n不难想到 $O(n^4)$ 暴力，枚举行的上下界，对列跑双指针。这个算法难以优化，更换枚举次序。枚举左右界再枚举下边界，类似于区间DP得去转移答案。（子矩阵背景的题目从来没有自己做出来过，呜呜呜）\n\n### 32.CF1844G Tree Weight *3000\n\n牛逼题目，这辈子没见过这么秀的。\n\n首先容易把 $d_i$ 拆成 $dep_i + dep_{i + 1} - 2 \\times dep_{lca(i,i+1)}$\n\n然后就会发现这个东西非常不优美，要是能够拆出来的东西少带点变量就好了，因为 $dep_1$ 我们是知道的，他就是0。少带点变量就会使得这个式子可以递推了！**注意到lca前面有个系数2，对等式两边取个2的模这个东西就没了！** 然后我们就可以考虑按二进制位进行递推了。具体的，设 $ans_{i,j}\\equiv dep_{i} \\mod 2^j$。 那么有 $ans_{i,j}={(d(i-1,i)-ans_{i-1,j}+2\\times ans_{lca(i-1,i),j-1})} \\mod 2^j$最后判一下-1即可。注意力惊人的人可以独立做出来，可惜我不是。\n\n### 33.CF1762D GCD Queries *2100\n\n似乎是比较容易的。其实无非就是就是让你每两次操作排除一个非零的数。按顺序遍历配合上指针优化再加上简单的分讨即可。\n\n### 34.CF1406E Deleting Numbers *2600\n\n非常厉害的交互！有点人类智慧的感觉。\n\n首先是容易想到一个每个质数操作两次在log一下的方法，算算发现操作次数会超。\n\n考虑优化。显然对于上述做法而言，质数这个点是不会变的，那能不能让没啥用每个质数只操作1次呢。\n\n可以的，我们依次对每个质数操作B，然后计算出理论答案，要是不一样的话我们就check一下它的幂次。\n\n可是这样对于最小的质数而言，我们就没法求了。所以每过根号次操作就做一遍 A 1。要是有出入就把块内所有东西都判一遍即可。\n\n### 35.CF1033E Hidden Bipartite Graph *2800\n\n也是非常厉害的交互！更加的人类智慧！\n\n积累一种不一样的判二分图的trick：图中抽一棵生成树，看一下奇数层的点之间有没有连边，偶数层之间有没有连边。\n\n对于这个题而言我们可以先用 $2nlogn$ 次询问分治的去问出一棵生成树来。然后我们再在奇偶层之间随机分治看看有没连边。很巧妙的是这个随机分治，每次把点集大小除以二而且每一层期望操作次数只有两次，非常聪明啊！\n\n### 36.CF1863G Swaps *2800\n\n套路题？容易想到 $a_i$ 向 $i$ 连条边。然后观察一次操作带来的影响，发现一次操作带来一个自环。同时可以构建出一个双射：能生成的序列可以这样构成：如果 $i$ 的入边被操作过，那么这个位置就是 $i$，否则就是一条未被标记的出边指向的点权，这是容易计数的，注意在联通块为环时特殊处理一下即可。\n\n### 37.JOISC2015 F 合鍵\n\n非常好题目，让我认识到自己的不足：对于奇怪的模型就失去了分析的能力。\n\n**容易想到** 把 $l,r$ 拆开一起排序，分讨每一段的贡献情况，然后DP统计贡献即可。\n\n### 38.ABC373G No Cross Matching *2400\n\n场上的时候有种流子的感觉，但是不会建模。现在会了神秘贪心。\n\n非常厉害的转化，相交线段可以通过交换变得不相交，这会使得总距离变短，那么我们是需要让总距离最短即可，按照冒泡排序模拟即可。\n\n### 39.Yahoo Programming Contest 2019 Odd Subrectangles *2600\n\n容易想到转化为异或为1。考虑现在已经选出了一些行，那些列符合答案，记第 $i$ 列的异或和为 $c_i$ ，只要有一个 $c_i$ 等于1，那么这就意味着方案数是 $2^{m-1}$，其他列情况任选，用这一列来调整即可。那么现在思考怎么选行能够使得至少有一个1，把每行当成一个二进制数，这个问题就转化成了怎么选使异或和部位0，为0是简单的，记 $x$ 表示线性基的大小，然后异或和为0的方案数就是 $2^{n - x}$，证明原理和刚才一样。\n\n### 40.CF513D Constrained Tree *2600\n\n自己的思路是转化成偏序问题后瞎构造，不会证明正确性，也没有实践，来记个题解做法。\n\n大概就是去dfs，dfs(u) 表示 $u$ 是一个叶子时的可行性，然后简单判断几下递归下去是简单的。\n\n### 41.CF1699E Three Days Grace *2600\n\n这题DP？我咋想到？分析整个删数的过程，容易发现就是分解而已。想到去枚举一个最小值，让最大值最小，考虑 $dp_{i,j}$ 表示分解出来最小的数比 $i$ 大，最大的数最小是多少，发现转移是调和级数级别的，双指针找答案即可。\n\n### 42.CF547D Mike and Fish *2600\n\n这种染色问题再配上这个网格图背景，很难不让人想到二分图染色。考虑怎么进行染色，有一种很简单的方法是相同横或纵坐标的点两两配对，要是剩一个就不管了，不难证明这是正确的。\n\n### 43.CF1253F Cheap Robot *2500\n\n感觉是困难的。遇到这种图上多询问的问题就先不要往什么LCT这种东西方面去思考，实在不行再试试，然后考虑对于单个询问怎么做，要求的答案根据什么量推出来，把图上有用的东西再留下来，看看在树上怎么做。这题就这样的，看两个相邻的充电站想要抵达对 $c$ 的限制是什么，化成一个关于c的不等式，然后放在重构树上询问就可以了。\n\n### 44.CF53E Dead Ends *2500\n\n似乎是简单的，反正我秒了。看见数据范围这样的小，看来是DP状态需要两个状压维，那DP状态就出来了, $dp_{S,T}$ 表示形成的生成树是 $S$ 集合，度为一的点是 $T$ 集合，发现要算重，再回头看看转移方程，是不是方案算了 $popcount(T)$ 次呢？所以除一下就好了。\n\n### 45.CF1485F Copy or Prefix Sum *2400\n\n容易设计一个 $nV$ 的DP， $f_{i,j}$ 表示填到 $i$ 和为 $j$ 的方案数，列出转移方程然后观察，一个相当于是右移，另一个相当于是上一位所有的和，于是乎用 map 维护一下DP过程即可。\n\n### 46.ARC059F Unhappy Hacking *2400\n\n难怪是上古ARC，这题放现在最多*1200，小糖DP，不想写了。\n\n### 47.ARC058F Iroha and Haiku *2500\n\n这个是真的educational啊，启发到我了。重要观察： $A+B+C \\le 17$。 于是乎考虑状压DP。\n\n$dp_{i,S}$ 表示填到第 $i$ 个数，可组成的后缀和集合为 $S$ 的方案数。最后求答案，正难则反。\n\n### 48.ARC060F Best Representation *2800\n\n顶级诈骗题，一眼看上去直接傻了。后来突然发现，只要不是一开始就不是周期串或者全相等那么第一问答案就是2，下一个模1e9+7就是个幌子。这下就清楚了，好像也就结束了，kmp看看周期即可。\n\n### 49.ARC061E Snuke's Subway Trip *2400\n\n可能是因为建虚点这个trick已经很普遍了吧，所以这题评了个绿，想到建虚点就做完了。\n\n### 50.ARC157E XXYX Binary Tree *2900\n\n感觉是个傻子题，但是我没做出来，差一个观察。\n\n观察1：可以通过 B 和 C 算出来应该有几个叶子填 Y ,几个非叶子填 Y。\n\n观察2：子树内填非叶子 Y 的数量是个区间， $[0,mx]$\n\n想到这里就是个简单题了，树上背包即可。\n","slug":"0002","published":1,"updated":"2025-06-28T13:44:17.465Z","comments":1,"layout":"post","photos":[],"_id":"cmcgb3qs20003ewrd80ofaqqb","content":"<p>每50题就开个新文章。</p>\n<p>同步于<a href=\"https://www.luogu.com.cn/article/fcbug12f\">洛谷专栏</a></p>\n<p>马上也快退役了，干点自己想干的事吧，别太功利了。 </p>\n<p>早就想开这个记录了，碍于之前学校各种各样的题单让我没时间做（其实时间是颓没的）。</p>\n<p>现在感觉做啥都也无所谓了，开始记录吧！</p>\n<p>本博客就简单记录一下，就记个大体思路。</p>\n<h3 id=\"1-CF1773G-Game-of-Questions-2800\"><a href=\"#1-CF1773G-Game-of-Questions-2800\" class=\"headerlink\" title=\"1.CF1773G Game of Questions *2800\"></a>1.CF1773G Game of Questions *2800</h3><p>很神的状压DP啊，发现人数不多遂想到状压一下人数，设 $dp_S$ 表示场上只剩状态为 $S$ 的人，然后Genie赢的概率。</p>\n<p>难点在于转移，我们并不知道有哪些问题之前被问过，但是状压问题的话就太夸张了。注意到一个性质，一个问题问几遍都和问一遍等价。这个性质看上去很显然，但却是转移的关键所在。设 $w_{S,T}$ 表示从能让状态 $S$ 变成状态 $T$ 的问题个数。预处理出 $w$ 再DP即可。</p>\n<h3 id=\"2-CF1775F-Laboratory-on-Pluto-2500\"><a href=\"#2-CF1775F-Laboratory-on-Pluto-2500\" class=\"headerlink\" title=\"2.CF1775F Laboratory on Pluto *2500\"></a>2.CF1775F Laboratory on Pluto *2500</h3><p>牛的数学题，感觉真不错。第一问是简单的，一边取成 $\\sqrt{n}$ 就是最小值。虽然我不是很会证，但你要枚举根号做好像也能过。</p>\n<p>主要是这个第二问的数数就比较困难，考虑连通块的形式，就是一个矩形四缺口这种感觉，但是缺口一定是阶梯状的，就意味着求的是拆分数，可以dp求解。求完了一个角上的方案数就背包一下就行了。这题牛就牛在单步似乎都很好想，合在一起就有点困难了，但也其实还好，我自己做的时候就是拆分数那里有点不会，可以看看 P1025 srf的那篇DP题解，学一下k部拆分数的DP求法，感觉挺妙的。</p>\n<h3 id=\"3-AGC045A-Xor-Battle-2000\"><a href=\"#3-AGC045A-Xor-Battle-2000\" class=\"headerlink\" title=\"3.AGC045A Xor Battle *2000\"></a>3.AGC045A Xor Battle *2000</h3><p>很有趣的一道博弈论题目。还好开了题解，不然死都不会做。考虑从后往前枚举，设集合 $S_i$ 表示从 $i$ 开始走，有哪些数能使0赢。考虑使用线性基进行转移即可。</p>\n<h3 id=\"4-AGC043D-Merge-Triplets-2700\"><a href=\"#4-AGC043D-Merge-Triplets-2700\" class=\"headerlink\" title=\"4.AGC043D Merge Triplets *2700\"></a>4.AGC043D Merge Triplets *2700</h3><p>非常秀的DP题，考虑答案的形状。答案排列按下降段划分每一段都不会超过二，而且长为1的段一定比2的多。</p>\n<p>此乃本题第一秀。于是我们设计出状态 $dp_{i,j}$ 表示填到了第 $i$ 个位置长为1的段比长为2的段多了 $j$ 个的方案数。</p>\n<p>考虑转移，观察排列，按照偏序关系建出一棵外向树，用数拓扑序的方式进行DP，此乃二秀。</p>\n<h3 id=\"5-ARC093E-Bichrome-Spanning-Tree-2500\"><a href=\"#5-ARC093E-Bichrome-Spanning-Tree-2500\" class=\"headerlink\" title=\"5.ARC093E Bichrome Spanning Tree *2500\"></a>5.ARC093E Bichrome Spanning Tree *2500</h3><p>非常牛的数数题。考虑原图的最小生成树，如果mst都比 $x$ 大，那肯定是没有方案的。 如果mst和 $x$ 一样大。那就意味着能够成mst的边必有异色，这个是好数的。另外一种困难些，考虑钦定一条边在权为 $x$ 的生成树中，那他这棵生成树是包含它的最小生成树，必定与一棵原图的最小生成树有交，构成最小生成树的边一定同色，这样数数就方便了许多。</p>\n<h3 id=\"6-ABC279G-At-Most-2-Colors-2400\"><a href=\"#6-ABC279G-At-Most-2-Colors-2400\" class=\"headerlink\" title=\"6.ABC279G At Most 2 Colors *2400\"></a>6.ABC279G At Most 2 Colors *2400</h3><p>牛的DP题，考虑状态设计，设 $dp_{i , 1/2}$ 表示填到 $i$ 这个位置时，最后 $k-1$ 个位置有几种不同颜色，$k-1$ 这个地方设计的有点巧妙，我也是这个地方想不到。如果光设计个 $k$,那么 $i - k$ 这个位置填啥又跟 $i$ 这个位置填啥没关系，会影响转移，换成 $k-1$ 就不会了。关键是求答案时答案对吗？看看自己的方程，是不是同时保证了后k个也只有两个颜色了呢。</p>\n<h3 id=\"7-CF1385G-Columns-Swaps-2300\"><a href=\"#7-CF1385G-Columns-Swaps-2300\" class=\"headerlink\" title=\"7.CF1385G Columns Swaps *2300\"></a>7.CF1385G Columns Swaps *2300</h3><p>2-sat 板子，无需多言</p>\n<h3 id=\"8-ABC281G-Farthest-City-2300\"><a href=\"#8-ABC281G-Farthest-City-2300\" class=\"headerlink\" title=\"8.ABC281G Farthest City *2300\"></a>8.ABC281G Farthest City *2300</h3><p>看你想不想的到BFS树结构，想到了就是一道简单DP。</p>\n<h3 id=\"9-CF1657E-Star-MST-2200\"><a href=\"#9-CF1657E-Star-MST-2200\" class=\"headerlink\" title=\"9.CF1657E Star MST *2200\"></a>9.CF1657E Star MST *2200</h3><p>找到边权之间的偏序关系，有一个跟上一题类似的DP。</p>\n<h3 id=\"10-ARC103F-Distance-Sums-2800\"><a href=\"#10-ARC103F-Distance-Sums-2800\" class=\"headerlink\" title=\"10.ARC103F Distance Sums *2800\"></a>10.ARC103F Distance Sums *2800</h3><p>妙妙构造题，非常的神奇。一看一个没思路。观察一下，发现d值最大的一定是某个叶子，d值最小的一定是重心。</p>\n<p>然后就考虑从叶子开始向上构造推测父亲是谁（钦定重心为根）。类似换根DP去转移然后二分推出父亲即可。</p>\n<h3 id=\"11-ARC006D-Median-Pyramid-Hard-3000\"><a href=\"#11-ARC006D-Median-Pyramid-Hard-3000\" class=\"headerlink\" title=\"11.ARC006D Median Pyramid Hard * 3000\"></a>11.ARC006D Median Pyramid Hard * 3000</h3><p>人才题。考虑二分？为什么要考虑这个？或许是因为中位数题好多都要二分。二分什么？二分答案。我们将大于二分出来的东西的数都看作是1其他看作是0，那么只需要关注顶部数的01情况，而这取决于最靠近中间的相同数对是0还是1，于是做完了。</p>\n<h3 id=\"12-CF1659E-AND-MEX-Walk-2200\"><a href=\"#12-CF1659E-AND-MEX-Walk-2200\" class=\"headerlink\" title=\"12.CF1659E AND-MEX Walk *2200\"></a>12.CF1659E AND-MEX Walk *2200</h3><p>考虑答案的范围，容易发现答案只有可能是0,1,2，分别使用并查集判断一下即可。</p>\n<h3 id=\"13-CF1473E-Minimum-Path-2400\"><a href=\"#13-CF1473E-Minimum-Path-2400\" class=\"headerlink\" title=\"13.CF1473E Minimum Path *2400\"></a>13.CF1473E Minimum Path *2400</h3><p>模拟赛原题，有点牛的。要求的式子很有最短路的感觉，式子的本质是抽出一条最长的换上一条最短的。</p>\n<p>OK，比较美妙的一步来了。要想用最短路去求解，那么必须把后面那一坨塞进 $\\sum$ 里面去。</p>\n<p>刚刚想了式子的本质，现在扩展一下，任选两条边，用一条去换另一条的最小值，此时茅塞顿开，这个问题就可以用分层图最短路进行求解了。</p>\n<h3 id=\"14-ARC127E-Priority-Queue-2700\"><a href=\"#14-ARC127E-Priority-Queue-2700\" class=\"headerlink\" title=\"14.ARC127E Priority Queue *2700\"></a>14.ARC127E Priority Queue *2700</h3><p>比较感性的一个题。正难则反，考虑计算被删除的集合的方案数，容易发现每个删除位置都有取值范围，而且还有一个奇奇怪怪的性质，每一次删的数都可以是离该次删除最接近的1，这样不会影响方案数，交换法不难证明。此时上文的取值范围也可以用类似于括号配对的方法求出来。既然集合计数那我就钦定一下数列是单调递增的，同时发现如果单增数列能取到，单增数列的排列也能取，反之同理，于是乎DP即可。</p>\n<p>感性就感性在每个性质看上去好像很显然证起来还是有一些困难的。</p>\n<h3 id=\"15-ARC180D-Division-into-3-2700\"><a href=\"#15-ARC180D-Division-into-3-2700\" class=\"headerlink\" title=\"15.ARC180D Division into 3 *2700\"></a>15.ARC180D Division into 3 *2700</h3><p>放在任务里面吃灰的，今天终于给他做了。算是一种套路题吧？观察到区间最大值一定会被取到，分类讨论一下在哪个段。</p>\n<p>在A/C段中就用扫描线算答案，在B中就只让AC取左右端点各一个，这题也就完了。感觉还是很神奇，从一个显然的性质推导出来整个做法</p>\n<h3 id=\"16-CF335F-Buy-One-Get-One-Free-3000\"><a href=\"#16-CF335F-Buy-One-Get-One-Free-3000\" class=\"headerlink\" title=\"16.CF335F Buy One, Get One Free *3000\"></a>16.CF335F Buy One, Get One Free *3000</h3><p>反悔贪心神仙题，反悔策略怎么想出来的，大概率是用归纳法。显然是把序列从大到小排个序，同样代价的物品就分为一组，按组进行考虑。维护一个小根堆记录当前白嫖的东西的价值，每次先算出当前这一轮一开始就可以白嫖多少个，先不忙压入小根堆避免造成影响。剩下的东西就考虑是买好还是不买好，按反悔贪心策略执行即可（不想细说了，毕竟不是题解）。</p>\n<h3 id=\"17-CF516D-Drazil-and-Morning-Exercise-2800\"><a href=\"#17-CF516D-Drazil-and-Morning-Exercise-2800\" class=\"headerlink\" title=\"17.CF516D Drazil and Morning Exercise *2800\"></a>17.CF516D Drazil and Morning Exercise *2800</h3><p>询问次数只有50，考虑使用大于 O(n) 复杂度的东西执行单次询问。</p>\n<p>思考怎么样才能使联通块的计算更加方便，钦定一个根，枚举联通块的根。</p>\n<p>然后呢，要是联通块的 max，min 的差值求起来方便就更好了。</p>\n<p>不妨让他随层数单调，如何实现，以f最小的点为根即可，每次询问树上差分。</p>\n<h3 id=\"18-ARC167C-MST-on-Line-2400\"><a href=\"#18-ARC167C-MST-on-Line-2400\" class=\"headerlink\" title=\"18.ARC167C MST on Line++ *2400\"></a>18.ARC167C MST on Line++ *2400</h3><p>考虑数每个 $a_i$ 在 MST 中的出现次数。容易发现 $a_i$ 的顺序与答案没啥关系。接下来的一步比较神秘，考虑一个子问题，如果只能选小于等于 $a_i$ 的边，最多能选多少条，把每个排列的答案加起来，记为 $f_i$，那么 $ans=\\sum_{i=1}^{n} a_i \\times f_i$，组合求 $f_i$ 即可。</p>\n<h3 id=\"19-ARC123D-Inc-Dec-Decomposition-2100\"><a href=\"#19-ARC123D-Inc-Dec-Decomposition-2100\" class=\"headerlink\" title=\"19.ARC123D Inc, Dec - Decomposition *2100\"></a>19.ARC123D Inc, Dec - Decomposition *2100</h3><p>简单题啊，居然有自己能很快做出来的题，尝试构造 $b,c$，这是简单的，感性理解一下，然后三分一下偏差值就是答案了。</p>\n<p>三分可以理解正确性，但是为什么想我那样构造就是答案了呢，其他的构造方法对吗？感觉很奇怪啊。</p>\n<h3 id=\"20-CF1270H-Number-of-Components-3300\"><a href=\"#20-CF1270H-Number-of-Components-3300\" class=\"headerlink\" title=\"20.CF1270H Number of Components *3300\"></a>20.CF1270H Number of Components *3300</h3><p>先发现一个性质：如果 $l$ 和 $r$ 在一个联通块内，那么 $[l , r]$ 就都在一个联通块内，证明是容易的。</p>\n<p>发现了这个性质之后，我们只需要求 $i$ 和 $i + 1$ 是否在一个联通块内。具体的判断方式是 $\\min_{j=1} ^{i} a_j \\ge max_{j=i+1}^{n} a_j$。记 $w=max_{j=i+1}^{n} a_j$，把数组内大于 $w$ 的设为 $1$，否则设为 $0$。如果 $i$ 和 $i + 1$ 不在同一联通块内那么二进制序列会长成 $11…100…0$ 这个样子，对于每个w维护一下10段的个数即可。</p>\n<h3 id=\"21-CF1548E-Gregor-and-the-Two-Painters-3400\"><a href=\"#21-CF1548E-Gregor-and-the-Two-Painters-3400\" class=\"headerlink\" title=\"21.CF1548E Gregor and the Two Painters *3400\"></a>21.CF1548E Gregor and the Two Painters *3400</h3><p>可以说是一种套路题吧，数网格联通块通用方法就是选个主元，去数有多少个主元，转化成求解偏序问题即可。</p>\n<p>注意主元和联通块要有双射关系，不然就假了。这个方法也可以做 SCCPC2024 A 虽然那个题有更简单的方法。</p>\n<h3 id=\"22-CF1656G-Cycle-Palindrome-3200\"><a href=\"#22-CF1656G-Cycle-Palindrome-3200\" class=\"headerlink\" title=\"22.CF1656G Cycle Palindrome *3200\"></a>22.CF1656G Cycle Palindrome *3200</h3><p>先考虑构造一组满足回文的排列，再考虑交换相同值的位置使得在同一个环中。</p>\n<p>然后再四个四个地换，判一下就行。正确性证明是困难的，不证了。</p>\n<h3 id=\"23-ARC156D-Xor-Sum-5-2600\"><a href=\"#23-ARC156D-Xor-Sum-5-2600\" class=\"headerlink\" title=\"23.ARC156D Xor Sum 5 *2600\"></a>23.ARC156D Xor Sum 5 *2600</h3><p>记一个牛逼结论：<strong>若组合数 $\\binom{n}{m}$ 是奇数，那么在二进制下，m是n的子集</strong></p>\n<p>推论：<strong>$\\binom{n}{c1,c2,c3…ck}$为奇数，那么c是n的某一子集的一组二进制划分</strong></p>\n<p>我们就记 $c_i$ 表示第 $i$ 个数的出现次数，当他的sum有贡献时，他就是上文的推论。</p>\n<p>所以发现最多40个 $c_i$ 是非零的，于是乎就可以DP了。</p>\n<h3 id=\"24-ABC271G-Access-Counter-2300\"><a href=\"#24-ABC271G-Access-Counter-2300\" class=\"headerlink\" title=\"24.ABC271G Access Counter * 2300\"></a>24.ABC271G Access Counter * 2300</h3><p>很难不想到矩阵快速幂，但是问题在于我怎么构造矩阵，这是本题的难点。</p>\n<p>首先是容易设计出基本DP的， $dp_{i,j}=\\sum_{k=1}^{24}dp_{i-1,k}\\times calc(k,j)$</p>\n<p>calc通过一些基本数列手段可以是可以处理出来的，然后挂到矩阵这题也就结束了。</p>\n<h3 id=\"25-CF1042E-Vasya-and-Magic-Matrix-2300\"><a href=\"#25-CF1042E-Vasya-and-Magic-Matrix-2300\" class=\"headerlink\" title=\"25.CF1042E Vasya and Magic Matrix *2300\"></a>25.CF1042E Vasya and Magic Matrix *2300</h3><p>朴素的期望DP，好像期望DP都是倒着的，大概就是从终状态转移到始状态的意思。</p>\n<p>矩阵的壳是个幌子，根本无需在意，把每个东西单拎出来按权排序后DP即可。</p>\n<h3 id=\"26-CF1552E-Colors-and-Intervals-2300\"><a href=\"#26-CF1552E-Colors-and-Intervals-2300\" class=\"headerlink\" title=\"26.CF1552E Colors and Intervals *2300\"></a>26.CF1552E Colors and Intervals *2300</h3><p>牛的构造题，先观察到每次选的两个点之间一定没有和它们同色的点，不然一定不优。</p>\n<p>每个东西被覆盖的次数限制很奇怪，考虑它的意义是什么。看见分母的 $k-1$ 不难联想到同一颜色的段数，那么考虑按段的编号分类，每个段就选限制个颜色即可。</p>\n<h3 id=\"27-CF1635F-Closest-Pair-2800\"><a href=\"#27-CF1635F-Closest-Pair-2800\" class=\"headerlink\" title=\"27.CF1635F Closest Pair *2800\"></a>27.CF1635F Closest Pair *2800</h3><p>结论题，设 $L_i$ 表示 $i$ 左边第一个 $w$ 小于等于 i的点，$R_i$ 同理。</p>\n<p>那么答案就在 $[L_i,i],[i,R_i]$ 中。转化为二维数点问题即可。</p>\n<h3 id=\"28-CF1868C-Travel-Plan-2400\"><a href=\"#28-CF1868C-Travel-Plan-2400\" class=\"headerlink\" title=\"28.CF1868C Travel Plan *2400\"></a>28.CF1868C Travel Plan *2400</h3><p>式子题，考虑对于满二叉树怎么做，会了这个就把原数拆成 $logn$ 个满二叉树即可。</p>\n<p>具体的，枚举最大值，记 $ans_i$ 表示最大值 $\\le i$ 的答案，那么最后答案就是 $\\sum_{i=1}^{m}i\\times (ans_i - ans_{i-1})$</p>\n<p>对于具体的转移不多赘述，主要就是记两个东西，一个表示这个子树所有东西到根的答案和子树内所以东西的填法的和。</p>\n<h3 id=\"29-CF599E-Sandy-and-Nuts-2600\"><a href=\"#29-CF599E-Sandy-and-Nuts-2600\" class=\"headerlink\" title=\"29.CF599E Sandy and Nuts *2600\"></a>29.CF599E Sandy and Nuts *2600</h3><p>困难的，状态想错了导致举步维艰，想到状态之后这题并不困难，主要是处理限制的时候要稍微注意一下细节。状态是 $dp_{i,S}$ 表示以 $i$ 为根的子树内的点集为 $S$ 的合法方案数。方程就是 $dp_{i,S}=\\sum_{T\\in S} dp_{u,T}\\times dp_{i , S\\oplus T}$。使用钦定技巧避免算重。</p>\n<h3 id=\"30-CF623D-Birthday-2700\"><a href=\"#30-CF623D-Birthday-2700\" class=\"headerlink\" title=\"30.CF623D Birthday *2700\"></a>30.CF623D Birthday *2700</h3><p>难点解析：揣测出题人。</p>\n<p>为啥不让你求模意义下的答案，精度误差为啥允许开这么大，样例解释为啥没有计算过程？有没有种可能，真实值根本算不出来？</p>\n<p>想到这里这题大概也就迎刃而解了，计算k轮猜到答案的概率。直接做不好做，考虑容斥进行计算。具体的，计算在最多 $k$ 轮的时候结束的概率。要是知道每个人被猜到几次的话就很容易算概率了。列出式子，每一步贪心即可。收敛速度较快，计算 $3e5$ 次即可通过此题。</p>\n<h3 id=\"31-CF407D-Largest-Submatrix-3-2700\"><a href=\"#31-CF407D-Largest-Submatrix-3-2700\" class=\"headerlink\" title=\"31.CF407D Largest Submatrix 3 *2700\"></a>31.CF407D Largest Submatrix 3 *2700</h3><p>不难想到 $O(n^4)$ 暴力，枚举行的上下界，对列跑双指针。这个算法难以优化，更换枚举次序。枚举左右界再枚举下边界，类似于区间DP得去转移答案。（子矩阵背景的题目从来没有自己做出来过，呜呜呜）</p>\n<h3 id=\"32-CF1844G-Tree-Weight-3000\"><a href=\"#32-CF1844G-Tree-Weight-3000\" class=\"headerlink\" title=\"32.CF1844G Tree Weight *3000\"></a>32.CF1844G Tree Weight *3000</h3><p>牛逼题目，这辈子没见过这么秀的。</p>\n<p>首先容易把 $d_i$ 拆成 $dep_i + dep_{i + 1} - 2 \\times dep_{lca(i,i+1)}$</p>\n<p>然后就会发现这个东西非常不优美，要是能够拆出来的东西少带点变量就好了，因为 $dep_1$ 我们是知道的，他就是0。少带点变量就会使得这个式子可以递推了！<strong>注意到lca前面有个系数2，对等式两边取个2的模这个东西就没了！</strong> 然后我们就可以考虑按二进制位进行递推了。具体的，设 $ans_{i,j}\\equiv dep_{i} \\mod 2^j$。 那么有 $ans_{i,j}={(d(i-1,i)-ans_{i-1,j}+2\\times ans_{lca(i-1,i),j-1})} \\mod 2^j$最后判一下-1即可。注意力惊人的人可以独立做出来，可惜我不是。</p>\n<h3 id=\"33-CF1762D-GCD-Queries-2100\"><a href=\"#33-CF1762D-GCD-Queries-2100\" class=\"headerlink\" title=\"33.CF1762D GCD Queries *2100\"></a>33.CF1762D GCD Queries *2100</h3><p>似乎是比较容易的。其实无非就是就是让你每两次操作排除一个非零的数。按顺序遍历配合上指针优化再加上简单的分讨即可。</p>\n<h3 id=\"34-CF1406E-Deleting-Numbers-2600\"><a href=\"#34-CF1406E-Deleting-Numbers-2600\" class=\"headerlink\" title=\"34.CF1406E Deleting Numbers *2600\"></a>34.CF1406E Deleting Numbers *2600</h3><p>非常厉害的交互！有点人类智慧的感觉。</p>\n<p>首先是容易想到一个每个质数操作两次在log一下的方法，算算发现操作次数会超。</p>\n<p>考虑优化。显然对于上述做法而言，质数这个点是不会变的，那能不能让没啥用每个质数只操作1次呢。</p>\n<p>可以的，我们依次对每个质数操作B，然后计算出理论答案，要是不一样的话我们就check一下它的幂次。</p>\n<p>可是这样对于最小的质数而言，我们就没法求了。所以每过根号次操作就做一遍 A 1。要是有出入就把块内所有东西都判一遍即可。</p>\n<h3 id=\"35-CF1033E-Hidden-Bipartite-Graph-2800\"><a href=\"#35-CF1033E-Hidden-Bipartite-Graph-2800\" class=\"headerlink\" title=\"35.CF1033E Hidden Bipartite Graph *2800\"></a>35.CF1033E Hidden Bipartite Graph *2800</h3><p>也是非常厉害的交互！更加的人类智慧！</p>\n<p>积累一种不一样的判二分图的trick：图中抽一棵生成树，看一下奇数层的点之间有没有连边，偶数层之间有没有连边。</p>\n<p>对于这个题而言我们可以先用 $2nlogn$ 次询问分治的去问出一棵生成树来。然后我们再在奇偶层之间随机分治看看有没连边。很巧妙的是这个随机分治，每次把点集大小除以二而且每一层期望操作次数只有两次，非常聪明啊！</p>\n<h3 id=\"36-CF1863G-Swaps-2800\"><a href=\"#36-CF1863G-Swaps-2800\" class=\"headerlink\" title=\"36.CF1863G Swaps *2800\"></a>36.CF1863G Swaps *2800</h3><p>套路题？容易想到 $a_i$ 向 $i$ 连条边。然后观察一次操作带来的影响，发现一次操作带来一个自环。同时可以构建出一个双射：能生成的序列可以这样构成：如果 $i$ 的入边被操作过，那么这个位置就是 $i$，否则就是一条未被标记的出边指向的点权，这是容易计数的，注意在联通块为环时特殊处理一下即可。</p>\n<h3 id=\"37-JOISC2015-F-合鍵\"><a href=\"#37-JOISC2015-F-合鍵\" class=\"headerlink\" title=\"37.JOISC2015 F 合鍵\"></a>37.JOISC2015 F 合鍵</h3><p>非常好题目，让我认识到自己的不足：对于奇怪的模型就失去了分析的能力。</p>\n<p><strong>容易想到</strong> 把 $l,r$ 拆开一起排序，分讨每一段的贡献情况，然后DP统计贡献即可。</p>\n<h3 id=\"38-ABC373G-No-Cross-Matching-2400\"><a href=\"#38-ABC373G-No-Cross-Matching-2400\" class=\"headerlink\" title=\"38.ABC373G No Cross Matching *2400\"></a>38.ABC373G No Cross Matching *2400</h3><p>场上的时候有种流子的感觉，但是不会建模。现在会了神秘贪心。</p>\n<p>非常厉害的转化，相交线段可以通过交换变得不相交，这会使得总距离变短，那么我们是需要让总距离最短即可，按照冒泡排序模拟即可。</p>\n<h3 id=\"39-Yahoo-Programming-Contest-2019-Odd-Subrectangles-2600\"><a href=\"#39-Yahoo-Programming-Contest-2019-Odd-Subrectangles-2600\" class=\"headerlink\" title=\"39.Yahoo Programming Contest 2019 Odd Subrectangles *2600\"></a>39.Yahoo Programming Contest 2019 Odd Subrectangles *2600</h3><p>容易想到转化为异或为1。考虑现在已经选出了一些行，那些列符合答案，记第 $i$ 列的异或和为 $c_i$ ，只要有一个 $c_i$ 等于1，那么这就意味着方案数是 $2^{m-1}$，其他列情况任选，用这一列来调整即可。那么现在思考怎么选行能够使得至少有一个1，把每行当成一个二进制数，这个问题就转化成了怎么选使异或和部位0，为0是简单的，记 $x$ 表示线性基的大小，然后异或和为0的方案数就是 $2^{n - x}$，证明原理和刚才一样。</p>\n<h3 id=\"40-CF513D-Constrained-Tree-2600\"><a href=\"#40-CF513D-Constrained-Tree-2600\" class=\"headerlink\" title=\"40.CF513D Constrained Tree *2600\"></a>40.CF513D Constrained Tree *2600</h3><p>自己的思路是转化成偏序问题后瞎构造，不会证明正确性，也没有实践，来记个题解做法。</p>\n<p>大概就是去dfs，dfs(u) 表示 $u$ 是一个叶子时的可行性，然后简单判断几下递归下去是简单的。</p>\n<h3 id=\"41-CF1699E-Three-Days-Grace-2600\"><a href=\"#41-CF1699E-Three-Days-Grace-2600\" class=\"headerlink\" title=\"41.CF1699E Three Days Grace *2600\"></a>41.CF1699E Three Days Grace *2600</h3><p>这题DP？我咋想到？分析整个删数的过程，容易发现就是分解而已。想到去枚举一个最小值，让最大值最小，考虑 $dp_{i,j}$ 表示分解出来最小的数比 $i$ 大，最大的数最小是多少，发现转移是调和级数级别的，双指针找答案即可。</p>\n<h3 id=\"42-CF547D-Mike-and-Fish-2600\"><a href=\"#42-CF547D-Mike-and-Fish-2600\" class=\"headerlink\" title=\"42.CF547D Mike and Fish *2600\"></a>42.CF547D Mike and Fish *2600</h3><p>这种染色问题再配上这个网格图背景，很难不让人想到二分图染色。考虑怎么进行染色，有一种很简单的方法是相同横或纵坐标的点两两配对，要是剩一个就不管了，不难证明这是正确的。</p>\n<h3 id=\"43-CF1253F-Cheap-Robot-2500\"><a href=\"#43-CF1253F-Cheap-Robot-2500\" class=\"headerlink\" title=\"43.CF1253F Cheap Robot *2500\"></a>43.CF1253F Cheap Robot *2500</h3><p>感觉是困难的。遇到这种图上多询问的问题就先不要往什么LCT这种东西方面去思考，实在不行再试试，然后考虑对于单个询问怎么做，要求的答案根据什么量推出来，把图上有用的东西再留下来，看看在树上怎么做。这题就这样的，看两个相邻的充电站想要抵达对 $c$ 的限制是什么，化成一个关于c的不等式，然后放在重构树上询问就可以了。</p>\n<h3 id=\"44-CF53E-Dead-Ends-2500\"><a href=\"#44-CF53E-Dead-Ends-2500\" class=\"headerlink\" title=\"44.CF53E Dead Ends *2500\"></a>44.CF53E Dead Ends *2500</h3><p>似乎是简单的，反正我秒了。看见数据范围这样的小，看来是DP状态需要两个状压维，那DP状态就出来了, $dp_{S,T}$ 表示形成的生成树是 $S$ 集合，度为一的点是 $T$ 集合，发现要算重，再回头看看转移方程，是不是方案算了 $popcount(T)$ 次呢？所以除一下就好了。</p>\n<h3 id=\"45-CF1485F-Copy-or-Prefix-Sum-2400\"><a href=\"#45-CF1485F-Copy-or-Prefix-Sum-2400\" class=\"headerlink\" title=\"45.CF1485F Copy or Prefix Sum *2400\"></a>45.CF1485F Copy or Prefix Sum *2400</h3><p>容易设计一个 $nV$ 的DP， $f_{i,j}$ 表示填到 $i$ 和为 $j$ 的方案数，列出转移方程然后观察，一个相当于是右移，另一个相当于是上一位所有的和，于是乎用 map 维护一下DP过程即可。</p>\n<h3 id=\"46-ARC059F-Unhappy-Hacking-2400\"><a href=\"#46-ARC059F-Unhappy-Hacking-2400\" class=\"headerlink\" title=\"46.ARC059F Unhappy Hacking *2400\"></a>46.ARC059F Unhappy Hacking *2400</h3><p>难怪是上古ARC，这题放现在最多*1200，小糖DP，不想写了。</p>\n<h3 id=\"47-ARC058F-Iroha-and-Haiku-2500\"><a href=\"#47-ARC058F-Iroha-and-Haiku-2500\" class=\"headerlink\" title=\"47.ARC058F Iroha and Haiku *2500\"></a>47.ARC058F Iroha and Haiku *2500</h3><p>这个是真的educational啊，启发到我了。重要观察： $A+B+C \\le 17$。 于是乎考虑状压DP。</p>\n<p>$dp_{i,S}$ 表示填到第 $i$ 个数，可组成的后缀和集合为 $S$ 的方案数。最后求答案，正难则反。</p>\n<h3 id=\"48-ARC060F-Best-Representation-2800\"><a href=\"#48-ARC060F-Best-Representation-2800\" class=\"headerlink\" title=\"48.ARC060F Best Representation *2800\"></a>48.ARC060F Best Representation *2800</h3><p>顶级诈骗题，一眼看上去直接傻了。后来突然发现，只要不是一开始就不是周期串或者全相等那么第一问答案就是2，下一个模1e9+7就是个幌子。这下就清楚了，好像也就结束了，kmp看看周期即可。</p>\n<h3 id=\"49-ARC061E-Snuke’s-Subway-Trip-2400\"><a href=\"#49-ARC061E-Snuke’s-Subway-Trip-2400\" class=\"headerlink\" title=\"49.ARC061E Snuke’s Subway Trip *2400\"></a>49.ARC061E Snuke’s Subway Trip *2400</h3><p>可能是因为建虚点这个trick已经很普遍了吧，所以这题评了个绿，想到建虚点就做完了。</p>\n<h3 id=\"50-ARC157E-XXYX-Binary-Tree-2900\"><a href=\"#50-ARC157E-XXYX-Binary-Tree-2900\" class=\"headerlink\" title=\"50.ARC157E XXYX Binary Tree *2900\"></a>50.ARC157E XXYX Binary Tree *2900</h3><p>感觉是个傻子题，但是我没做出来，差一个观察。</p>\n<p>观察1：可以通过 B 和 C 算出来应该有几个叶子填 Y ,几个非叶子填 Y。</p>\n<p>观察2：子树内填非叶子 Y 的数量是个区间， $[0,mx]$</p>\n<p>想到这里就是个简单题了，树上背包即可。</p>\n","excerpt":"","more":"<p>每50题就开个新文章。</p>\n<p>同步于<a href=\"https://www.luogu.com.cn/article/fcbug12f\">洛谷专栏</a></p>\n<p>马上也快退役了，干点自己想干的事吧，别太功利了。 </p>\n<p>早就想开这个记录了，碍于之前学校各种各样的题单让我没时间做（其实时间是颓没的）。</p>\n<p>现在感觉做啥都也无所谓了，开始记录吧！</p>\n<p>本博客就简单记录一下，就记个大体思路。</p>\n<h3 id=\"1-CF1773G-Game-of-Questions-2800\"><a href=\"#1-CF1773G-Game-of-Questions-2800\" class=\"headerlink\" title=\"1.CF1773G Game of Questions *2800\"></a>1.CF1773G Game of Questions *2800</h3><p>很神的状压DP啊，发现人数不多遂想到状压一下人数，设 $dp_S$ 表示场上只剩状态为 $S$ 的人，然后Genie赢的概率。</p>\n<p>难点在于转移，我们并不知道有哪些问题之前被问过，但是状压问题的话就太夸张了。注意到一个性质，一个问题问几遍都和问一遍等价。这个性质看上去很显然，但却是转移的关键所在。设 $w_{S,T}$ 表示从能让状态 $S$ 变成状态 $T$ 的问题个数。预处理出 $w$ 再DP即可。</p>\n<h3 id=\"2-CF1775F-Laboratory-on-Pluto-2500\"><a href=\"#2-CF1775F-Laboratory-on-Pluto-2500\" class=\"headerlink\" title=\"2.CF1775F Laboratory on Pluto *2500\"></a>2.CF1775F Laboratory on Pluto *2500</h3><p>牛的数学题，感觉真不错。第一问是简单的，一边取成 $\\sqrt{n}$ 就是最小值。虽然我不是很会证，但你要枚举根号做好像也能过。</p>\n<p>主要是这个第二问的数数就比较困难，考虑连通块的形式，就是一个矩形四缺口这种感觉，但是缺口一定是阶梯状的，就意味着求的是拆分数，可以dp求解。求完了一个角上的方案数就背包一下就行了。这题牛就牛在单步似乎都很好想，合在一起就有点困难了，但也其实还好，我自己做的时候就是拆分数那里有点不会，可以看看 P1025 srf的那篇DP题解，学一下k部拆分数的DP求法，感觉挺妙的。</p>\n<h3 id=\"3-AGC045A-Xor-Battle-2000\"><a href=\"#3-AGC045A-Xor-Battle-2000\" class=\"headerlink\" title=\"3.AGC045A Xor Battle *2000\"></a>3.AGC045A Xor Battle *2000</h3><p>很有趣的一道博弈论题目。还好开了题解，不然死都不会做。考虑从后往前枚举，设集合 $S_i$ 表示从 $i$ 开始走，有哪些数能使0赢。考虑使用线性基进行转移即可。</p>\n<h3 id=\"4-AGC043D-Merge-Triplets-2700\"><a href=\"#4-AGC043D-Merge-Triplets-2700\" class=\"headerlink\" title=\"4.AGC043D Merge Triplets *2700\"></a>4.AGC043D Merge Triplets *2700</h3><p>非常秀的DP题，考虑答案的形状。答案排列按下降段划分每一段都不会超过二，而且长为1的段一定比2的多。</p>\n<p>此乃本题第一秀。于是我们设计出状态 $dp_{i,j}$ 表示填到了第 $i$ 个位置长为1的段比长为2的段多了 $j$ 个的方案数。</p>\n<p>考虑转移，观察排列，按照偏序关系建出一棵外向树，用数拓扑序的方式进行DP，此乃二秀。</p>\n<h3 id=\"5-ARC093E-Bichrome-Spanning-Tree-2500\"><a href=\"#5-ARC093E-Bichrome-Spanning-Tree-2500\" class=\"headerlink\" title=\"5.ARC093E Bichrome Spanning Tree *2500\"></a>5.ARC093E Bichrome Spanning Tree *2500</h3><p>非常牛的数数题。考虑原图的最小生成树，如果mst都比 $x$ 大，那肯定是没有方案的。 如果mst和 $x$ 一样大。那就意味着能够成mst的边必有异色，这个是好数的。另外一种困难些，考虑钦定一条边在权为 $x$ 的生成树中，那他这棵生成树是包含它的最小生成树，必定与一棵原图的最小生成树有交，构成最小生成树的边一定同色，这样数数就方便了许多。</p>\n<h3 id=\"6-ABC279G-At-Most-2-Colors-2400\"><a href=\"#6-ABC279G-At-Most-2-Colors-2400\" class=\"headerlink\" title=\"6.ABC279G At Most 2 Colors *2400\"></a>6.ABC279G At Most 2 Colors *2400</h3><p>牛的DP题，考虑状态设计，设 $dp_{i , 1/2}$ 表示填到 $i$ 这个位置时，最后 $k-1$ 个位置有几种不同颜色，$k-1$ 这个地方设计的有点巧妙，我也是这个地方想不到。如果光设计个 $k$,那么 $i - k$ 这个位置填啥又跟 $i$ 这个位置填啥没关系，会影响转移，换成 $k-1$ 就不会了。关键是求答案时答案对吗？看看自己的方程，是不是同时保证了后k个也只有两个颜色了呢。</p>\n<h3 id=\"7-CF1385G-Columns-Swaps-2300\"><a href=\"#7-CF1385G-Columns-Swaps-2300\" class=\"headerlink\" title=\"7.CF1385G Columns Swaps *2300\"></a>7.CF1385G Columns Swaps *2300</h3><p>2-sat 板子，无需多言</p>\n<h3 id=\"8-ABC281G-Farthest-City-2300\"><a href=\"#8-ABC281G-Farthest-City-2300\" class=\"headerlink\" title=\"8.ABC281G Farthest City *2300\"></a>8.ABC281G Farthest City *2300</h3><p>看你想不想的到BFS树结构，想到了就是一道简单DP。</p>\n<h3 id=\"9-CF1657E-Star-MST-2200\"><a href=\"#9-CF1657E-Star-MST-2200\" class=\"headerlink\" title=\"9.CF1657E Star MST *2200\"></a>9.CF1657E Star MST *2200</h3><p>找到边权之间的偏序关系，有一个跟上一题类似的DP。</p>\n<h3 id=\"10-ARC103F-Distance-Sums-2800\"><a href=\"#10-ARC103F-Distance-Sums-2800\" class=\"headerlink\" title=\"10.ARC103F Distance Sums *2800\"></a>10.ARC103F Distance Sums *2800</h3><p>妙妙构造题，非常的神奇。一看一个没思路。观察一下，发现d值最大的一定是某个叶子，d值最小的一定是重心。</p>\n<p>然后就考虑从叶子开始向上构造推测父亲是谁（钦定重心为根）。类似换根DP去转移然后二分推出父亲即可。</p>\n<h3 id=\"11-ARC006D-Median-Pyramid-Hard-3000\"><a href=\"#11-ARC006D-Median-Pyramid-Hard-3000\" class=\"headerlink\" title=\"11.ARC006D Median Pyramid Hard * 3000\"></a>11.ARC006D Median Pyramid Hard * 3000</h3><p>人才题。考虑二分？为什么要考虑这个？或许是因为中位数题好多都要二分。二分什么？二分答案。我们将大于二分出来的东西的数都看作是1其他看作是0，那么只需要关注顶部数的01情况，而这取决于最靠近中间的相同数对是0还是1，于是做完了。</p>\n<h3 id=\"12-CF1659E-AND-MEX-Walk-2200\"><a href=\"#12-CF1659E-AND-MEX-Walk-2200\" class=\"headerlink\" title=\"12.CF1659E AND-MEX Walk *2200\"></a>12.CF1659E AND-MEX Walk *2200</h3><p>考虑答案的范围，容易发现答案只有可能是0,1,2，分别使用并查集判断一下即可。</p>\n<h3 id=\"13-CF1473E-Minimum-Path-2400\"><a href=\"#13-CF1473E-Minimum-Path-2400\" class=\"headerlink\" title=\"13.CF1473E Minimum Path *2400\"></a>13.CF1473E Minimum Path *2400</h3><p>模拟赛原题，有点牛的。要求的式子很有最短路的感觉，式子的本质是抽出一条最长的换上一条最短的。</p>\n<p>OK，比较美妙的一步来了。要想用最短路去求解，那么必须把后面那一坨塞进 $\\sum$ 里面去。</p>\n<p>刚刚想了式子的本质，现在扩展一下，任选两条边，用一条去换另一条的最小值，此时茅塞顿开，这个问题就可以用分层图最短路进行求解了。</p>\n<h3 id=\"14-ARC127E-Priority-Queue-2700\"><a href=\"#14-ARC127E-Priority-Queue-2700\" class=\"headerlink\" title=\"14.ARC127E Priority Queue *2700\"></a>14.ARC127E Priority Queue *2700</h3><p>比较感性的一个题。正难则反，考虑计算被删除的集合的方案数，容易发现每个删除位置都有取值范围，而且还有一个奇奇怪怪的性质，每一次删的数都可以是离该次删除最接近的1，这样不会影响方案数，交换法不难证明。此时上文的取值范围也可以用类似于括号配对的方法求出来。既然集合计数那我就钦定一下数列是单调递增的，同时发现如果单增数列能取到，单增数列的排列也能取，反之同理，于是乎DP即可。</p>\n<p>感性就感性在每个性质看上去好像很显然证起来还是有一些困难的。</p>\n<h3 id=\"15-ARC180D-Division-into-3-2700\"><a href=\"#15-ARC180D-Division-into-3-2700\" class=\"headerlink\" title=\"15.ARC180D Division into 3 *2700\"></a>15.ARC180D Division into 3 *2700</h3><p>放在任务里面吃灰的，今天终于给他做了。算是一种套路题吧？观察到区间最大值一定会被取到，分类讨论一下在哪个段。</p>\n<p>在A/C段中就用扫描线算答案，在B中就只让AC取左右端点各一个，这题也就完了。感觉还是很神奇，从一个显然的性质推导出来整个做法</p>\n<h3 id=\"16-CF335F-Buy-One-Get-One-Free-3000\"><a href=\"#16-CF335F-Buy-One-Get-One-Free-3000\" class=\"headerlink\" title=\"16.CF335F Buy One, Get One Free *3000\"></a>16.CF335F Buy One, Get One Free *3000</h3><p>反悔贪心神仙题，反悔策略怎么想出来的，大概率是用归纳法。显然是把序列从大到小排个序，同样代价的物品就分为一组，按组进行考虑。维护一个小根堆记录当前白嫖的东西的价值，每次先算出当前这一轮一开始就可以白嫖多少个，先不忙压入小根堆避免造成影响。剩下的东西就考虑是买好还是不买好，按反悔贪心策略执行即可（不想细说了，毕竟不是题解）。</p>\n<h3 id=\"17-CF516D-Drazil-and-Morning-Exercise-2800\"><a href=\"#17-CF516D-Drazil-and-Morning-Exercise-2800\" class=\"headerlink\" title=\"17.CF516D Drazil and Morning Exercise *2800\"></a>17.CF516D Drazil and Morning Exercise *2800</h3><p>询问次数只有50，考虑使用大于 O(n) 复杂度的东西执行单次询问。</p>\n<p>思考怎么样才能使联通块的计算更加方便，钦定一个根，枚举联通块的根。</p>\n<p>然后呢，要是联通块的 max，min 的差值求起来方便就更好了。</p>\n<p>不妨让他随层数单调，如何实现，以f最小的点为根即可，每次询问树上差分。</p>\n<h3 id=\"18-ARC167C-MST-on-Line-2400\"><a href=\"#18-ARC167C-MST-on-Line-2400\" class=\"headerlink\" title=\"18.ARC167C MST on Line++ *2400\"></a>18.ARC167C MST on Line++ *2400</h3><p>考虑数每个 $a_i$ 在 MST 中的出现次数。容易发现 $a_i$ 的顺序与答案没啥关系。接下来的一步比较神秘，考虑一个子问题，如果只能选小于等于 $a_i$ 的边，最多能选多少条，把每个排列的答案加起来，记为 $f_i$，那么 $ans=\\sum_{i=1}^{n} a_i \\times f_i$，组合求 $f_i$ 即可。</p>\n<h3 id=\"19-ARC123D-Inc-Dec-Decomposition-2100\"><a href=\"#19-ARC123D-Inc-Dec-Decomposition-2100\" class=\"headerlink\" title=\"19.ARC123D Inc, Dec - Decomposition *2100\"></a>19.ARC123D Inc, Dec - Decomposition *2100</h3><p>简单题啊，居然有自己能很快做出来的题，尝试构造 $b,c$，这是简单的，感性理解一下，然后三分一下偏差值就是答案了。</p>\n<p>三分可以理解正确性，但是为什么想我那样构造就是答案了呢，其他的构造方法对吗？感觉很奇怪啊。</p>\n<h3 id=\"20-CF1270H-Number-of-Components-3300\"><a href=\"#20-CF1270H-Number-of-Components-3300\" class=\"headerlink\" title=\"20.CF1270H Number of Components *3300\"></a>20.CF1270H Number of Components *3300</h3><p>先发现一个性质：如果 $l$ 和 $r$ 在一个联通块内，那么 $[l , r]$ 就都在一个联通块内，证明是容易的。</p>\n<p>发现了这个性质之后，我们只需要求 $i$ 和 $i + 1$ 是否在一个联通块内。具体的判断方式是 $\\min_{j=1} ^{i} a_j \\ge max_{j=i+1}^{n} a_j$。记 $w=max_{j=i+1}^{n} a_j$，把数组内大于 $w$ 的设为 $1$，否则设为 $0$。如果 $i$ 和 $i + 1$ 不在同一联通块内那么二进制序列会长成 $11…100…0$ 这个样子，对于每个w维护一下10段的个数即可。</p>\n<h3 id=\"21-CF1548E-Gregor-and-the-Two-Painters-3400\"><a href=\"#21-CF1548E-Gregor-and-the-Two-Painters-3400\" class=\"headerlink\" title=\"21.CF1548E Gregor and the Two Painters *3400\"></a>21.CF1548E Gregor and the Two Painters *3400</h3><p>可以说是一种套路题吧，数网格联通块通用方法就是选个主元，去数有多少个主元，转化成求解偏序问题即可。</p>\n<p>注意主元和联通块要有双射关系，不然就假了。这个方法也可以做 SCCPC2024 A 虽然那个题有更简单的方法。</p>\n<h3 id=\"22-CF1656G-Cycle-Palindrome-3200\"><a href=\"#22-CF1656G-Cycle-Palindrome-3200\" class=\"headerlink\" title=\"22.CF1656G Cycle Palindrome *3200\"></a>22.CF1656G Cycle Palindrome *3200</h3><p>先考虑构造一组满足回文的排列，再考虑交换相同值的位置使得在同一个环中。</p>\n<p>然后再四个四个地换，判一下就行。正确性证明是困难的，不证了。</p>\n<h3 id=\"23-ARC156D-Xor-Sum-5-2600\"><a href=\"#23-ARC156D-Xor-Sum-5-2600\" class=\"headerlink\" title=\"23.ARC156D Xor Sum 5 *2600\"></a>23.ARC156D Xor Sum 5 *2600</h3><p>记一个牛逼结论：<strong>若组合数 $\\binom{n}{m}$ 是奇数，那么在二进制下，m是n的子集</strong></p>\n<p>推论：<strong>$\\binom{n}{c1,c2,c3…ck}$为奇数，那么c是n的某一子集的一组二进制划分</strong></p>\n<p>我们就记 $c_i$ 表示第 $i$ 个数的出现次数，当他的sum有贡献时，他就是上文的推论。</p>\n<p>所以发现最多40个 $c_i$ 是非零的，于是乎就可以DP了。</p>\n<h3 id=\"24-ABC271G-Access-Counter-2300\"><a href=\"#24-ABC271G-Access-Counter-2300\" class=\"headerlink\" title=\"24.ABC271G Access Counter * 2300\"></a>24.ABC271G Access Counter * 2300</h3><p>很难不想到矩阵快速幂，但是问题在于我怎么构造矩阵，这是本题的难点。</p>\n<p>首先是容易设计出基本DP的， $dp_{i,j}=\\sum_{k=1}^{24}dp_{i-1,k}\\times calc(k,j)$</p>\n<p>calc通过一些基本数列手段可以是可以处理出来的，然后挂到矩阵这题也就结束了。</p>\n<h3 id=\"25-CF1042E-Vasya-and-Magic-Matrix-2300\"><a href=\"#25-CF1042E-Vasya-and-Magic-Matrix-2300\" class=\"headerlink\" title=\"25.CF1042E Vasya and Magic Matrix *2300\"></a>25.CF1042E Vasya and Magic Matrix *2300</h3><p>朴素的期望DP，好像期望DP都是倒着的，大概就是从终状态转移到始状态的意思。</p>\n<p>矩阵的壳是个幌子，根本无需在意，把每个东西单拎出来按权排序后DP即可。</p>\n<h3 id=\"26-CF1552E-Colors-and-Intervals-2300\"><a href=\"#26-CF1552E-Colors-and-Intervals-2300\" class=\"headerlink\" title=\"26.CF1552E Colors and Intervals *2300\"></a>26.CF1552E Colors and Intervals *2300</h3><p>牛的构造题，先观察到每次选的两个点之间一定没有和它们同色的点，不然一定不优。</p>\n<p>每个东西被覆盖的次数限制很奇怪，考虑它的意义是什么。看见分母的 $k-1$ 不难联想到同一颜色的段数，那么考虑按段的编号分类，每个段就选限制个颜色即可。</p>\n<h3 id=\"27-CF1635F-Closest-Pair-2800\"><a href=\"#27-CF1635F-Closest-Pair-2800\" class=\"headerlink\" title=\"27.CF1635F Closest Pair *2800\"></a>27.CF1635F Closest Pair *2800</h3><p>结论题，设 $L_i$ 表示 $i$ 左边第一个 $w$ 小于等于 i的点，$R_i$ 同理。</p>\n<p>那么答案就在 $[L_i,i],[i,R_i]$ 中。转化为二维数点问题即可。</p>\n<h3 id=\"28-CF1868C-Travel-Plan-2400\"><a href=\"#28-CF1868C-Travel-Plan-2400\" class=\"headerlink\" title=\"28.CF1868C Travel Plan *2400\"></a>28.CF1868C Travel Plan *2400</h3><p>式子题，考虑对于满二叉树怎么做，会了这个就把原数拆成 $logn$ 个满二叉树即可。</p>\n<p>具体的，枚举最大值，记 $ans_i$ 表示最大值 $\\le i$ 的答案，那么最后答案就是 $\\sum_{i=1}^{m}i\\times (ans_i - ans_{i-1})$</p>\n<p>对于具体的转移不多赘述，主要就是记两个东西，一个表示这个子树所有东西到根的答案和子树内所以东西的填法的和。</p>\n<h3 id=\"29-CF599E-Sandy-and-Nuts-2600\"><a href=\"#29-CF599E-Sandy-and-Nuts-2600\" class=\"headerlink\" title=\"29.CF599E Sandy and Nuts *2600\"></a>29.CF599E Sandy and Nuts *2600</h3><p>困难的，状态想错了导致举步维艰，想到状态之后这题并不困难，主要是处理限制的时候要稍微注意一下细节。状态是 $dp_{i,S}$ 表示以 $i$ 为根的子树内的点集为 $S$ 的合法方案数。方程就是 $dp_{i,S}=\\sum_{T\\in S} dp_{u,T}\\times dp_{i , S\\oplus T}$。使用钦定技巧避免算重。</p>\n<h3 id=\"30-CF623D-Birthday-2700\"><a href=\"#30-CF623D-Birthday-2700\" class=\"headerlink\" title=\"30.CF623D Birthday *2700\"></a>30.CF623D Birthday *2700</h3><p>难点解析：揣测出题人。</p>\n<p>为啥不让你求模意义下的答案，精度误差为啥允许开这么大，样例解释为啥没有计算过程？有没有种可能，真实值根本算不出来？</p>\n<p>想到这里这题大概也就迎刃而解了，计算k轮猜到答案的概率。直接做不好做，考虑容斥进行计算。具体的，计算在最多 $k$ 轮的时候结束的概率。要是知道每个人被猜到几次的话就很容易算概率了。列出式子，每一步贪心即可。收敛速度较快，计算 $3e5$ 次即可通过此题。</p>\n<h3 id=\"31-CF407D-Largest-Submatrix-3-2700\"><a href=\"#31-CF407D-Largest-Submatrix-3-2700\" class=\"headerlink\" title=\"31.CF407D Largest Submatrix 3 *2700\"></a>31.CF407D Largest Submatrix 3 *2700</h3><p>不难想到 $O(n^4)$ 暴力，枚举行的上下界，对列跑双指针。这个算法难以优化，更换枚举次序。枚举左右界再枚举下边界，类似于区间DP得去转移答案。（子矩阵背景的题目从来没有自己做出来过，呜呜呜）</p>\n<h3 id=\"32-CF1844G-Tree-Weight-3000\"><a href=\"#32-CF1844G-Tree-Weight-3000\" class=\"headerlink\" title=\"32.CF1844G Tree Weight *3000\"></a>32.CF1844G Tree Weight *3000</h3><p>牛逼题目，这辈子没见过这么秀的。</p>\n<p>首先容易把 $d_i$ 拆成 $dep_i + dep_{i + 1} - 2 \\times dep_{lca(i,i+1)}$</p>\n<p>然后就会发现这个东西非常不优美，要是能够拆出来的东西少带点变量就好了，因为 $dep_1$ 我们是知道的，他就是0。少带点变量就会使得这个式子可以递推了！<strong>注意到lca前面有个系数2，对等式两边取个2的模这个东西就没了！</strong> 然后我们就可以考虑按二进制位进行递推了。具体的，设 $ans_{i,j}\\equiv dep_{i} \\mod 2^j$。 那么有 $ans_{i,j}={(d(i-1,i)-ans_{i-1,j}+2\\times ans_{lca(i-1,i),j-1})} \\mod 2^j$最后判一下-1即可。注意力惊人的人可以独立做出来，可惜我不是。</p>\n<h3 id=\"33-CF1762D-GCD-Queries-2100\"><a href=\"#33-CF1762D-GCD-Queries-2100\" class=\"headerlink\" title=\"33.CF1762D GCD Queries *2100\"></a>33.CF1762D GCD Queries *2100</h3><p>似乎是比较容易的。其实无非就是就是让你每两次操作排除一个非零的数。按顺序遍历配合上指针优化再加上简单的分讨即可。</p>\n<h3 id=\"34-CF1406E-Deleting-Numbers-2600\"><a href=\"#34-CF1406E-Deleting-Numbers-2600\" class=\"headerlink\" title=\"34.CF1406E Deleting Numbers *2600\"></a>34.CF1406E Deleting Numbers *2600</h3><p>非常厉害的交互！有点人类智慧的感觉。</p>\n<p>首先是容易想到一个每个质数操作两次在log一下的方法，算算发现操作次数会超。</p>\n<p>考虑优化。显然对于上述做法而言，质数这个点是不会变的，那能不能让没啥用每个质数只操作1次呢。</p>\n<p>可以的，我们依次对每个质数操作B，然后计算出理论答案，要是不一样的话我们就check一下它的幂次。</p>\n<p>可是这样对于最小的质数而言，我们就没法求了。所以每过根号次操作就做一遍 A 1。要是有出入就把块内所有东西都判一遍即可。</p>\n<h3 id=\"35-CF1033E-Hidden-Bipartite-Graph-2800\"><a href=\"#35-CF1033E-Hidden-Bipartite-Graph-2800\" class=\"headerlink\" title=\"35.CF1033E Hidden Bipartite Graph *2800\"></a>35.CF1033E Hidden Bipartite Graph *2800</h3><p>也是非常厉害的交互！更加的人类智慧！</p>\n<p>积累一种不一样的判二分图的trick：图中抽一棵生成树，看一下奇数层的点之间有没有连边，偶数层之间有没有连边。</p>\n<p>对于这个题而言我们可以先用 $2nlogn$ 次询问分治的去问出一棵生成树来。然后我们再在奇偶层之间随机分治看看有没连边。很巧妙的是这个随机分治，每次把点集大小除以二而且每一层期望操作次数只有两次，非常聪明啊！</p>\n<h3 id=\"36-CF1863G-Swaps-2800\"><a href=\"#36-CF1863G-Swaps-2800\" class=\"headerlink\" title=\"36.CF1863G Swaps *2800\"></a>36.CF1863G Swaps *2800</h3><p>套路题？容易想到 $a_i$ 向 $i$ 连条边。然后观察一次操作带来的影响，发现一次操作带来一个自环。同时可以构建出一个双射：能生成的序列可以这样构成：如果 $i$ 的入边被操作过，那么这个位置就是 $i$，否则就是一条未被标记的出边指向的点权，这是容易计数的，注意在联通块为环时特殊处理一下即可。</p>\n<h3 id=\"37-JOISC2015-F-合鍵\"><a href=\"#37-JOISC2015-F-合鍵\" class=\"headerlink\" title=\"37.JOISC2015 F 合鍵\"></a>37.JOISC2015 F 合鍵</h3><p>非常好题目，让我认识到自己的不足：对于奇怪的模型就失去了分析的能力。</p>\n<p><strong>容易想到</strong> 把 $l,r$ 拆开一起排序，分讨每一段的贡献情况，然后DP统计贡献即可。</p>\n<h3 id=\"38-ABC373G-No-Cross-Matching-2400\"><a href=\"#38-ABC373G-No-Cross-Matching-2400\" class=\"headerlink\" title=\"38.ABC373G No Cross Matching *2400\"></a>38.ABC373G No Cross Matching *2400</h3><p>场上的时候有种流子的感觉，但是不会建模。现在会了神秘贪心。</p>\n<p>非常厉害的转化，相交线段可以通过交换变得不相交，这会使得总距离变短，那么我们是需要让总距离最短即可，按照冒泡排序模拟即可。</p>\n<h3 id=\"39-Yahoo-Programming-Contest-2019-Odd-Subrectangles-2600\"><a href=\"#39-Yahoo-Programming-Contest-2019-Odd-Subrectangles-2600\" class=\"headerlink\" title=\"39.Yahoo Programming Contest 2019 Odd Subrectangles *2600\"></a>39.Yahoo Programming Contest 2019 Odd Subrectangles *2600</h3><p>容易想到转化为异或为1。考虑现在已经选出了一些行，那些列符合答案，记第 $i$ 列的异或和为 $c_i$ ，只要有一个 $c_i$ 等于1，那么这就意味着方案数是 $2^{m-1}$，其他列情况任选，用这一列来调整即可。那么现在思考怎么选行能够使得至少有一个1，把每行当成一个二进制数，这个问题就转化成了怎么选使异或和部位0，为0是简单的，记 $x$ 表示线性基的大小，然后异或和为0的方案数就是 $2^{n - x}$，证明原理和刚才一样。</p>\n<h3 id=\"40-CF513D-Constrained-Tree-2600\"><a href=\"#40-CF513D-Constrained-Tree-2600\" class=\"headerlink\" title=\"40.CF513D Constrained Tree *2600\"></a>40.CF513D Constrained Tree *2600</h3><p>自己的思路是转化成偏序问题后瞎构造，不会证明正确性，也没有实践，来记个题解做法。</p>\n<p>大概就是去dfs，dfs(u) 表示 $u$ 是一个叶子时的可行性，然后简单判断几下递归下去是简单的。</p>\n<h3 id=\"41-CF1699E-Three-Days-Grace-2600\"><a href=\"#41-CF1699E-Three-Days-Grace-2600\" class=\"headerlink\" title=\"41.CF1699E Three Days Grace *2600\"></a>41.CF1699E Three Days Grace *2600</h3><p>这题DP？我咋想到？分析整个删数的过程，容易发现就是分解而已。想到去枚举一个最小值，让最大值最小，考虑 $dp_{i,j}$ 表示分解出来最小的数比 $i$ 大，最大的数最小是多少，发现转移是调和级数级别的，双指针找答案即可。</p>\n<h3 id=\"42-CF547D-Mike-and-Fish-2600\"><a href=\"#42-CF547D-Mike-and-Fish-2600\" class=\"headerlink\" title=\"42.CF547D Mike and Fish *2600\"></a>42.CF547D Mike and Fish *2600</h3><p>这种染色问题再配上这个网格图背景，很难不让人想到二分图染色。考虑怎么进行染色，有一种很简单的方法是相同横或纵坐标的点两两配对，要是剩一个就不管了，不难证明这是正确的。</p>\n<h3 id=\"43-CF1253F-Cheap-Robot-2500\"><a href=\"#43-CF1253F-Cheap-Robot-2500\" class=\"headerlink\" title=\"43.CF1253F Cheap Robot *2500\"></a>43.CF1253F Cheap Robot *2500</h3><p>感觉是困难的。遇到这种图上多询问的问题就先不要往什么LCT这种东西方面去思考，实在不行再试试，然后考虑对于单个询问怎么做，要求的答案根据什么量推出来，把图上有用的东西再留下来，看看在树上怎么做。这题就这样的，看两个相邻的充电站想要抵达对 $c$ 的限制是什么，化成一个关于c的不等式，然后放在重构树上询问就可以了。</p>\n<h3 id=\"44-CF53E-Dead-Ends-2500\"><a href=\"#44-CF53E-Dead-Ends-2500\" class=\"headerlink\" title=\"44.CF53E Dead Ends *2500\"></a>44.CF53E Dead Ends *2500</h3><p>似乎是简单的，反正我秒了。看见数据范围这样的小，看来是DP状态需要两个状压维，那DP状态就出来了, $dp_{S,T}$ 表示形成的生成树是 $S$ 集合，度为一的点是 $T$ 集合，发现要算重，再回头看看转移方程，是不是方案算了 $popcount(T)$ 次呢？所以除一下就好了。</p>\n<h3 id=\"45-CF1485F-Copy-or-Prefix-Sum-2400\"><a href=\"#45-CF1485F-Copy-or-Prefix-Sum-2400\" class=\"headerlink\" title=\"45.CF1485F Copy or Prefix Sum *2400\"></a>45.CF1485F Copy or Prefix Sum *2400</h3><p>容易设计一个 $nV$ 的DP， $f_{i,j}$ 表示填到 $i$ 和为 $j$ 的方案数，列出转移方程然后观察，一个相当于是右移，另一个相当于是上一位所有的和，于是乎用 map 维护一下DP过程即可。</p>\n<h3 id=\"46-ARC059F-Unhappy-Hacking-2400\"><a href=\"#46-ARC059F-Unhappy-Hacking-2400\" class=\"headerlink\" title=\"46.ARC059F Unhappy Hacking *2400\"></a>46.ARC059F Unhappy Hacking *2400</h3><p>难怪是上古ARC，这题放现在最多*1200，小糖DP，不想写了。</p>\n<h3 id=\"47-ARC058F-Iroha-and-Haiku-2500\"><a href=\"#47-ARC058F-Iroha-and-Haiku-2500\" class=\"headerlink\" title=\"47.ARC058F Iroha and Haiku *2500\"></a>47.ARC058F Iroha and Haiku *2500</h3><p>这个是真的educational啊，启发到我了。重要观察： $A+B+C \\le 17$。 于是乎考虑状压DP。</p>\n<p>$dp_{i,S}$ 表示填到第 $i$ 个数，可组成的后缀和集合为 $S$ 的方案数。最后求答案，正难则反。</p>\n<h3 id=\"48-ARC060F-Best-Representation-2800\"><a href=\"#48-ARC060F-Best-Representation-2800\" class=\"headerlink\" title=\"48.ARC060F Best Representation *2800\"></a>48.ARC060F Best Representation *2800</h3><p>顶级诈骗题，一眼看上去直接傻了。后来突然发现，只要不是一开始就不是周期串或者全相等那么第一问答案就是2，下一个模1e9+7就是个幌子。这下就清楚了，好像也就结束了，kmp看看周期即可。</p>\n<h3 id=\"49-ARC061E-Snuke’s-Subway-Trip-2400\"><a href=\"#49-ARC061E-Snuke’s-Subway-Trip-2400\" class=\"headerlink\" title=\"49.ARC061E Snuke’s Subway Trip *2400\"></a>49.ARC061E Snuke’s Subway Trip *2400</h3><p>可能是因为建虚点这个trick已经很普遍了吧，所以这题评了个绿，想到建虚点就做完了。</p>\n<h3 id=\"50-ARC157E-XXYX-Binary-Tree-2900\"><a href=\"#50-ARC157E-XXYX-Binary-Tree-2900\" class=\"headerlink\" title=\"50.ARC157E XXYX Binary Tree *2900\"></a>50.ARC157E XXYX Binary Tree *2900</h3><p>感觉是个傻子题，但是我没做出来，差一个观察。</p>\n<p>观察1：可以通过 B 和 C 算出来应该有几个叶子填 Y ,几个非叶子填 Y。</p>\n<p>观察2：子树内填非叶子 Y 的数量是个区间， $[0,mx]$</p>\n<p>想到这里就是个简单题了，树上背包即可。</p>\n"},{"title":"Codeforces做题记录1","date":"2024-10-15T16:00:00.000Z","toc":false,"mathjax":true,"_content":"\n感觉之前的CF/AtC乱做记录太杂乱了，就打算每个OJ单开一个文章。\n\n### 1.CF1707E Replace *3500\n\n年轻人的第一道*3500！爱来自模拟赛T4。赛时的时候啥东西都注意不到，赛后一看题解：就这？\n\n先明确一个大体的思路，状态一共有 $n^2$ 个，我们不可能每个状态都去算，所以我们考虑倍增。\n\n再仔细看看这个二元函数 $f(l,r)$ 有什么性质：\n\n**不难注意到 $f(l , r)=\\bigcup_{k=l+1}^{r-1}f(k,r)$** \n\n**进行一个简单的推广 $f^x (l , r)=\\bigcup_{k=l+1}^{r-1}f ^ x(k,r)$**\n\n然后发现我只用处理形如 $[i,i+1]$ 这样的区间。接下来倍增处理多次操作即可。\n\n### 2.CF325E The Red Button *2800\n\n人才题目，困难的。首先很显然的是 $n$ 为奇数肯定无解。然后我想到这里就不会了。\n\n然后有一个关键的观察，**$i$ 和 $i + \\frac{n}{2}$ 的出边是一样的**，这就意味着随便怎么样选边必出环。\n\n先随便钦定一种连边方式，然后使用并查集看看是否在同一个环上，如果不在的话就交换出边然后就在一个环上了。\n\n因为只有n条边，所以最后形成的一定是一个环，同时也一定合法。\n\n### 3.CF1493F Enchanted Matrix *2600\n\n牛的交互题。一个重要的观察是我只需要求出最小的那个 $r$ 和 $c$ 即可。考虑用更少的操作去求。\n\n由于 $r$ 一定是 $n$ 的因数。所以我们可以考虑一个一个地去试除因子。当因子为2时是容易的。奇数因子可以考虑使用字符串 border 的结论去算，只不过花两次的代价而已。\n\n### 4.CF2030E MEXimize the Score *2300\n\n似乎是套路的数数题。 考虑对于单个的子序列进行求解，记 $X$ 表示子序列， $f(X)=\\sum_{i=0}^{n} \\min_{j=0}^{i} cnt_j$。\n\n暴力肯定是行不通的，但是我会拆贡献！\n\n按值域枚举，再枚举每个前缀的 $mn$ 是多少，然后DP算算贡献即可。\n","source":"_posts/0003.md","raw":"---\ntitle: Codeforces做题记录1\ndate: 2024-10-16\ntoc: false\ncategory: [做题记录]\nmathjax: true\n---\n\n感觉之前的CF/AtC乱做记录太杂乱了，就打算每个OJ单开一个文章。\n\n### 1.CF1707E Replace *3500\n\n年轻人的第一道*3500！爱来自模拟赛T4。赛时的时候啥东西都注意不到，赛后一看题解：就这？\n\n先明确一个大体的思路，状态一共有 $n^2$ 个，我们不可能每个状态都去算，所以我们考虑倍增。\n\n再仔细看看这个二元函数 $f(l,r)$ 有什么性质：\n\n**不难注意到 $f(l , r)=\\bigcup_{k=l+1}^{r-1}f(k,r)$** \n\n**进行一个简单的推广 $f^x (l , r)=\\bigcup_{k=l+1}^{r-1}f ^ x(k,r)$**\n\n然后发现我只用处理形如 $[i,i+1]$ 这样的区间。接下来倍增处理多次操作即可。\n\n### 2.CF325E The Red Button *2800\n\n人才题目，困难的。首先很显然的是 $n$ 为奇数肯定无解。然后我想到这里就不会了。\n\n然后有一个关键的观察，**$i$ 和 $i + \\frac{n}{2}$ 的出边是一样的**，这就意味着随便怎么样选边必出环。\n\n先随便钦定一种连边方式，然后使用并查集看看是否在同一个环上，如果不在的话就交换出边然后就在一个环上了。\n\n因为只有n条边，所以最后形成的一定是一个环，同时也一定合法。\n\n### 3.CF1493F Enchanted Matrix *2600\n\n牛的交互题。一个重要的观察是我只需要求出最小的那个 $r$ 和 $c$ 即可。考虑用更少的操作去求。\n\n由于 $r$ 一定是 $n$ 的因数。所以我们可以考虑一个一个地去试除因子。当因子为2时是容易的。奇数因子可以考虑使用字符串 border 的结论去算，只不过花两次的代价而已。\n\n### 4.CF2030E MEXimize the Score *2300\n\n似乎是套路的数数题。 考虑对于单个的子序列进行求解，记 $X$ 表示子序列， $f(X)=\\sum_{i=0}^{n} \\min_{j=0}^{i} cnt_j$。\n\n暴力肯定是行不通的，但是我会拆贡献！\n\n按值域枚举，再枚举每个前缀的 $mn$ 是多少，然后DP算算贡献即可。\n","slug":"0003","published":1,"updated":"2025-06-28T13:44:17.465Z","comments":1,"layout":"post","photos":[],"_id":"cmcgb3qs20004ewrd7hb8ac2p","content":"<p>感觉之前的CF/AtC乱做记录太杂乱了，就打算每个OJ单开一个文章。</p>\n<h3 id=\"1-CF1707E-Replace-3500\"><a href=\"#1-CF1707E-Replace-3500\" class=\"headerlink\" title=\"1.CF1707E Replace *3500\"></a>1.CF1707E Replace *3500</h3><p>年轻人的第一道*3500！爱来自模拟赛T4。赛时的时候啥东西都注意不到，赛后一看题解：就这？</p>\n<p>先明确一个大体的思路，状态一共有 $n^2$ 个，我们不可能每个状态都去算，所以我们考虑倍增。</p>\n<p>再仔细看看这个二元函数 $f(l,r)$ 有什么性质：</p>\n<p><strong>不难注意到 $f(l , r)=\\bigcup_{k=l+1}^{r-1}f(k,r)$</strong> </p>\n<p><strong>进行一个简单的推广 $f^x (l , r)=\\bigcup_{k=l+1}^{r-1}f ^ x(k,r)$</strong></p>\n<p>然后发现我只用处理形如 $[i,i+1]$ 这样的区间。接下来倍增处理多次操作即可。</p>\n<h3 id=\"2-CF325E-The-Red-Button-2800\"><a href=\"#2-CF325E-The-Red-Button-2800\" class=\"headerlink\" title=\"2.CF325E The Red Button *2800\"></a>2.CF325E The Red Button *2800</h3><p>人才题目，困难的。首先很显然的是 $n$ 为奇数肯定无解。然后我想到这里就不会了。</p>\n<p>然后有一个关键的观察，<strong>$i$ 和 $i + \\frac{n}{2}$ 的出边是一样的</strong>，这就意味着随便怎么样选边必出环。</p>\n<p>先随便钦定一种连边方式，然后使用并查集看看是否在同一个环上，如果不在的话就交换出边然后就在一个环上了。</p>\n<p>因为只有n条边，所以最后形成的一定是一个环，同时也一定合法。</p>\n<h3 id=\"3-CF1493F-Enchanted-Matrix-2600\"><a href=\"#3-CF1493F-Enchanted-Matrix-2600\" class=\"headerlink\" title=\"3.CF1493F Enchanted Matrix *2600\"></a>3.CF1493F Enchanted Matrix *2600</h3><p>牛的交互题。一个重要的观察是我只需要求出最小的那个 $r$ 和 $c$ 即可。考虑用更少的操作去求。</p>\n<p>由于 $r$ 一定是 $n$ 的因数。所以我们可以考虑一个一个地去试除因子。当因子为2时是容易的。奇数因子可以考虑使用字符串 border 的结论去算，只不过花两次的代价而已。</p>\n<h3 id=\"4-CF2030E-MEXimize-the-Score-2300\"><a href=\"#4-CF2030E-MEXimize-the-Score-2300\" class=\"headerlink\" title=\"4.CF2030E MEXimize the Score *2300\"></a>4.CF2030E MEXimize the Score *2300</h3><p>似乎是套路的数数题。 考虑对于单个的子序列进行求解，记 $X$ 表示子序列， $f(X)=\\sum_{i=0}^{n} \\min_{j=0}^{i} cnt_j$。</p>\n<p>暴力肯定是行不通的，但是我会拆贡献！</p>\n<p>按值域枚举，再枚举每个前缀的 $mn$ 是多少，然后DP算算贡献即可。</p>\n","excerpt":"","more":"<p>感觉之前的CF/AtC乱做记录太杂乱了，就打算每个OJ单开一个文章。</p>\n<h3 id=\"1-CF1707E-Replace-3500\"><a href=\"#1-CF1707E-Replace-3500\" class=\"headerlink\" title=\"1.CF1707E Replace *3500\"></a>1.CF1707E Replace *3500</h3><p>年轻人的第一道*3500！爱来自模拟赛T4。赛时的时候啥东西都注意不到，赛后一看题解：就这？</p>\n<p>先明确一个大体的思路，状态一共有 $n^2$ 个，我们不可能每个状态都去算，所以我们考虑倍增。</p>\n<p>再仔细看看这个二元函数 $f(l,r)$ 有什么性质：</p>\n<p><strong>不难注意到 $f(l , r)=\\bigcup_{k=l+1}^{r-1}f(k,r)$</strong> </p>\n<p><strong>进行一个简单的推广 $f^x (l , r)=\\bigcup_{k=l+1}^{r-1}f ^ x(k,r)$</strong></p>\n<p>然后发现我只用处理形如 $[i,i+1]$ 这样的区间。接下来倍增处理多次操作即可。</p>\n<h3 id=\"2-CF325E-The-Red-Button-2800\"><a href=\"#2-CF325E-The-Red-Button-2800\" class=\"headerlink\" title=\"2.CF325E The Red Button *2800\"></a>2.CF325E The Red Button *2800</h3><p>人才题目，困难的。首先很显然的是 $n$ 为奇数肯定无解。然后我想到这里就不会了。</p>\n<p>然后有一个关键的观察，<strong>$i$ 和 $i + \\frac{n}{2}$ 的出边是一样的</strong>，这就意味着随便怎么样选边必出环。</p>\n<p>先随便钦定一种连边方式，然后使用并查集看看是否在同一个环上，如果不在的话就交换出边然后就在一个环上了。</p>\n<p>因为只有n条边，所以最后形成的一定是一个环，同时也一定合法。</p>\n<h3 id=\"3-CF1493F-Enchanted-Matrix-2600\"><a href=\"#3-CF1493F-Enchanted-Matrix-2600\" class=\"headerlink\" title=\"3.CF1493F Enchanted Matrix *2600\"></a>3.CF1493F Enchanted Matrix *2600</h3><p>牛的交互题。一个重要的观察是我只需要求出最小的那个 $r$ 和 $c$ 即可。考虑用更少的操作去求。</p>\n<p>由于 $r$ 一定是 $n$ 的因数。所以我们可以考虑一个一个地去试除因子。当因子为2时是容易的。奇数因子可以考虑使用字符串 border 的结论去算，只不过花两次的代价而已。</p>\n<h3 id=\"4-CF2030E-MEXimize-the-Score-2300\"><a href=\"#4-CF2030E-MEXimize-the-Score-2300\" class=\"headerlink\" title=\"4.CF2030E MEXimize the Score *2300\"></a>4.CF2030E MEXimize the Score *2300</h3><p>似乎是套路的数数题。 考虑对于单个的子序列进行求解，记 $X$ 表示子序列， $f(X)=\\sum_{i=0}^{n} \\min_{j=0}^{i} cnt_j$。</p>\n<p>暴力肯定是行不通的，但是我会拆贡献！</p>\n<p>按值域枚举，再枚举每个前缀的 $mn$ 是多少，然后DP算算贡献即可。</p>\n"},{"title":"AtCoder做题记录1","date":"2024-10-16T16:00:00.000Z","toc":false,"mathjax":true,"_content":"\n### 1.ARC063E Integers on a Tree *2200\n\n自己做的时候觉得异常困难，但其实自己的思路比较正确，但还是有些地方想不清楚。两种方法：\n\n1.选出已知权值最小且还没遍历过的点，把相邻的还没有更新过的点更新为该点的权值加1。最后check即可，正确性显然，但是过于人类智慧了一点。\n\n2.考虑到二分图同一个部中的点奇偶性相同，考虑根据形态DP求出每个点的取值范围，然后从根节点往下边赋值边check即可。\n\n### 2.ARC061F Card Game for Three *3200\n\n感觉这题非常简单啊，大概放现在也就只有 *2200 的水平。首先一个 $O(n^2)$ 的做法比较显然，注意到数牌组配置数量等价于数操作序列，操作序列定义为每次出的牌组成的序列。\n\n然后设最后一次出牌是第 $k$ 次，推推式子就行了，然后你会得到一个 $O(n^2)$ 的式子，暴力算就是 $O(n^2)$ 的做法了。考虑优化：\n\n发现瓶颈在于处理式子中前 $k$ 张牌的枚举时产生的组合数求和，从化式子的角度进行考虑过于困难，试试递推，其实也还是要化个式子，只不过是换成递推形式而已。\n\n### 3.ARC063F *3700\n\n银牌题。相当的困难，需要相当集中的注意力。\n\n**Two Key Observations**：\n\n1.观察到操作等价于从原矩形中选一个周长最大的矩形满足矩形内部没有给出的 $(x,y)$\n\n2.观察到最后形成的矩形必过 $x=\\frac{H}{2}$ 或者 $y=\\frac{W}{2}$ 这两根线之一。\n\n至此，就是套路题，枚举右端点，单调栈维护上下界，线段树求答案。代码其实还好，上面两个观察确实比较逆天。\n\n### 4.ARC064F Rotated Palindromes *3000\n\n为什么这个题能评到这个分？考虑去重，什么时候会有重复呢？只有循环同构回文串才会算重，枚举循环节长度，容斥计算方案数，然后乘上贡献即可。若循环节长度为奇数，贡献就是循环节长度，偶数就是除以二。\n\n### 5.ARC130D Zigzag Tree *2400\n\n这种东西是人 15 min 能想清楚的？数排列又多了一种套路，***DP排名*\n\n发现把树黑白染色后如果钦定了一种顺序，那么整个排列的偏序关系就确定了。设计DP状态 $dp_{i,j,0/1}$ 表示 $i$ 这个点在子树内排名为 $j$ 这个点是黑点还是白点。\n\n黑点就是周围的点都大于它，否则是小于它。方程是困难的，组合系数的推导要点功底。\n\n### 6.AT_sunke21_j Drink Bar\n\n厉害的。先去挖掘一下那些 $S$ 是有用的，发现只有 $|S| \\le 3$ 的集合是有用的。然后考虑按 $S$ 的大小分别计算。注意要容斥掉一些东西，这些东西就只能用CDQ分治进行计算。\n\n### 7.ARC067E Grouping *2200\n\n确实是基础DP，不多讲了。\n\n### 8.ARC067F Yakiniku Restaurants *2700\n\n这种数轴上走来走去的题就是不会做！这种题真的就是找性质加转化成一个形式化一点的东西。\n\n比如该题注意到答案就是一段区间，并且可以直接从左走到右，于是：\n\n$$ans=\\max_{[l,r]\\subseteq [1,n]} (\\sum_{i=1}^{m} \\max_{j=l}^{r}B_{j,i} - \\sum_{i=l}^{r-1}a_i)$$\n\n### 9.ARC114D Moving Pieces on Line *2700\n\n为什么有人可以十分钟AC？？？？？ 太困难了！\n\n以后积累一个小套路：以后看到这种二元对立一样的题目描述就给我想异或相关的东西。\n\n**Key Observations**\n\n1.不会走回头路。\n\n2.每一次操作可以理解为异或一段区间并且代价为 $|X_s - X_t|$\n\n3.把异或操作放在差分数组上进行观察，就是起点和终点异或1。\n\n至此就可以设计一个 $O(n^2)$ 的DP了。\n","source":"_posts/0004.md","raw":"---\ntitle: AtCoder做题记录1\ndate: 2024-10-17\ntoc: false\ncategory: [做题记录]\nmathjax: true\n---\n\n### 1.ARC063E Integers on a Tree *2200\n\n自己做的时候觉得异常困难，但其实自己的思路比较正确，但还是有些地方想不清楚。两种方法：\n\n1.选出已知权值最小且还没遍历过的点，把相邻的还没有更新过的点更新为该点的权值加1。最后check即可，正确性显然，但是过于人类智慧了一点。\n\n2.考虑到二分图同一个部中的点奇偶性相同，考虑根据形态DP求出每个点的取值范围，然后从根节点往下边赋值边check即可。\n\n### 2.ARC061F Card Game for Three *3200\n\n感觉这题非常简单啊，大概放现在也就只有 *2200 的水平。首先一个 $O(n^2)$ 的做法比较显然，注意到数牌组配置数量等价于数操作序列，操作序列定义为每次出的牌组成的序列。\n\n然后设最后一次出牌是第 $k$ 次，推推式子就行了，然后你会得到一个 $O(n^2)$ 的式子，暴力算就是 $O(n^2)$ 的做法了。考虑优化：\n\n发现瓶颈在于处理式子中前 $k$ 张牌的枚举时产生的组合数求和，从化式子的角度进行考虑过于困难，试试递推，其实也还是要化个式子，只不过是换成递推形式而已。\n\n### 3.ARC063F *3700\n\n银牌题。相当的困难，需要相当集中的注意力。\n\n**Two Key Observations**：\n\n1.观察到操作等价于从原矩形中选一个周长最大的矩形满足矩形内部没有给出的 $(x,y)$\n\n2.观察到最后形成的矩形必过 $x=\\frac{H}{2}$ 或者 $y=\\frac{W}{2}$ 这两根线之一。\n\n至此，就是套路题，枚举右端点，单调栈维护上下界，线段树求答案。代码其实还好，上面两个观察确实比较逆天。\n\n### 4.ARC064F Rotated Palindromes *3000\n\n为什么这个题能评到这个分？考虑去重，什么时候会有重复呢？只有循环同构回文串才会算重，枚举循环节长度，容斥计算方案数，然后乘上贡献即可。若循环节长度为奇数，贡献就是循环节长度，偶数就是除以二。\n\n### 5.ARC130D Zigzag Tree *2400\n\n这种东西是人 15 min 能想清楚的？数排列又多了一种套路，***DP排名*\n\n发现把树黑白染色后如果钦定了一种顺序，那么整个排列的偏序关系就确定了。设计DP状态 $dp_{i,j,0/1}$ 表示 $i$ 这个点在子树内排名为 $j$ 这个点是黑点还是白点。\n\n黑点就是周围的点都大于它，否则是小于它。方程是困难的，组合系数的推导要点功底。\n\n### 6.AT_sunke21_j Drink Bar\n\n厉害的。先去挖掘一下那些 $S$ 是有用的，发现只有 $|S| \\le 3$ 的集合是有用的。然后考虑按 $S$ 的大小分别计算。注意要容斥掉一些东西，这些东西就只能用CDQ分治进行计算。\n\n### 7.ARC067E Grouping *2200\n\n确实是基础DP，不多讲了。\n\n### 8.ARC067F Yakiniku Restaurants *2700\n\n这种数轴上走来走去的题就是不会做！这种题真的就是找性质加转化成一个形式化一点的东西。\n\n比如该题注意到答案就是一段区间，并且可以直接从左走到右，于是：\n\n$$ans=\\max_{[l,r]\\subseteq [1,n]} (\\sum_{i=1}^{m} \\max_{j=l}^{r}B_{j,i} - \\sum_{i=l}^{r-1}a_i)$$\n\n### 9.ARC114D Moving Pieces on Line *2700\n\n为什么有人可以十分钟AC？？？？？ 太困难了！\n\n以后积累一个小套路：以后看到这种二元对立一样的题目描述就给我想异或相关的东西。\n\n**Key Observations**\n\n1.不会走回头路。\n\n2.每一次操作可以理解为异或一段区间并且代价为 $|X_s - X_t|$\n\n3.把异或操作放在差分数组上进行观察，就是起点和终点异或1。\n\n至此就可以设计一个 $O(n^2)$ 的DP了。\n","slug":"0004","published":1,"updated":"2025-06-28T13:44:17.465Z","comments":1,"layout":"post","photos":[],"_id":"cmcgb3qs30005ewrd2uziao1f","content":"<h3 id=\"1-ARC063E-Integers-on-a-Tree-2200\"><a href=\"#1-ARC063E-Integers-on-a-Tree-2200\" class=\"headerlink\" title=\"1.ARC063E Integers on a Tree *2200\"></a>1.ARC063E Integers on a Tree *2200</h3><p>自己做的时候觉得异常困难，但其实自己的思路比较正确，但还是有些地方想不清楚。两种方法：</p>\n<p>1.选出已知权值最小且还没遍历过的点，把相邻的还没有更新过的点更新为该点的权值加1。最后check即可，正确性显然，但是过于人类智慧了一点。</p>\n<p>2.考虑到二分图同一个部中的点奇偶性相同，考虑根据形态DP求出每个点的取值范围，然后从根节点往下边赋值边check即可。</p>\n<h3 id=\"2-ARC061F-Card-Game-for-Three-3200\"><a href=\"#2-ARC061F-Card-Game-for-Three-3200\" class=\"headerlink\" title=\"2.ARC061F Card Game for Three *3200\"></a>2.ARC061F Card Game for Three *3200</h3><p>感觉这题非常简单啊，大概放现在也就只有 *2200 的水平。首先一个 $O(n^2)$ 的做法比较显然，注意到数牌组配置数量等价于数操作序列，操作序列定义为每次出的牌组成的序列。</p>\n<p>然后设最后一次出牌是第 $k$ 次，推推式子就行了，然后你会得到一个 $O(n^2)$ 的式子，暴力算就是 $O(n^2)$ 的做法了。考虑优化：</p>\n<p>发现瓶颈在于处理式子中前 $k$ 张牌的枚举时产生的组合数求和，从化式子的角度进行考虑过于困难，试试递推，其实也还是要化个式子，只不过是换成递推形式而已。</p>\n<h3 id=\"3-ARC063F-3700\"><a href=\"#3-ARC063F-3700\" class=\"headerlink\" title=\"3.ARC063F *3700\"></a>3.ARC063F *3700</h3><p>银牌题。相当的困难，需要相当集中的注意力。</p>\n<p><strong>Two Key Observations</strong>：</p>\n<p>1.观察到操作等价于从原矩形中选一个周长最大的矩形满足矩形内部没有给出的 $(x,y)$</p>\n<p>2.观察到最后形成的矩形必过 $x=\\frac{H}{2}$ 或者 $y=\\frac{W}{2}$ 这两根线之一。</p>\n<p>至此，就是套路题，枚举右端点，单调栈维护上下界，线段树求答案。代码其实还好，上面两个观察确实比较逆天。</p>\n<h3 id=\"4-ARC064F-Rotated-Palindromes-3000\"><a href=\"#4-ARC064F-Rotated-Palindromes-3000\" class=\"headerlink\" title=\"4.ARC064F Rotated Palindromes *3000\"></a>4.ARC064F Rotated Palindromes *3000</h3><p>为什么这个题能评到这个分？考虑去重，什么时候会有重复呢？只有循环同构回文串才会算重，枚举循环节长度，容斥计算方案数，然后乘上贡献即可。若循环节长度为奇数，贡献就是循环节长度，偶数就是除以二。</p>\n<h3 id=\"5-ARC130D-Zigzag-Tree-2400\"><a href=\"#5-ARC130D-Zigzag-Tree-2400\" class=\"headerlink\" title=\"5.ARC130D Zigzag Tree *2400\"></a>5.ARC130D Zigzag Tree *2400</h3><p>这种东西是人 15 min 能想清楚的？数排列又多了一种套路，<em>**DP排名</em></p>\n<p>发现把树黑白染色后如果钦定了一种顺序，那么整个排列的偏序关系就确定了。设计DP状态 $dp_{i,j,0/1}$ 表示 $i$ 这个点在子树内排名为 $j$ 这个点是黑点还是白点。</p>\n<p>黑点就是周围的点都大于它，否则是小于它。方程是困难的，组合系数的推导要点功底。</p>\n<h3 id=\"6-AT-sunke21-j-Drink-Bar\"><a href=\"#6-AT-sunke21-j-Drink-Bar\" class=\"headerlink\" title=\"6.AT_sunke21_j Drink Bar\"></a>6.AT_sunke21_j Drink Bar</h3><p>厉害的。先去挖掘一下那些 $S$ 是有用的，发现只有 $|S| \\le 3$ 的集合是有用的。然后考虑按 $S$ 的大小分别计算。注意要容斥掉一些东西，这些东西就只能用CDQ分治进行计算。</p>\n<h3 id=\"7-ARC067E-Grouping-2200\"><a href=\"#7-ARC067E-Grouping-2200\" class=\"headerlink\" title=\"7.ARC067E Grouping *2200\"></a>7.ARC067E Grouping *2200</h3><p>确实是基础DP，不多讲了。</p>\n<h3 id=\"8-ARC067F-Yakiniku-Restaurants-2700\"><a href=\"#8-ARC067F-Yakiniku-Restaurants-2700\" class=\"headerlink\" title=\"8.ARC067F Yakiniku Restaurants *2700\"></a>8.ARC067F Yakiniku Restaurants *2700</h3><p>这种数轴上走来走去的题就是不会做！这种题真的就是找性质加转化成一个形式化一点的东西。</p>\n<p>比如该题注意到答案就是一段区间，并且可以直接从左走到右，于是：</p>\n<script type=\"math/tex; mode=display\">ans=\\max_{[l,r]\\subseteq [1,n]} (\\sum_{i=1}^{m} \\max_{j=l}^{r}B_{j,i} - \\sum_{i=l}^{r-1}a_i)</script><h3 id=\"9-ARC114D-Moving-Pieces-on-Line-2700\"><a href=\"#9-ARC114D-Moving-Pieces-on-Line-2700\" class=\"headerlink\" title=\"9.ARC114D Moving Pieces on Line *2700\"></a>9.ARC114D Moving Pieces on Line *2700</h3><p>为什么有人可以十分钟AC？？？？？ 太困难了！</p>\n<p>以后积累一个小套路：以后看到这种二元对立一样的题目描述就给我想异或相关的东西。</p>\n<p><strong>Key Observations</strong></p>\n<p>1.不会走回头路。</p>\n<p>2.每一次操作可以理解为异或一段区间并且代价为 $|X_s - X_t|$</p>\n<p>3.把异或操作放在差分数组上进行观察，就是起点和终点异或1。</p>\n<p>至此就可以设计一个 $O(n^2)$ 的DP了。</p>\n","excerpt":"","more":"<h3 id=\"1-ARC063E-Integers-on-a-Tree-2200\"><a href=\"#1-ARC063E-Integers-on-a-Tree-2200\" class=\"headerlink\" title=\"1.ARC063E Integers on a Tree *2200\"></a>1.ARC063E Integers on a Tree *2200</h3><p>自己做的时候觉得异常困难，但其实自己的思路比较正确，但还是有些地方想不清楚。两种方法：</p>\n<p>1.选出已知权值最小且还没遍历过的点，把相邻的还没有更新过的点更新为该点的权值加1。最后check即可，正确性显然，但是过于人类智慧了一点。</p>\n<p>2.考虑到二分图同一个部中的点奇偶性相同，考虑根据形态DP求出每个点的取值范围，然后从根节点往下边赋值边check即可。</p>\n<h3 id=\"2-ARC061F-Card-Game-for-Three-3200\"><a href=\"#2-ARC061F-Card-Game-for-Three-3200\" class=\"headerlink\" title=\"2.ARC061F Card Game for Three *3200\"></a>2.ARC061F Card Game for Three *3200</h3><p>感觉这题非常简单啊，大概放现在也就只有 *2200 的水平。首先一个 $O(n^2)$ 的做法比较显然，注意到数牌组配置数量等价于数操作序列，操作序列定义为每次出的牌组成的序列。</p>\n<p>然后设最后一次出牌是第 $k$ 次，推推式子就行了，然后你会得到一个 $O(n^2)$ 的式子，暴力算就是 $O(n^2)$ 的做法了。考虑优化：</p>\n<p>发现瓶颈在于处理式子中前 $k$ 张牌的枚举时产生的组合数求和，从化式子的角度进行考虑过于困难，试试递推，其实也还是要化个式子，只不过是换成递推形式而已。</p>\n<h3 id=\"3-ARC063F-3700\"><a href=\"#3-ARC063F-3700\" class=\"headerlink\" title=\"3.ARC063F *3700\"></a>3.ARC063F *3700</h3><p>银牌题。相当的困难，需要相当集中的注意力。</p>\n<p><strong>Two Key Observations</strong>：</p>\n<p>1.观察到操作等价于从原矩形中选一个周长最大的矩形满足矩形内部没有给出的 $(x,y)$</p>\n<p>2.观察到最后形成的矩形必过 $x=\\frac{H}{2}$ 或者 $y=\\frac{W}{2}$ 这两根线之一。</p>\n<p>至此，就是套路题，枚举右端点，单调栈维护上下界，线段树求答案。代码其实还好，上面两个观察确实比较逆天。</p>\n<h3 id=\"4-ARC064F-Rotated-Palindromes-3000\"><a href=\"#4-ARC064F-Rotated-Palindromes-3000\" class=\"headerlink\" title=\"4.ARC064F Rotated Palindromes *3000\"></a>4.ARC064F Rotated Palindromes *3000</h3><p>为什么这个题能评到这个分？考虑去重，什么时候会有重复呢？只有循环同构回文串才会算重，枚举循环节长度，容斥计算方案数，然后乘上贡献即可。若循环节长度为奇数，贡献就是循环节长度，偶数就是除以二。</p>\n<h3 id=\"5-ARC130D-Zigzag-Tree-2400\"><a href=\"#5-ARC130D-Zigzag-Tree-2400\" class=\"headerlink\" title=\"5.ARC130D Zigzag Tree *2400\"></a>5.ARC130D Zigzag Tree *2400</h3><p>这种东西是人 15 min 能想清楚的？数排列又多了一种套路，<em>**DP排名</em></p>\n<p>发现把树黑白染色后如果钦定了一种顺序，那么整个排列的偏序关系就确定了。设计DP状态 $dp_{i,j,0/1}$ 表示 $i$ 这个点在子树内排名为 $j$ 这个点是黑点还是白点。</p>\n<p>黑点就是周围的点都大于它，否则是小于它。方程是困难的，组合系数的推导要点功底。</p>\n<h3 id=\"6-AT-sunke21-j-Drink-Bar\"><a href=\"#6-AT-sunke21-j-Drink-Bar\" class=\"headerlink\" title=\"6.AT_sunke21_j Drink Bar\"></a>6.AT_sunke21_j Drink Bar</h3><p>厉害的。先去挖掘一下那些 $S$ 是有用的，发现只有 $|S| \\le 3$ 的集合是有用的。然后考虑按 $S$ 的大小分别计算。注意要容斥掉一些东西，这些东西就只能用CDQ分治进行计算。</p>\n<h3 id=\"7-ARC067E-Grouping-2200\"><a href=\"#7-ARC067E-Grouping-2200\" class=\"headerlink\" title=\"7.ARC067E Grouping *2200\"></a>7.ARC067E Grouping *2200</h3><p>确实是基础DP，不多讲了。</p>\n<h3 id=\"8-ARC067F-Yakiniku-Restaurants-2700\"><a href=\"#8-ARC067F-Yakiniku-Restaurants-2700\" class=\"headerlink\" title=\"8.ARC067F Yakiniku Restaurants *2700\"></a>8.ARC067F Yakiniku Restaurants *2700</h3><p>这种数轴上走来走去的题就是不会做！这种题真的就是找性质加转化成一个形式化一点的东西。</p>\n<p>比如该题注意到答案就是一段区间，并且可以直接从左走到右，于是：</p>\n<script type=\"math/tex; mode=display\">ans=\\max_{[l,r]\\subseteq [1,n]} (\\sum_{i=1}^{m} \\max_{j=l}^{r}B_{j,i} - \\sum_{i=l}^{r-1}a_i)</script><h3 id=\"9-ARC114D-Moving-Pieces-on-Line-2700\"><a href=\"#9-ARC114D-Moving-Pieces-on-Line-2700\" class=\"headerlink\" title=\"9.ARC114D Moving Pieces on Line *2700\"></a>9.ARC114D Moving Pieces on Line *2700</h3><p>为什么有人可以十分钟AC？？？？？ 太困难了！</p>\n<p>以后积累一个小套路：以后看到这种二元对立一样的题目描述就给我想异或相关的东西。</p>\n<p><strong>Key Observations</strong></p>\n<p>1.不会走回头路。</p>\n<p>2.每一次操作可以理解为异或一段区间并且代价为 $|X_s - X_t|$</p>\n<p>3.把异或操作放在差分数组上进行观察，就是起点和终点异或1。</p>\n<p>至此就可以设计一个 $O(n^2)$ 的DP了。</p>\n"},{"title":"11月做题记录","date":"2024-11-02T16:00:00.000Z","toc":false,"mathjax":true,"_content":"\n感觉按OJ分类不是很好，直接按时间排算了。\n\n### 1.ARC110D Binomial Coefficient is Fun *2100\n\n感觉很困难，组合意义果然是我的弱项。\n\n把每个 $\\binom{B_i}{A_i}$ 看作是 $\\binom{A_i+D_i}{D_i}$。考虑一下组合意义：有 $A_i$ 个黑球，现在要在黑球之间放白球，首尾旁边也可以放的方案数。\n\n那么现在考虑这么一个序列： $A_1$ 个黑球，挡板，$A_2$ 个黑球，挡板，…… $A_n$ 个黑球，挡板。现在可以在这之间放最多 $m-\\sum a$ 个白球，求方案数。\n\n枚举一下白球个数，上指标求和即可。\n\n### 2.ARC068C Snuke Line *2300\n\n正难则反，二维数点。\n\n### 3.ARC074E RGB Sequence *2500\n\n不要认为任何一个多限制问题只有容斥原理一种大体思路。考虑DP，$f_{i,j,k}$ 表示填到第i个，最后一个和 $i$ 颜色不同的位置是 $j$，最后一个和 $i,j$ 颜色都不同是 $k$。\n\n限制挂在右端点上，进行转移即可。本题还可以进一步优化到 $O(n^2)$，这是困难的，考虑每一次都是对矩阵进行加一行和删边界，双端队列维护有效值位置即可。\n\n### 4.ARC068F Solitaire *3000\n\n最后双端队列组成的离散图像是单谷的，把删除序列分成两个部分，$[1,k],[k+1,n]$，答案就是前半部分的方案数乘上 $2^{n-k-1}$。分析前半部分的组成，两个单调递降序列的合成，DP计算方案数即可。\n\nDP方程有双射，可以进一步优化成 $O(n)$。\n\n### 5.ARC069F Flags *3200\n\n当时应该是优化建图的trick尚未流传，所以这道题被评为了铜牌题。\n\n首先显然是二分答案，考虑check。限制很像是2-sat，考虑图论建模。具体的，设二分的值为 $mid$，如果 $x_i+mid<x_j$ 那么就意味着选了 $x_i$ 就必须选 $y_j$。\n\n这样去建模，然后tarjan跑强联通分量看看 $i$ 和 $i+n$ 是不是在一起，在一起就说明不对。\n\n### 6.Luogu P9039 [PA2021] Drzewo czerwono-czarne\n\n厉害的结论题。先考虑操作的本质，就是把树上一段路径赋成路径上任意一点的颜色。于是链就只需要看看颜色段数就行了。\n\n看看如果树上有点的度数大于等于3会如何，手摸一下发现儿子颜色可以任意交换，于是不合法的情况只有可能是目标每一层的点的颜色一样且与原色不同。\n\n### 7.Luogu P4664 [BalticOI 2008] 选举\n\n容易想到DP，但是先考虑一些性质， $\\frac{\\sum a}{2} \\ge S - a_i$，于是考虑状态 $dp_{i,j}$ 表示选了前 $i$ 个政党，内阁有 $j$ 人时最后一支政党是哪个，要是凑不出来的话就是0。\n\n但是注意到一个限制是希望人数尽量多，要是按照原顺序进行DP就会出问题，需要从大到小进行排序。\n\n### 8.UVA1437 String painter\n\nCQOI2007 涂色 的严格加强版，其实本质一样。难点在于区间DP的转移。枚举断点的转移是容易的，但是不够。观察到 $s_l=s_r$ 的时候 $dp_{l,r}=dp_{l,r-1}$。\n\n最后处理不用更改的点一下就行。\n\n### 9.CF97B Superset *2300\n\n平面点对的题可以考虑分治了，这是个新套路，要记住了。\n\n### 10.P10971 Cookies\n\n递增序列不好维护就换递降，因为这可以使用类似拆分数DP的方式进行维护，即每次新增一段1，然后给每个数增加一。\n","source":"_posts/0005.md","raw":"---\ntitle: 11月做题记录\ndate: 2024-11-03\ntoc: false\ncategory: [做题记录]\nmathjax: true\n---\n\n感觉按OJ分类不是很好，直接按时间排算了。\n\n### 1.ARC110D Binomial Coefficient is Fun *2100\n\n感觉很困难，组合意义果然是我的弱项。\n\n把每个 $\\binom{B_i}{A_i}$ 看作是 $\\binom{A_i+D_i}{D_i}$。考虑一下组合意义：有 $A_i$ 个黑球，现在要在黑球之间放白球，首尾旁边也可以放的方案数。\n\n那么现在考虑这么一个序列： $A_1$ 个黑球，挡板，$A_2$ 个黑球，挡板，…… $A_n$ 个黑球，挡板。现在可以在这之间放最多 $m-\\sum a$ 个白球，求方案数。\n\n枚举一下白球个数，上指标求和即可。\n\n### 2.ARC068C Snuke Line *2300\n\n正难则反，二维数点。\n\n### 3.ARC074E RGB Sequence *2500\n\n不要认为任何一个多限制问题只有容斥原理一种大体思路。考虑DP，$f_{i,j,k}$ 表示填到第i个，最后一个和 $i$ 颜色不同的位置是 $j$，最后一个和 $i,j$ 颜色都不同是 $k$。\n\n限制挂在右端点上，进行转移即可。本题还可以进一步优化到 $O(n^2)$，这是困难的，考虑每一次都是对矩阵进行加一行和删边界，双端队列维护有效值位置即可。\n\n### 4.ARC068F Solitaire *3000\n\n最后双端队列组成的离散图像是单谷的，把删除序列分成两个部分，$[1,k],[k+1,n]$，答案就是前半部分的方案数乘上 $2^{n-k-1}$。分析前半部分的组成，两个单调递降序列的合成，DP计算方案数即可。\n\nDP方程有双射，可以进一步优化成 $O(n)$。\n\n### 5.ARC069F Flags *3200\n\n当时应该是优化建图的trick尚未流传，所以这道题被评为了铜牌题。\n\n首先显然是二分答案，考虑check。限制很像是2-sat，考虑图论建模。具体的，设二分的值为 $mid$，如果 $x_i+mid<x_j$ 那么就意味着选了 $x_i$ 就必须选 $y_j$。\n\n这样去建模，然后tarjan跑强联通分量看看 $i$ 和 $i+n$ 是不是在一起，在一起就说明不对。\n\n### 6.Luogu P9039 [PA2021] Drzewo czerwono-czarne\n\n厉害的结论题。先考虑操作的本质，就是把树上一段路径赋成路径上任意一点的颜色。于是链就只需要看看颜色段数就行了。\n\n看看如果树上有点的度数大于等于3会如何，手摸一下发现儿子颜色可以任意交换，于是不合法的情况只有可能是目标每一层的点的颜色一样且与原色不同。\n\n### 7.Luogu P4664 [BalticOI 2008] 选举\n\n容易想到DP，但是先考虑一些性质， $\\frac{\\sum a}{2} \\ge S - a_i$，于是考虑状态 $dp_{i,j}$ 表示选了前 $i$ 个政党，内阁有 $j$ 人时最后一支政党是哪个，要是凑不出来的话就是0。\n\n但是注意到一个限制是希望人数尽量多，要是按照原顺序进行DP就会出问题，需要从大到小进行排序。\n\n### 8.UVA1437 String painter\n\nCQOI2007 涂色 的严格加强版，其实本质一样。难点在于区间DP的转移。枚举断点的转移是容易的，但是不够。观察到 $s_l=s_r$ 的时候 $dp_{l,r}=dp_{l,r-1}$。\n\n最后处理不用更改的点一下就行。\n\n### 9.CF97B Superset *2300\n\n平面点对的题可以考虑分治了，这是个新套路，要记住了。\n\n### 10.P10971 Cookies\n\n递增序列不好维护就换递降，因为这可以使用类似拆分数DP的方式进行维护，即每次新增一段1，然后给每个数增加一。\n","slug":"0005","published":1,"updated":"2025-06-28T13:44:17.465Z","comments":1,"layout":"post","photos":[],"_id":"cmcgb3qs30007ewrdgypdc626","content":"<p>感觉按OJ分类不是很好，直接按时间排算了。</p>\n<h3 id=\"1-ARC110D-Binomial-Coefficient-is-Fun-2100\"><a href=\"#1-ARC110D-Binomial-Coefficient-is-Fun-2100\" class=\"headerlink\" title=\"1.ARC110D Binomial Coefficient is Fun *2100\"></a>1.ARC110D Binomial Coefficient is Fun *2100</h3><p>感觉很困难，组合意义果然是我的弱项。</p>\n<p>把每个 $\\binom{B_i}{A_i}$ 看作是 $\\binom{A_i+D_i}{D_i}$。考虑一下组合意义：有 $A_i$ 个黑球，现在要在黑球之间放白球，首尾旁边也可以放的方案数。</p>\n<p>那么现在考虑这么一个序列： $A_1$ 个黑球，挡板，$A_2$ 个黑球，挡板，…… $A_n$ 个黑球，挡板。现在可以在这之间放最多 $m-\\sum a$ 个白球，求方案数。</p>\n<p>枚举一下白球个数，上指标求和即可。</p>\n<h3 id=\"2-ARC068C-Snuke-Line-2300\"><a href=\"#2-ARC068C-Snuke-Line-2300\" class=\"headerlink\" title=\"2.ARC068C Snuke Line *2300\"></a>2.ARC068C Snuke Line *2300</h3><p>正难则反，二维数点。</p>\n<h3 id=\"3-ARC074E-RGB-Sequence-2500\"><a href=\"#3-ARC074E-RGB-Sequence-2500\" class=\"headerlink\" title=\"3.ARC074E RGB Sequence *2500\"></a>3.ARC074E RGB Sequence *2500</h3><p>不要认为任何一个多限制问题只有容斥原理一种大体思路。考虑DP，$f_{i,j,k}$ 表示填到第i个，最后一个和 $i$ 颜色不同的位置是 $j$，最后一个和 $i,j$ 颜色都不同是 $k$。</p>\n<p>限制挂在右端点上，进行转移即可。本题还可以进一步优化到 $O(n^2)$，这是困难的，考虑每一次都是对矩阵进行加一行和删边界，双端队列维护有效值位置即可。</p>\n<h3 id=\"4-ARC068F-Solitaire-3000\"><a href=\"#4-ARC068F-Solitaire-3000\" class=\"headerlink\" title=\"4.ARC068F Solitaire *3000\"></a>4.ARC068F Solitaire *3000</h3><p>最后双端队列组成的离散图像是单谷的，把删除序列分成两个部分，$[1,k],[k+1,n]$，答案就是前半部分的方案数乘上 $2^{n-k-1}$。分析前半部分的组成，两个单调递降序列的合成，DP计算方案数即可。</p>\n<p>DP方程有双射，可以进一步优化成 $O(n)$。</p>\n<h3 id=\"5-ARC069F-Flags-3200\"><a href=\"#5-ARC069F-Flags-3200\" class=\"headerlink\" title=\"5.ARC069F Flags *3200\"></a>5.ARC069F Flags *3200</h3><p>当时应该是优化建图的trick尚未流传，所以这道题被评为了铜牌题。</p>\n<p>首先显然是二分答案，考虑check。限制很像是2-sat，考虑图论建模。具体的，设二分的值为 $mid$，如果 $x_i+mid&lt;x_j$ 那么就意味着选了 $x_i$ 就必须选 $y_j$。</p>\n<p>这样去建模，然后tarjan跑强联通分量看看 $i$ 和 $i+n$ 是不是在一起，在一起就说明不对。</p>\n<h3 id=\"6-Luogu-P9039-PA2021-Drzewo-czerwono-czarne\"><a href=\"#6-Luogu-P9039-PA2021-Drzewo-czerwono-czarne\" class=\"headerlink\" title=\"6.Luogu P9039 [PA2021] Drzewo czerwono-czarne\"></a>6.Luogu P9039 [PA2021] Drzewo czerwono-czarne</h3><p>厉害的结论题。先考虑操作的本质，就是把树上一段路径赋成路径上任意一点的颜色。于是链就只需要看看颜色段数就行了。</p>\n<p>看看如果树上有点的度数大于等于3会如何，手摸一下发现儿子颜色可以任意交换，于是不合法的情况只有可能是目标每一层的点的颜色一样且与原色不同。</p>\n<h3 id=\"7-Luogu-P4664-BalticOI-2008-选举\"><a href=\"#7-Luogu-P4664-BalticOI-2008-选举\" class=\"headerlink\" title=\"7.Luogu P4664 [BalticOI 2008] 选举\"></a>7.Luogu P4664 [BalticOI 2008] 选举</h3><p>容易想到DP，但是先考虑一些性质， $\\frac{\\sum a}{2} \\ge S - a_i$，于是考虑状态 $dp_{i,j}$ 表示选了前 $i$ 个政党，内阁有 $j$ 人时最后一支政党是哪个，要是凑不出来的话就是0。</p>\n<p>但是注意到一个限制是希望人数尽量多，要是按照原顺序进行DP就会出问题，需要从大到小进行排序。</p>\n<h3 id=\"8-UVA1437-String-painter\"><a href=\"#8-UVA1437-String-painter\" class=\"headerlink\" title=\"8.UVA1437 String painter\"></a>8.UVA1437 String painter</h3><p>CQOI2007 涂色 的严格加强版，其实本质一样。难点在于区间DP的转移。枚举断点的转移是容易的，但是不够。观察到 $s_l=s_r$ 的时候 $dp_{l,r}=dp_{l,r-1}$。</p>\n<p>最后处理不用更改的点一下就行。</p>\n<h3 id=\"9-CF97B-Superset-2300\"><a href=\"#9-CF97B-Superset-2300\" class=\"headerlink\" title=\"9.CF97B Superset *2300\"></a>9.CF97B Superset *2300</h3><p>平面点对的题可以考虑分治了，这是个新套路，要记住了。</p>\n<h3 id=\"10-P10971-Cookies\"><a href=\"#10-P10971-Cookies\" class=\"headerlink\" title=\"10.P10971 Cookies\"></a>10.P10971 Cookies</h3><p>递增序列不好维护就换递降，因为这可以使用类似拆分数DP的方式进行维护，即每次新增一段1，然后给每个数增加一。</p>\n","excerpt":"","more":"<p>感觉按OJ分类不是很好，直接按时间排算了。</p>\n<h3 id=\"1-ARC110D-Binomial-Coefficient-is-Fun-2100\"><a href=\"#1-ARC110D-Binomial-Coefficient-is-Fun-2100\" class=\"headerlink\" title=\"1.ARC110D Binomial Coefficient is Fun *2100\"></a>1.ARC110D Binomial Coefficient is Fun *2100</h3><p>感觉很困难，组合意义果然是我的弱项。</p>\n<p>把每个 $\\binom{B_i}{A_i}$ 看作是 $\\binom{A_i+D_i}{D_i}$。考虑一下组合意义：有 $A_i$ 个黑球，现在要在黑球之间放白球，首尾旁边也可以放的方案数。</p>\n<p>那么现在考虑这么一个序列： $A_1$ 个黑球，挡板，$A_2$ 个黑球，挡板，…… $A_n$ 个黑球，挡板。现在可以在这之间放最多 $m-\\sum a$ 个白球，求方案数。</p>\n<p>枚举一下白球个数，上指标求和即可。</p>\n<h3 id=\"2-ARC068C-Snuke-Line-2300\"><a href=\"#2-ARC068C-Snuke-Line-2300\" class=\"headerlink\" title=\"2.ARC068C Snuke Line *2300\"></a>2.ARC068C Snuke Line *2300</h3><p>正难则反，二维数点。</p>\n<h3 id=\"3-ARC074E-RGB-Sequence-2500\"><a href=\"#3-ARC074E-RGB-Sequence-2500\" class=\"headerlink\" title=\"3.ARC074E RGB Sequence *2500\"></a>3.ARC074E RGB Sequence *2500</h3><p>不要认为任何一个多限制问题只有容斥原理一种大体思路。考虑DP，$f_{i,j,k}$ 表示填到第i个，最后一个和 $i$ 颜色不同的位置是 $j$，最后一个和 $i,j$ 颜色都不同是 $k$。</p>\n<p>限制挂在右端点上，进行转移即可。本题还可以进一步优化到 $O(n^2)$，这是困难的，考虑每一次都是对矩阵进行加一行和删边界，双端队列维护有效值位置即可。</p>\n<h3 id=\"4-ARC068F-Solitaire-3000\"><a href=\"#4-ARC068F-Solitaire-3000\" class=\"headerlink\" title=\"4.ARC068F Solitaire *3000\"></a>4.ARC068F Solitaire *3000</h3><p>最后双端队列组成的离散图像是单谷的，把删除序列分成两个部分，$[1,k],[k+1,n]$，答案就是前半部分的方案数乘上 $2^{n-k-1}$。分析前半部分的组成，两个单调递降序列的合成，DP计算方案数即可。</p>\n<p>DP方程有双射，可以进一步优化成 $O(n)$。</p>\n<h3 id=\"5-ARC069F-Flags-3200\"><a href=\"#5-ARC069F-Flags-3200\" class=\"headerlink\" title=\"5.ARC069F Flags *3200\"></a>5.ARC069F Flags *3200</h3><p>当时应该是优化建图的trick尚未流传，所以这道题被评为了铜牌题。</p>\n<p>首先显然是二分答案，考虑check。限制很像是2-sat，考虑图论建模。具体的，设二分的值为 $mid$，如果 $x_i+mid&lt;x_j$ 那么就意味着选了 $x_i$ 就必须选 $y_j$。</p>\n<p>这样去建模，然后tarjan跑强联通分量看看 $i$ 和 $i+n$ 是不是在一起，在一起就说明不对。</p>\n<h3 id=\"6-Luogu-P9039-PA2021-Drzewo-czerwono-czarne\"><a href=\"#6-Luogu-P9039-PA2021-Drzewo-czerwono-czarne\" class=\"headerlink\" title=\"6.Luogu P9039 [PA2021] Drzewo czerwono-czarne\"></a>6.Luogu P9039 [PA2021] Drzewo czerwono-czarne</h3><p>厉害的结论题。先考虑操作的本质，就是把树上一段路径赋成路径上任意一点的颜色。于是链就只需要看看颜色段数就行了。</p>\n<p>看看如果树上有点的度数大于等于3会如何，手摸一下发现儿子颜色可以任意交换，于是不合法的情况只有可能是目标每一层的点的颜色一样且与原色不同。</p>\n<h3 id=\"7-Luogu-P4664-BalticOI-2008-选举\"><a href=\"#7-Luogu-P4664-BalticOI-2008-选举\" class=\"headerlink\" title=\"7.Luogu P4664 [BalticOI 2008] 选举\"></a>7.Luogu P4664 [BalticOI 2008] 选举</h3><p>容易想到DP，但是先考虑一些性质， $\\frac{\\sum a}{2} \\ge S - a_i$，于是考虑状态 $dp_{i,j}$ 表示选了前 $i$ 个政党，内阁有 $j$ 人时最后一支政党是哪个，要是凑不出来的话就是0。</p>\n<p>但是注意到一个限制是希望人数尽量多，要是按照原顺序进行DP就会出问题，需要从大到小进行排序。</p>\n<h3 id=\"8-UVA1437-String-painter\"><a href=\"#8-UVA1437-String-painter\" class=\"headerlink\" title=\"8.UVA1437 String painter\"></a>8.UVA1437 String painter</h3><p>CQOI2007 涂色 的严格加强版，其实本质一样。难点在于区间DP的转移。枚举断点的转移是容易的，但是不够。观察到 $s_l=s_r$ 的时候 $dp_{l,r}=dp_{l,r-1}$。</p>\n<p>最后处理不用更改的点一下就行。</p>\n<h3 id=\"9-CF97B-Superset-2300\"><a href=\"#9-CF97B-Superset-2300\" class=\"headerlink\" title=\"9.CF97B Superset *2300\"></a>9.CF97B Superset *2300</h3><p>平面点对的题可以考虑分治了，这是个新套路，要记住了。</p>\n<h3 id=\"10-P10971-Cookies\"><a href=\"#10-P10971-Cookies\" class=\"headerlink\" title=\"10.P10971 Cookies\"></a>10.P10971 Cookies</h3><p>递增序列不好维护就换递降，因为这可以使用类似拆分数DP的方式进行维护，即每次新增一段1，然后给每个数增加一。</p>\n"},{"title":"Ucup 做题记录","date":"2024-11-24T16:00:00.000Z","toc":false,"mathjax":true,"_content":"\n### 1.The 3rd Universal Cup. Stage 14: Harbin A. Build a Computer\n\n厉害，首先容易想到我们一定会去构造这样的一条链，前一个向后一个点连两条边，一条是1，一条是0，这样的话就可以使用 $\\log$ 的代价给出连续段时的解。\n\n于是乎我们想到将 $[l,r]$ 拆分成很多个不交子区间的并，对于每个子区间来做上述操作。同时注意到标号和线段树标号的相似之处，可以考虑使用递归构造的方式节省时间。\n\n### 2.The 3rd Universal Cup. Stage 16: Nanjing B. Birthday Gift\n\n一种trick,当我们去做这种消去相邻两个东西的题时可以考虑把偶数位的东西取反看看。\n\n比如这个题，如果偶数位的东西是0或1就取反，发现题目就转化成了我们消去相邻两个不同的字符。\n\n注意到如果没有2的存在，那么答案就是0和1的数量差，那么2就可以使01数量差尽可能小，判一下就行了。\n\n### 3.The 3rd Universal Cup. Stage 17: Jinan F. The Hermit\n\n先考虑给你一个集合怎么求答案，即 $n=m$ 的情况，你所要做的就是去判断最小的数是不是GCD，如果是就删掉，如此反复。\n\n这种题的套路已经深入骨髓了，拆贡献或者是容斥。不妨考虑去算每个数会被多少个集合包含，这是困难的。于是考虑反着来，去数他被那些集合删除。\n\n这就是个简单的组合计数了。\n\n### 4.The 3rd Universal Cup. Stage 17: Jinan I. The Hanged Man\n\n厉害的构造题，因为有比较无脑的DP解法所以体现不出贪心的思维量。\n\n结论：如果有偶度数点那么一定有解，否则无解。证明，用DP可以证。\n\n### 5.The 3rd Universal Cup. Stage 16: Nanjing J. Social Media\n\n计算 $\\max_{i,j} C_i+C_j+f(i,j)$。看这个裸的问题不好做，回题再看看性质。\n\n如果没有 $f(i,j)$ 的话就直接把最大的两个加起来即可。但是注意到题目上有值的 $f(i,j)$ 只有 $n$ 个，故枚举这些点对更新答案即可。\n\n### 6.The 3rd Universal Cup. Stage 16: Nanjing K. Strips\n\n对于每相邻两个黑点计算答案。如果没有边界限制的话就直接贪心即可，有限制就先贪心后调整即可。\n\n### 7.The 3rd Universal Cup. Stage 15: Chengdu A. Arrow a Row\n\n签到题居然拼尽全力无法战胜？是我傻了，这要是放CF B我就做出来了。\n\n开头得是一个 >,结尾至少三个 >。至少得有一个 -。然后先把结尾连续段造出来，利用结尾把中间的 > 补起来即可。\n\n### 8.The 3rd Universal Cup. Stage 15: Chengdu G. Expanding Array\n\n很逆天，猜了个结论直接就过了，提供一种和题解不一样的证明思路。\n\n将两个数看做是二进制下集合，于是发现运算就和集合取交取并取反以及挖掉一部分等价，故相邻两个数最多产生8的贡献。\n\n那个map存一下就结束了。\n","source":"_posts/0006.md","raw":"---\ntitle: Ucup 做题记录\ndate: 2024-11-25\ntoc: false\ncategory: [做题记录]\nmathjax: true\n---\n\n### 1.The 3rd Universal Cup. Stage 14: Harbin A. Build a Computer\n\n厉害，首先容易想到我们一定会去构造这样的一条链，前一个向后一个点连两条边，一条是1，一条是0，这样的话就可以使用 $\\log$ 的代价给出连续段时的解。\n\n于是乎我们想到将 $[l,r]$ 拆分成很多个不交子区间的并，对于每个子区间来做上述操作。同时注意到标号和线段树标号的相似之处，可以考虑使用递归构造的方式节省时间。\n\n### 2.The 3rd Universal Cup. Stage 16: Nanjing B. Birthday Gift\n\n一种trick,当我们去做这种消去相邻两个东西的题时可以考虑把偶数位的东西取反看看。\n\n比如这个题，如果偶数位的东西是0或1就取反，发现题目就转化成了我们消去相邻两个不同的字符。\n\n注意到如果没有2的存在，那么答案就是0和1的数量差，那么2就可以使01数量差尽可能小，判一下就行了。\n\n### 3.The 3rd Universal Cup. Stage 17: Jinan F. The Hermit\n\n先考虑给你一个集合怎么求答案，即 $n=m$ 的情况，你所要做的就是去判断最小的数是不是GCD，如果是就删掉，如此反复。\n\n这种题的套路已经深入骨髓了，拆贡献或者是容斥。不妨考虑去算每个数会被多少个集合包含，这是困难的。于是考虑反着来，去数他被那些集合删除。\n\n这就是个简单的组合计数了。\n\n### 4.The 3rd Universal Cup. Stage 17: Jinan I. The Hanged Man\n\n厉害的构造题，因为有比较无脑的DP解法所以体现不出贪心的思维量。\n\n结论：如果有偶度数点那么一定有解，否则无解。证明，用DP可以证。\n\n### 5.The 3rd Universal Cup. Stage 16: Nanjing J. Social Media\n\n计算 $\\max_{i,j} C_i+C_j+f(i,j)$。看这个裸的问题不好做，回题再看看性质。\n\n如果没有 $f(i,j)$ 的话就直接把最大的两个加起来即可。但是注意到题目上有值的 $f(i,j)$ 只有 $n$ 个，故枚举这些点对更新答案即可。\n\n### 6.The 3rd Universal Cup. Stage 16: Nanjing K. Strips\n\n对于每相邻两个黑点计算答案。如果没有边界限制的话就直接贪心即可，有限制就先贪心后调整即可。\n\n### 7.The 3rd Universal Cup. Stage 15: Chengdu A. Arrow a Row\n\n签到题居然拼尽全力无法战胜？是我傻了，这要是放CF B我就做出来了。\n\n开头得是一个 >,结尾至少三个 >。至少得有一个 -。然后先把结尾连续段造出来，利用结尾把中间的 > 补起来即可。\n\n### 8.The 3rd Universal Cup. Stage 15: Chengdu G. Expanding Array\n\n很逆天，猜了个结论直接就过了，提供一种和题解不一样的证明思路。\n\n将两个数看做是二进制下集合，于是发现运算就和集合取交取并取反以及挖掉一部分等价，故相邻两个数最多产生8的贡献。\n\n那个map存一下就结束了。\n","slug":"0006","published":1,"updated":"2025-06-28T13:44:17.465Z","comments":1,"layout":"post","photos":[],"_id":"cmcgb3qs30008ewrddfhr8vfq","content":"<h3 id=\"1-The-3rd-Universal-Cup-Stage-14-Harbin-A-Build-a-Computer\"><a href=\"#1-The-3rd-Universal-Cup-Stage-14-Harbin-A-Build-a-Computer\" class=\"headerlink\" title=\"1.The 3rd Universal Cup. Stage 14: Harbin A. Build a Computer\"></a>1.The 3rd Universal Cup. Stage 14: Harbin A. Build a Computer</h3><p>厉害，首先容易想到我们一定会去构造这样的一条链，前一个向后一个点连两条边，一条是1，一条是0，这样的话就可以使用 $\\log$ 的代价给出连续段时的解。</p>\n<p>于是乎我们想到将 $[l,r]$ 拆分成很多个不交子区间的并，对于每个子区间来做上述操作。同时注意到标号和线段树标号的相似之处，可以考虑使用递归构造的方式节省时间。</p>\n<h3 id=\"2-The-3rd-Universal-Cup-Stage-16-Nanjing-B-Birthday-Gift\"><a href=\"#2-The-3rd-Universal-Cup-Stage-16-Nanjing-B-Birthday-Gift\" class=\"headerlink\" title=\"2.The 3rd Universal Cup. Stage 16: Nanjing B. Birthday Gift\"></a>2.The 3rd Universal Cup. Stage 16: Nanjing B. Birthday Gift</h3><p>一种trick,当我们去做这种消去相邻两个东西的题时可以考虑把偶数位的东西取反看看。</p>\n<p>比如这个题，如果偶数位的东西是0或1就取反，发现题目就转化成了我们消去相邻两个不同的字符。</p>\n<p>注意到如果没有2的存在，那么答案就是0和1的数量差，那么2就可以使01数量差尽可能小，判一下就行了。</p>\n<h3 id=\"3-The-3rd-Universal-Cup-Stage-17-Jinan-F-The-Hermit\"><a href=\"#3-The-3rd-Universal-Cup-Stage-17-Jinan-F-The-Hermit\" class=\"headerlink\" title=\"3.The 3rd Universal Cup. Stage 17: Jinan F. The Hermit\"></a>3.The 3rd Universal Cup. Stage 17: Jinan F. The Hermit</h3><p>先考虑给你一个集合怎么求答案，即 $n=m$ 的情况，你所要做的就是去判断最小的数是不是GCD，如果是就删掉，如此反复。</p>\n<p>这种题的套路已经深入骨髓了，拆贡献或者是容斥。不妨考虑去算每个数会被多少个集合包含，这是困难的。于是考虑反着来，去数他被那些集合删除。</p>\n<p>这就是个简单的组合计数了。</p>\n<h3 id=\"4-The-3rd-Universal-Cup-Stage-17-Jinan-I-The-Hanged-Man\"><a href=\"#4-The-3rd-Universal-Cup-Stage-17-Jinan-I-The-Hanged-Man\" class=\"headerlink\" title=\"4.The 3rd Universal Cup. Stage 17: Jinan I. The Hanged Man\"></a>4.The 3rd Universal Cup. Stage 17: Jinan I. The Hanged Man</h3><p>厉害的构造题，因为有比较无脑的DP解法所以体现不出贪心的思维量。</p>\n<p>结论：如果有偶度数点那么一定有解，否则无解。证明，用DP可以证。</p>\n<h3 id=\"5-The-3rd-Universal-Cup-Stage-16-Nanjing-J-Social-Media\"><a href=\"#5-The-3rd-Universal-Cup-Stage-16-Nanjing-J-Social-Media\" class=\"headerlink\" title=\"5.The 3rd Universal Cup. Stage 16: Nanjing J. Social Media\"></a>5.The 3rd Universal Cup. Stage 16: Nanjing J. Social Media</h3><p>计算 $\\max_{i,j} C_i+C_j+f(i,j)$。看这个裸的问题不好做，回题再看看性质。</p>\n<p>如果没有 $f(i,j)$ 的话就直接把最大的两个加起来即可。但是注意到题目上有值的 $f(i,j)$ 只有 $n$ 个，故枚举这些点对更新答案即可。</p>\n<h3 id=\"6-The-3rd-Universal-Cup-Stage-16-Nanjing-K-Strips\"><a href=\"#6-The-3rd-Universal-Cup-Stage-16-Nanjing-K-Strips\" class=\"headerlink\" title=\"6.The 3rd Universal Cup. Stage 16: Nanjing K. Strips\"></a>6.The 3rd Universal Cup. Stage 16: Nanjing K. Strips</h3><p>对于每相邻两个黑点计算答案。如果没有边界限制的话就直接贪心即可，有限制就先贪心后调整即可。</p>\n<h3 id=\"7-The-3rd-Universal-Cup-Stage-15-Chengdu-A-Arrow-a-Row\"><a href=\"#7-The-3rd-Universal-Cup-Stage-15-Chengdu-A-Arrow-a-Row\" class=\"headerlink\" title=\"7.The 3rd Universal Cup. Stage 15: Chengdu A. Arrow a Row\"></a>7.The 3rd Universal Cup. Stage 15: Chengdu A. Arrow a Row</h3><p>签到题居然拼尽全力无法战胜？是我傻了，这要是放CF B我就做出来了。</p>\n<p>开头得是一个 &gt;,结尾至少三个 &gt;。至少得有一个 -。然后先把结尾连续段造出来，利用结尾把中间的 &gt; 补起来即可。</p>\n<h3 id=\"8-The-3rd-Universal-Cup-Stage-15-Chengdu-G-Expanding-Array\"><a href=\"#8-The-3rd-Universal-Cup-Stage-15-Chengdu-G-Expanding-Array\" class=\"headerlink\" title=\"8.The 3rd Universal Cup. Stage 15: Chengdu G. Expanding Array\"></a>8.The 3rd Universal Cup. Stage 15: Chengdu G. Expanding Array</h3><p>很逆天，猜了个结论直接就过了，提供一种和题解不一样的证明思路。</p>\n<p>将两个数看做是二进制下集合，于是发现运算就和集合取交取并取反以及挖掉一部分等价，故相邻两个数最多产生8的贡献。</p>\n<p>那个map存一下就结束了。</p>\n","excerpt":"","more":"<h3 id=\"1-The-3rd-Universal-Cup-Stage-14-Harbin-A-Build-a-Computer\"><a href=\"#1-The-3rd-Universal-Cup-Stage-14-Harbin-A-Build-a-Computer\" class=\"headerlink\" title=\"1.The 3rd Universal Cup. Stage 14: Harbin A. Build a Computer\"></a>1.The 3rd Universal Cup. Stage 14: Harbin A. Build a Computer</h3><p>厉害，首先容易想到我们一定会去构造这样的一条链，前一个向后一个点连两条边，一条是1，一条是0，这样的话就可以使用 $\\log$ 的代价给出连续段时的解。</p>\n<p>于是乎我们想到将 $[l,r]$ 拆分成很多个不交子区间的并，对于每个子区间来做上述操作。同时注意到标号和线段树标号的相似之处，可以考虑使用递归构造的方式节省时间。</p>\n<h3 id=\"2-The-3rd-Universal-Cup-Stage-16-Nanjing-B-Birthday-Gift\"><a href=\"#2-The-3rd-Universal-Cup-Stage-16-Nanjing-B-Birthday-Gift\" class=\"headerlink\" title=\"2.The 3rd Universal Cup. Stage 16: Nanjing B. Birthday Gift\"></a>2.The 3rd Universal Cup. Stage 16: Nanjing B. Birthday Gift</h3><p>一种trick,当我们去做这种消去相邻两个东西的题时可以考虑把偶数位的东西取反看看。</p>\n<p>比如这个题，如果偶数位的东西是0或1就取反，发现题目就转化成了我们消去相邻两个不同的字符。</p>\n<p>注意到如果没有2的存在，那么答案就是0和1的数量差，那么2就可以使01数量差尽可能小，判一下就行了。</p>\n<h3 id=\"3-The-3rd-Universal-Cup-Stage-17-Jinan-F-The-Hermit\"><a href=\"#3-The-3rd-Universal-Cup-Stage-17-Jinan-F-The-Hermit\" class=\"headerlink\" title=\"3.The 3rd Universal Cup. Stage 17: Jinan F. The Hermit\"></a>3.The 3rd Universal Cup. Stage 17: Jinan F. The Hermit</h3><p>先考虑给你一个集合怎么求答案，即 $n=m$ 的情况，你所要做的就是去判断最小的数是不是GCD，如果是就删掉，如此反复。</p>\n<p>这种题的套路已经深入骨髓了，拆贡献或者是容斥。不妨考虑去算每个数会被多少个集合包含，这是困难的。于是考虑反着来，去数他被那些集合删除。</p>\n<p>这就是个简单的组合计数了。</p>\n<h3 id=\"4-The-3rd-Universal-Cup-Stage-17-Jinan-I-The-Hanged-Man\"><a href=\"#4-The-3rd-Universal-Cup-Stage-17-Jinan-I-The-Hanged-Man\" class=\"headerlink\" title=\"4.The 3rd Universal Cup. Stage 17: Jinan I. The Hanged Man\"></a>4.The 3rd Universal Cup. Stage 17: Jinan I. The Hanged Man</h3><p>厉害的构造题，因为有比较无脑的DP解法所以体现不出贪心的思维量。</p>\n<p>结论：如果有偶度数点那么一定有解，否则无解。证明，用DP可以证。</p>\n<h3 id=\"5-The-3rd-Universal-Cup-Stage-16-Nanjing-J-Social-Media\"><a href=\"#5-The-3rd-Universal-Cup-Stage-16-Nanjing-J-Social-Media\" class=\"headerlink\" title=\"5.The 3rd Universal Cup. Stage 16: Nanjing J. Social Media\"></a>5.The 3rd Universal Cup. Stage 16: Nanjing J. Social Media</h3><p>计算 $\\max_{i,j} C_i+C_j+f(i,j)$。看这个裸的问题不好做，回题再看看性质。</p>\n<p>如果没有 $f(i,j)$ 的话就直接把最大的两个加起来即可。但是注意到题目上有值的 $f(i,j)$ 只有 $n$ 个，故枚举这些点对更新答案即可。</p>\n<h3 id=\"6-The-3rd-Universal-Cup-Stage-16-Nanjing-K-Strips\"><a href=\"#6-The-3rd-Universal-Cup-Stage-16-Nanjing-K-Strips\" class=\"headerlink\" title=\"6.The 3rd Universal Cup. Stage 16: Nanjing K. Strips\"></a>6.The 3rd Universal Cup. Stage 16: Nanjing K. Strips</h3><p>对于每相邻两个黑点计算答案。如果没有边界限制的话就直接贪心即可，有限制就先贪心后调整即可。</p>\n<h3 id=\"7-The-3rd-Universal-Cup-Stage-15-Chengdu-A-Arrow-a-Row\"><a href=\"#7-The-3rd-Universal-Cup-Stage-15-Chengdu-A-Arrow-a-Row\" class=\"headerlink\" title=\"7.The 3rd Universal Cup. Stage 15: Chengdu A. Arrow a Row\"></a>7.The 3rd Universal Cup. Stage 15: Chengdu A. Arrow a Row</h3><p>签到题居然拼尽全力无法战胜？是我傻了，这要是放CF B我就做出来了。</p>\n<p>开头得是一个 &gt;,结尾至少三个 &gt;。至少得有一个 -。然后先把结尾连续段造出来，利用结尾把中间的 &gt; 补起来即可。</p>\n<h3 id=\"8-The-3rd-Universal-Cup-Stage-15-Chengdu-G-Expanding-Array\"><a href=\"#8-The-3rd-Universal-Cup-Stage-15-Chengdu-G-Expanding-Array\" class=\"headerlink\" title=\"8.The 3rd Universal Cup. Stage 15: Chengdu G. Expanding Array\"></a>8.The 3rd Universal Cup. Stage 15: Chengdu G. Expanding Array</h3><p>很逆天，猜了个结论直接就过了，提供一种和题解不一样的证明思路。</p>\n<p>将两个数看做是二进制下集合，于是发现运算就和集合取交取并取反以及挖掉一部分等价，故相邻两个数最多产生8的贡献。</p>\n<p>那个map存一下就结束了。</p>\n"},{"title":"NOIP2024 游记","date":"2024-11-29T16:00:00.000Z","toc":false,"mathjax":true,"_content":"\n省流：100+100+0+32=232\n\n赛前模拟赛都打的很破防，前两年难度一个天上一个地下，所以赛前想的这把什么发挥也就随缘了。结果有一天水群看见了个胡伟栋建议下调难度的图片，大胆猜测今年会比去年简单。事实证明，我大错特错。\n\n开场先把题目通读一遍：T1感觉不难，T2好像很典，T3什么玩意儿，T4好像很典但是一点不会。事实上我T2看错题了，以为给了AB让我求多少种合法序列，满脑子想的是建个图缩个点D个P。\n\n回头来做T1，突然发现自己不会做！先乱编了一个贪心，这一位相同就跳，否则把之后的点拖到前面匹配。一直在想怎么证明正确性，后面瞎胡了证法写了一下就跑路了。此时已经10:00了，心态开始不好起来。\n\n又看看T2，发现自己读错题了，刚开始感觉很不可做，感觉这把寄了，过了几分钟突然发现可以容斥！赶快推式子，写写写，然后发现假了。又回头想想指数的容斥怎么写，发现中间非常有DP的性质，于是写了DP，快速幂有地方多写了个乘2，调了我整整1h，自闭了。此时已经是11:30，我开始急了。\n\n真的，考试的时候不要急，不然你会连T3的24pts都写不出来，莫名其妙RE，树的遍历出问题，现在还不知道哪里有问题。最后T4赶快拼了个32pts，遗憾离场了。最后检查的时候发现T1虚拟机上要跑1.3s，想把#define int long long 删了可惜已经来不及了，但是Windows环境下0.2s，我有感觉自己有救了。\n\n前两个题花了太多时间，不然后面能多24+32pts。可惜世上没有后悔药。无所谓，我会退役。\n\n这应该就是我在役的最后一场正式比赛了，还好1=应该问题不大，也算是竞赛生涯圆满的结局吧！（希望不要打我脸）\n\nOI，Bye~~\n\nupd on 12/7/24: 100+100+0+28 T4挂了4 pts ， $\\mathcal{O(n^2log^2n)}$ 不大好使的，还好没打我脸。\n","source":"_posts/0007.md","raw":"---\ntitle: NOIP2024 游记\ndate: 2024-11-30\ntoc: false\ncategory: [随笔]\nmathjax: true\n---\n\n省流：100+100+0+32=232\n\n赛前模拟赛都打的很破防，前两年难度一个天上一个地下，所以赛前想的这把什么发挥也就随缘了。结果有一天水群看见了个胡伟栋建议下调难度的图片，大胆猜测今年会比去年简单。事实证明，我大错特错。\n\n开场先把题目通读一遍：T1感觉不难，T2好像很典，T3什么玩意儿，T4好像很典但是一点不会。事实上我T2看错题了，以为给了AB让我求多少种合法序列，满脑子想的是建个图缩个点D个P。\n\n回头来做T1，突然发现自己不会做！先乱编了一个贪心，这一位相同就跳，否则把之后的点拖到前面匹配。一直在想怎么证明正确性，后面瞎胡了证法写了一下就跑路了。此时已经10:00了，心态开始不好起来。\n\n又看看T2，发现自己读错题了，刚开始感觉很不可做，感觉这把寄了，过了几分钟突然发现可以容斥！赶快推式子，写写写，然后发现假了。又回头想想指数的容斥怎么写，发现中间非常有DP的性质，于是写了DP，快速幂有地方多写了个乘2，调了我整整1h，自闭了。此时已经是11:30，我开始急了。\n\n真的，考试的时候不要急，不然你会连T3的24pts都写不出来，莫名其妙RE，树的遍历出问题，现在还不知道哪里有问题。最后T4赶快拼了个32pts，遗憾离场了。最后检查的时候发现T1虚拟机上要跑1.3s，想把#define int long long 删了可惜已经来不及了，但是Windows环境下0.2s，我有感觉自己有救了。\n\n前两个题花了太多时间，不然后面能多24+32pts。可惜世上没有后悔药。无所谓，我会退役。\n\n这应该就是我在役的最后一场正式比赛了，还好1=应该问题不大，也算是竞赛生涯圆满的结局吧！（希望不要打我脸）\n\nOI，Bye~~\n\nupd on 12/7/24: 100+100+0+28 T4挂了4 pts ， $\\mathcal{O(n^2log^2n)}$ 不大好使的，还好没打我脸。\n","slug":"0007","published":1,"updated":"2025-06-28T13:44:17.465Z","comments":1,"layout":"post","photos":[],"_id":"cmcgb3qs4000bewrdf2ur288n","content":"<p>省流：100+100+0+32=232</p>\n<p>赛前模拟赛都打的很破防，前两年难度一个天上一个地下，所以赛前想的这把什么发挥也就随缘了。结果有一天水群看见了个胡伟栋建议下调难度的图片，大胆猜测今年会比去年简单。事实证明，我大错特错。</p>\n<p>开场先把题目通读一遍：T1感觉不难，T2好像很典，T3什么玩意儿，T4好像很典但是一点不会。事实上我T2看错题了，以为给了AB让我求多少种合法序列，满脑子想的是建个图缩个点D个P。</p>\n<p>回头来做T1，突然发现自己不会做！先乱编了一个贪心，这一位相同就跳，否则把之后的点拖到前面匹配。一直在想怎么证明正确性，后面瞎胡了证法写了一下就跑路了。此时已经10:00了，心态开始不好起来。</p>\n<p>又看看T2，发现自己读错题了，刚开始感觉很不可做，感觉这把寄了，过了几分钟突然发现可以容斥！赶快推式子，写写写，然后发现假了。又回头想想指数的容斥怎么写，发现中间非常有DP的性质，于是写了DP，快速幂有地方多写了个乘2，调了我整整1h，自闭了。此时已经是11:30，我开始急了。</p>\n<p>真的，考试的时候不要急，不然你会连T3的24pts都写不出来，莫名其妙RE，树的遍历出问题，现在还不知道哪里有问题。最后T4赶快拼了个32pts，遗憾离场了。最后检查的时候发现T1虚拟机上要跑1.3s，想把#define int long long 删了可惜已经来不及了，但是Windows环境下0.2s，我有感觉自己有救了。</p>\n<p>前两个题花了太多时间，不然后面能多24+32pts。可惜世上没有后悔药。无所谓，我会退役。</p>\n<p>这应该就是我在役的最后一场正式比赛了，还好1=应该问题不大，也算是竞赛生涯圆满的结局吧！（希望不要打我脸）</p>\n<p>OI，Bye~~</p>\n<p>upd on 12/7/24: 100+100+0+28 T4挂了4 pts ， $\\mathcal{O(n^2log^2n)}$ 不大好使的，还好没打我脸。</p>\n","excerpt":"","more":"<p>省流：100+100+0+32=232</p>\n<p>赛前模拟赛都打的很破防，前两年难度一个天上一个地下，所以赛前想的这把什么发挥也就随缘了。结果有一天水群看见了个胡伟栋建议下调难度的图片，大胆猜测今年会比去年简单。事实证明，我大错特错。</p>\n<p>开场先把题目通读一遍：T1感觉不难，T2好像很典，T3什么玩意儿，T4好像很典但是一点不会。事实上我T2看错题了，以为给了AB让我求多少种合法序列，满脑子想的是建个图缩个点D个P。</p>\n<p>回头来做T1，突然发现自己不会做！先乱编了一个贪心，这一位相同就跳，否则把之后的点拖到前面匹配。一直在想怎么证明正确性，后面瞎胡了证法写了一下就跑路了。此时已经10:00了，心态开始不好起来。</p>\n<p>又看看T2，发现自己读错题了，刚开始感觉很不可做，感觉这把寄了，过了几分钟突然发现可以容斥！赶快推式子，写写写，然后发现假了。又回头想想指数的容斥怎么写，发现中间非常有DP的性质，于是写了DP，快速幂有地方多写了个乘2，调了我整整1h，自闭了。此时已经是11:30，我开始急了。</p>\n<p>真的，考试的时候不要急，不然你会连T3的24pts都写不出来，莫名其妙RE，树的遍历出问题，现在还不知道哪里有问题。最后T4赶快拼了个32pts，遗憾离场了。最后检查的时候发现T1虚拟机上要跑1.3s，想把#define int long long 删了可惜已经来不及了，但是Windows环境下0.2s，我有感觉自己有救了。</p>\n<p>前两个题花了太多时间，不然后面能多24+32pts。可惜世上没有后悔药。无所谓，我会退役。</p>\n<p>这应该就是我在役的最后一场正式比赛了，还好1=应该问题不大，也算是竞赛生涯圆满的结局吧！（希望不要打我脸）</p>\n<p>OI，Bye~~</p>\n<p>upd on 12/7/24: 100+100+0+28 T4挂了4 pts ， $\\mathcal{O(n^2log^2n)}$ 不大好使的，还好没打我脸。</p>\n"},{"title":"OI Memoir","date":"2024-11-29T16:00:00.000Z","toc":false,"mathjax":true,"_content":"\n![](https://cdn.luogu.com.cn/upload/image_hosting/i8iq92sh.png)\n\n好快，不知不觉就走到这一天了。别人大放异彩，我已然退出舞台。\n\n#### 初识\n\n学会编程应该是在六年级的时候，那会儿学校有个什么编程的课，我欺骗我妈说在这个班上学得好就可以上CW竞赛班，然后我妈信了就给我报了，虽然后来还真进了。\n\n一开始还蛮有兴趣的，结果后面学到什么 ```for``` 循环的时候就听不懂了。我现在也想不清楚但是为啥不懂。后面就颓废了，天天都和同学玩MC。\n\n后面参加了个叫什么蓝桥杯的唐氏比赛，在那里试数据点结果直接给我干了个省一出来，很魔幻。\n\n#### 入门\n\n上了初中，一次机缘巧合使我走错地方，混进了xiong_yc的班，后面被发现了，老师联系了家长，让我在他班上学。\n\n这是我这辈子遇到过的最魔幻的事，歪打误撞开启了我的OI生涯。\n\n在这班上感觉进步飞速，学得不错，一年的时间学完了普及组算法。结果那年CSP-J逆天发挥使我差五分一等奖，破大防，然后就不怎么学了。\n\n#### 深入学习\n\n初二结束后我就开始停课了。暑假去了南京号家军集训，毫无收获可言，因为简直太难了！印象深刻的是有一场模拟赛乱搞过题，爽到了。\n\n在那里也认识了 EasonTao 这个大神，也知道了xqw这种神的存在。上了初三也在继续学，提高级别算法也学的差不多了，打了个CSP-S，踩了个狗运拿到了一等奖。\n\n2023年末那会CF Div2已经能做4题了，不知道为什么现在3题都困难，可能是因为中间学了大半学期文化课导致的，不得不说学文化课是我OI生涯最错误的决定，屁都没学到，浪费时间、丢失信心、OI变菜，无语。\n\n所以还是要相信《曹刿论战》中那句 “一鼓作气，再而衰，三而竭”，确实是至理名言。\n\n学完文化课回来复健明显感觉退步，暑假去了趟重庆有稍微找回了点感觉，之后回来随便学学就考了CSP-S,好家伙，一点没进步啊，去年比一等奖分数线高5分，今年还这样，破防了，这个月也就随便做了做自己想做的题，每周翘掉两场模拟赛。\n\n最后的最后，就是NOIP2024了，遗憾还是有，好在问题不大，省一还是能拿。\n\n#### 后记\n\n以前很喜欢看别人写退役记，想着我以后也是要写的，不过还要等很久很久。没想到这一天这么快就来了，很不真实啊。\n\n还有就是为啥别人的退役记有那么细节，我就啥都想不起来？\n\n最后把所有帮助过我的OIer的网名都写在这里吧：\n\n```\n\nCW势力\n\nFree_Windy  SunsetLake  Opuntia9622  Creeper_l  Struct_Sec  Drimpossible  imsaileach  BINYU  Zi_Gao  MrcFrst  World_Ender  wxt1221  Big_Cute_Bug\n\n114514zll  Spider_Oyster  GM_Joanna  六楼溜刘  FatOldEight  grass8cow  L7_56  ღꦿ࿐  NGC5457  xzc0920  robinyqc   black_trees  SqrtSecond\n\nEarthMessenger  Caiest_OIer  李至擎\n\nGZ 势力\n\nshashadejianzhang  L_Majiaqi\n\n其他势力：\n\nEasonTao  hope888  Pengzt  sqrtqwq  chenhanxi2011  gyh20  kradcigam  ezoiLearner  y25t  Milmon   \n\n```\n\n感谢我所遇到的所有同学与老师！\n\n# ```OI，Bye~Bye~```\n","source":"_posts/0008.md","raw":"---\ntitle: OI Memoir\ndate: 2024-11-30\ntoc: false\ncategory: [随笔]\nmathjax: true\n---\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/i8iq92sh.png)\n\n好快，不知不觉就走到这一天了。别人大放异彩，我已然退出舞台。\n\n#### 初识\n\n学会编程应该是在六年级的时候，那会儿学校有个什么编程的课，我欺骗我妈说在这个班上学得好就可以上CW竞赛班，然后我妈信了就给我报了，虽然后来还真进了。\n\n一开始还蛮有兴趣的，结果后面学到什么 ```for``` 循环的时候就听不懂了。我现在也想不清楚但是为啥不懂。后面就颓废了，天天都和同学玩MC。\n\n后面参加了个叫什么蓝桥杯的唐氏比赛，在那里试数据点结果直接给我干了个省一出来，很魔幻。\n\n#### 入门\n\n上了初中，一次机缘巧合使我走错地方，混进了xiong_yc的班，后面被发现了，老师联系了家长，让我在他班上学。\n\n这是我这辈子遇到过的最魔幻的事，歪打误撞开启了我的OI生涯。\n\n在这班上感觉进步飞速，学得不错，一年的时间学完了普及组算法。结果那年CSP-J逆天发挥使我差五分一等奖，破大防，然后就不怎么学了。\n\n#### 深入学习\n\n初二结束后我就开始停课了。暑假去了南京号家军集训，毫无收获可言，因为简直太难了！印象深刻的是有一场模拟赛乱搞过题，爽到了。\n\n在那里也认识了 EasonTao 这个大神，也知道了xqw这种神的存在。上了初三也在继续学，提高级别算法也学的差不多了，打了个CSP-S，踩了个狗运拿到了一等奖。\n\n2023年末那会CF Div2已经能做4题了，不知道为什么现在3题都困难，可能是因为中间学了大半学期文化课导致的，不得不说学文化课是我OI生涯最错误的决定，屁都没学到，浪费时间、丢失信心、OI变菜，无语。\n\n所以还是要相信《曹刿论战》中那句 “一鼓作气，再而衰，三而竭”，确实是至理名言。\n\n学完文化课回来复健明显感觉退步，暑假去了趟重庆有稍微找回了点感觉，之后回来随便学学就考了CSP-S,好家伙，一点没进步啊，去年比一等奖分数线高5分，今年还这样，破防了，这个月也就随便做了做自己想做的题，每周翘掉两场模拟赛。\n\n最后的最后，就是NOIP2024了，遗憾还是有，好在问题不大，省一还是能拿。\n\n#### 后记\n\n以前很喜欢看别人写退役记，想着我以后也是要写的，不过还要等很久很久。没想到这一天这么快就来了，很不真实啊。\n\n还有就是为啥别人的退役记有那么细节，我就啥都想不起来？\n\n最后把所有帮助过我的OIer的网名都写在这里吧：\n\n```\n\nCW势力\n\nFree_Windy  SunsetLake  Opuntia9622  Creeper_l  Struct_Sec  Drimpossible  imsaileach  BINYU  Zi_Gao  MrcFrst  World_Ender  wxt1221  Big_Cute_Bug\n\n114514zll  Spider_Oyster  GM_Joanna  六楼溜刘  FatOldEight  grass8cow  L7_56  ღꦿ࿐  NGC5457  xzc0920  robinyqc   black_trees  SqrtSecond\n\nEarthMessenger  Caiest_OIer  李至擎\n\nGZ 势力\n\nshashadejianzhang  L_Majiaqi\n\n其他势力：\n\nEasonTao  hope888  Pengzt  sqrtqwq  chenhanxi2011  gyh20  kradcigam  ezoiLearner  y25t  Milmon   \n\n```\n\n感谢我所遇到的所有同学与老师！\n\n# ```OI，Bye~Bye~```\n","slug":"0008","published":1,"updated":"2025-06-28T13:44:17.465Z","comments":1,"layout":"post","photos":[],"_id":"cmcgb3qs4000cewrd4782ekqv","content":"<p><img src=\"https://cdn.luogu.com.cn/upload/image_hosting/i8iq92sh.png\" alt=\"\"></p>\n<p>好快，不知不觉就走到这一天了。别人大放异彩，我已然退出舞台。</p>\n<h4 id=\"初识\"><a href=\"#初识\" class=\"headerlink\" title=\"初识\"></a>初识</h4><p>学会编程应该是在六年级的时候，那会儿学校有个什么编程的课，我欺骗我妈说在这个班上学得好就可以上CW竞赛班，然后我妈信了就给我报了，虽然后来还真进了。</p>\n<p>一开始还蛮有兴趣的，结果后面学到什么 <code>for</code> 循环的时候就听不懂了。我现在也想不清楚但是为啥不懂。后面就颓废了，天天都和同学玩MC。</p>\n<p>后面参加了个叫什么蓝桥杯的唐氏比赛，在那里试数据点结果直接给我干了个省一出来，很魔幻。</p>\n<h4 id=\"入门\"><a href=\"#入门\" class=\"headerlink\" title=\"入门\"></a>入门</h4><p>上了初中，一次机缘巧合使我走错地方，混进了xiong_yc的班，后面被发现了，老师联系了家长，让我在他班上学。</p>\n<p>这是我这辈子遇到过的最魔幻的事，歪打误撞开启了我的OI生涯。</p>\n<p>在这班上感觉进步飞速，学得不错，一年的时间学完了普及组算法。结果那年CSP-J逆天发挥使我差五分一等奖，破大防，然后就不怎么学了。</p>\n<h4 id=\"深入学习\"><a href=\"#深入学习\" class=\"headerlink\" title=\"深入学习\"></a>深入学习</h4><p>初二结束后我就开始停课了。暑假去了南京号家军集训，毫无收获可言，因为简直太难了！印象深刻的是有一场模拟赛乱搞过题，爽到了。</p>\n<p>在那里也认识了 EasonTao 这个大神，也知道了xqw这种神的存在。上了初三也在继续学，提高级别算法也学的差不多了，打了个CSP-S，踩了个狗运拿到了一等奖。</p>\n<p>2023年末那会CF Div2已经能做4题了，不知道为什么现在3题都困难，可能是因为中间学了大半学期文化课导致的，不得不说学文化课是我OI生涯最错误的决定，屁都没学到，浪费时间、丢失信心、OI变菜，无语。</p>\n<p>所以还是要相信《曹刿论战》中那句 “一鼓作气，再而衰，三而竭”，确实是至理名言。</p>\n<p>学完文化课回来复健明显感觉退步，暑假去了趟重庆有稍微找回了点感觉，之后回来随便学学就考了CSP-S,好家伙，一点没进步啊，去年比一等奖分数线高5分，今年还这样，破防了，这个月也就随便做了做自己想做的题，每周翘掉两场模拟赛。</p>\n<p>最后的最后，就是NOIP2024了，遗憾还是有，好在问题不大，省一还是能拿。</p>\n<h4 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h4><p>以前很喜欢看别人写退役记，想着我以后也是要写的，不过还要等很久很久。没想到这一天这么快就来了，很不真实啊。</p>\n<p>还有就是为啥别人的退役记有那么细节，我就啥都想不起来？</p>\n<p>最后把所有帮助过我的OIer的网名都写在这里吧：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">CW势力</span><br><span class=\"line\"></span><br><span class=\"line\">Free_Windy  SunsetLake  Opuntia9622  Creeper_l  Struct_Sec  Drimpossible  imsaileach  BINYU  Zi_Gao  MrcFrst  World_Ender  wxt1221  Big_Cute_Bug</span><br><span class=\"line\"></span><br><span class=\"line\">114514zll  Spider_Oyster  GM_Joanna  六楼溜刘  FatOldEight  grass8cow  L7_56  ღꦿ࿐  NGC5457  xzc0920  robinyqc   black_trees  SqrtSecond</span><br><span class=\"line\"></span><br><span class=\"line\">EarthMessenger  Caiest_OIer  李至擎</span><br><span class=\"line\"></span><br><span class=\"line\">GZ 势力</span><br><span class=\"line\"></span><br><span class=\"line\">shashadejianzhang  L_Majiaqi</span><br><span class=\"line\"></span><br><span class=\"line\">其他势力：</span><br><span class=\"line\"></span><br><span class=\"line\">EasonTao  hope888  Pengzt  sqrtqwq  chenhanxi2011  gyh20  kradcigam  ezoiLearner  y25t  Milmon   </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>感谢我所遇到的所有同学与老师！</p>\n<h1 id=\"OI，Bye-Bye\"><a href=\"#OI，Bye-Bye\" class=\"headerlink\" title=\"OI，Bye~Bye~\"></a><code>OI，Bye~Bye~</code></h1>","excerpt":"","more":"<p><img src=\"https://cdn.luogu.com.cn/upload/image_hosting/i8iq92sh.png\" alt=\"\"></p>\n<p>好快，不知不觉就走到这一天了。别人大放异彩，我已然退出舞台。</p>\n<h4 id=\"初识\"><a href=\"#初识\" class=\"headerlink\" title=\"初识\"></a>初识</h4><p>学会编程应该是在六年级的时候，那会儿学校有个什么编程的课，我欺骗我妈说在这个班上学得好就可以上CW竞赛班，然后我妈信了就给我报了，虽然后来还真进了。</p>\n<p>一开始还蛮有兴趣的，结果后面学到什么 <code>for</code> 循环的时候就听不懂了。我现在也想不清楚但是为啥不懂。后面就颓废了，天天都和同学玩MC。</p>\n<p>后面参加了个叫什么蓝桥杯的唐氏比赛，在那里试数据点结果直接给我干了个省一出来，很魔幻。</p>\n<h4 id=\"入门\"><a href=\"#入门\" class=\"headerlink\" title=\"入门\"></a>入门</h4><p>上了初中，一次机缘巧合使我走错地方，混进了xiong_yc的班，后面被发现了，老师联系了家长，让我在他班上学。</p>\n<p>这是我这辈子遇到过的最魔幻的事，歪打误撞开启了我的OI生涯。</p>\n<p>在这班上感觉进步飞速，学得不错，一年的时间学完了普及组算法。结果那年CSP-J逆天发挥使我差五分一等奖，破大防，然后就不怎么学了。</p>\n<h4 id=\"深入学习\"><a href=\"#深入学习\" class=\"headerlink\" title=\"深入学习\"></a>深入学习</h4><p>初二结束后我就开始停课了。暑假去了南京号家军集训，毫无收获可言，因为简直太难了！印象深刻的是有一场模拟赛乱搞过题，爽到了。</p>\n<p>在那里也认识了 EasonTao 这个大神，也知道了xqw这种神的存在。上了初三也在继续学，提高级别算法也学的差不多了，打了个CSP-S，踩了个狗运拿到了一等奖。</p>\n<p>2023年末那会CF Div2已经能做4题了，不知道为什么现在3题都困难，可能是因为中间学了大半学期文化课导致的，不得不说学文化课是我OI生涯最错误的决定，屁都没学到，浪费时间、丢失信心、OI变菜，无语。</p>\n<p>所以还是要相信《曹刿论战》中那句 “一鼓作气，再而衰，三而竭”，确实是至理名言。</p>\n<p>学完文化课回来复健明显感觉退步，暑假去了趟重庆有稍微找回了点感觉，之后回来随便学学就考了CSP-S,好家伙，一点没进步啊，去年比一等奖分数线高5分，今年还这样，破防了，这个月也就随便做了做自己想做的题，每周翘掉两场模拟赛。</p>\n<p>最后的最后，就是NOIP2024了，遗憾还是有，好在问题不大，省一还是能拿。</p>\n<h4 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h4><p>以前很喜欢看别人写退役记，想着我以后也是要写的，不过还要等很久很久。没想到这一天这么快就来了，很不真实啊。</p>\n<p>还有就是为啥别人的退役记有那么细节，我就啥都想不起来？</p>\n<p>最后把所有帮助过我的OIer的网名都写在这里吧：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">CW势力</span><br><span class=\"line\"></span><br><span class=\"line\">Free_Windy  SunsetLake  Opuntia9622  Creeper_l  Struct_Sec  Drimpossible  imsaileach  BINYU  Zi_Gao  MrcFrst  World_Ender  wxt1221  Big_Cute_Bug</span><br><span class=\"line\"></span><br><span class=\"line\">114514zll  Spider_Oyster  GM_Joanna  六楼溜刘  FatOldEight  grass8cow  L7_56  ღꦿ࿐  NGC5457  xzc0920  robinyqc   black_trees  SqrtSecond</span><br><span class=\"line\"></span><br><span class=\"line\">EarthMessenger  Caiest_OIer  李至擎</span><br><span class=\"line\"></span><br><span class=\"line\">GZ 势力</span><br><span class=\"line\"></span><br><span class=\"line\">shashadejianzhang  L_Majiaqi</span><br><span class=\"line\"></span><br><span class=\"line\">其他势力：</span><br><span class=\"line\"></span><br><span class=\"line\">EasonTao  hope888  Pengzt  sqrtqwq  chenhanxi2011  gyh20  kradcigam  ezoiLearner  y25t  Milmon   </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>感谢我所遇到的所有同学与老师！</p>\n<h1 id=\"OI，Bye-Bye\"><a href=\"#OI，Bye-Bye\" class=\"headerlink\" title=\"OI，Bye~Bye~\"></a><code>OI，Bye~Bye~</code></h1>"},{"title":"投资心得与原则","date":"2025-02-02T16:00:00.000Z","toc":false,"mathjax":true,"_content":"\n## 说在前面\n\n寒假谋划了一下靠之前在大A撞运气赚的钱的布局，现在赔成傻子了，主要都是币圈亏了好多，今天早上一醒来看看行情天都塌了。 \n\n好好分析了一下，觉得实在是有必要记录一下这个东西，不管是教训还是原则什么的，都要写下来，好记性不如烂笔头嘛！\n\n## 正文\n\n### 投资前\n\n**1.对某个东西感兴趣，有投资意向时，不要急着直接把钱扔进去，先问自己：我了解这行吗？**\n\n了解的方面：龙头是什么？行情和什么影响因素相关？身边有无该方面的专业人士？等等等等……\n\n**2.去了解了基本信息之后，问自己：我为什么要投？我看中了什么？**\n\n这一步一定要做好，不要感觉，一定不要感觉！！！\n\n无论是技术分析还是各项指标还是公司财报还是各种消息面与政策，一定要给自己理由！！！\n\n**3.然后再问自己：现在是一个进场的好时机吗？如果不是，又是多久呢？**\n\n这很重要，一个进场的时机决定了你的收益！\n\n同时自己也要给出充足的理由说明为什么“这个时候”进场比较好。\n\n其实就是学会看周期。\n\n**4.列出投资计划，包括周期和总额**\n\n投资时就要加以较为严格的执行。\n\n**总之，这是一个战胜自己赌徒心理的过程，同时也要做好输掉所有的心里准备，切记不要让投资活动影响到自己的日常生活！**\n\n### 投资时\n\n**1.消息最好每天看看，并分析该消息的影响。**\n\n主要是害怕出现黑天鹅事件。这次币圈就是这样的，特朗普加税影响我是没想到的。\n\n**2.小幅波动不要管。**\n\n**3.大幅波动切记注意！分析原因！**\n\n首先看是否是意料之中。\n\n意料之外：看看是什么方面自己没有注意到，是自己压根不知情还是分析错误？\n\n然后回观自己的计划是否应该修改，同时记得长记性！\n\n### 投资结束\n\n**1.复盘，总结得失与经验，再接再厉！**\n\n一定要学一些技术分析，也要会看财报。这是我自己的要求，还要学习啊。\n","source":"_posts/0009.md","raw":"---\ntitle: 投资心得与原则\ndate: 2025-02-03\ntoc: false\ncategory: [随笔]\nmathjax: true\n---\n\n## 说在前面\n\n寒假谋划了一下靠之前在大A撞运气赚的钱的布局，现在赔成傻子了，主要都是币圈亏了好多，今天早上一醒来看看行情天都塌了。 \n\n好好分析了一下，觉得实在是有必要记录一下这个东西，不管是教训还是原则什么的，都要写下来，好记性不如烂笔头嘛！\n\n## 正文\n\n### 投资前\n\n**1.对某个东西感兴趣，有投资意向时，不要急着直接把钱扔进去，先问自己：我了解这行吗？**\n\n了解的方面：龙头是什么？行情和什么影响因素相关？身边有无该方面的专业人士？等等等等……\n\n**2.去了解了基本信息之后，问自己：我为什么要投？我看中了什么？**\n\n这一步一定要做好，不要感觉，一定不要感觉！！！\n\n无论是技术分析还是各项指标还是公司财报还是各种消息面与政策，一定要给自己理由！！！\n\n**3.然后再问自己：现在是一个进场的好时机吗？如果不是，又是多久呢？**\n\n这很重要，一个进场的时机决定了你的收益！\n\n同时自己也要给出充足的理由说明为什么“这个时候”进场比较好。\n\n其实就是学会看周期。\n\n**4.列出投资计划，包括周期和总额**\n\n投资时就要加以较为严格的执行。\n\n**总之，这是一个战胜自己赌徒心理的过程，同时也要做好输掉所有的心里准备，切记不要让投资活动影响到自己的日常生活！**\n\n### 投资时\n\n**1.消息最好每天看看，并分析该消息的影响。**\n\n主要是害怕出现黑天鹅事件。这次币圈就是这样的，特朗普加税影响我是没想到的。\n\n**2.小幅波动不要管。**\n\n**3.大幅波动切记注意！分析原因！**\n\n首先看是否是意料之中。\n\n意料之外：看看是什么方面自己没有注意到，是自己压根不知情还是分析错误？\n\n然后回观自己的计划是否应该修改，同时记得长记性！\n\n### 投资结束\n\n**1.复盘，总结得失与经验，再接再厉！**\n\n一定要学一些技术分析，也要会看财报。这是我自己的要求，还要学习啊。\n","slug":"0009","published":1,"updated":"2025-06-28T13:44:17.466Z","comments":1,"layout":"post","photos":[],"_id":"cmcgb3qs5000fewrdbd9r8f0s","content":"<h2 id=\"说在前面\"><a href=\"#说在前面\" class=\"headerlink\" title=\"说在前面\"></a>说在前面</h2><p>寒假谋划了一下靠之前在大A撞运气赚的钱的布局，现在赔成傻子了，主要都是币圈亏了好多，今天早上一醒来看看行情天都塌了。 </p>\n<p>好好分析了一下，觉得实在是有必要记录一下这个东西，不管是教训还是原则什么的，都要写下来，好记性不如烂笔头嘛！</p>\n<h2 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h2><h3 id=\"投资前\"><a href=\"#投资前\" class=\"headerlink\" title=\"投资前\"></a>投资前</h3><p><strong>1.对某个东西感兴趣，有投资意向时，不要急着直接把钱扔进去，先问自己：我了解这行吗？</strong></p>\n<p>了解的方面：龙头是什么？行情和什么影响因素相关？身边有无该方面的专业人士？等等等等……</p>\n<p><strong>2.去了解了基本信息之后，问自己：我为什么要投？我看中了什么？</strong></p>\n<p>这一步一定要做好，不要感觉，一定不要感觉！！！</p>\n<p>无论是技术分析还是各项指标还是公司财报还是各种消息面与政策，一定要给自己理由！！！</p>\n<p><strong>3.然后再问自己：现在是一个进场的好时机吗？如果不是，又是多久呢？</strong></p>\n<p>这很重要，一个进场的时机决定了你的收益！</p>\n<p>同时自己也要给出充足的理由说明为什么“这个时候”进场比较好。</p>\n<p>其实就是学会看周期。</p>\n<p><strong>4.列出投资计划，包括周期和总额</strong></p>\n<p>投资时就要加以较为严格的执行。</p>\n<p><strong>总之，这是一个战胜自己赌徒心理的过程，同时也要做好输掉所有的心里准备，切记不要让投资活动影响到自己的日常生活！</strong></p>\n<h3 id=\"投资时\"><a href=\"#投资时\" class=\"headerlink\" title=\"投资时\"></a>投资时</h3><p><strong>1.消息最好每天看看，并分析该消息的影响。</strong></p>\n<p>主要是害怕出现黑天鹅事件。这次币圈就是这样的，特朗普加税影响我是没想到的。</p>\n<p><strong>2.小幅波动不要管。</strong></p>\n<p><strong>3.大幅波动切记注意！分析原因！</strong></p>\n<p>首先看是否是意料之中。</p>\n<p>意料之外：看看是什么方面自己没有注意到，是自己压根不知情还是分析错误？</p>\n<p>然后回观自己的计划是否应该修改，同时记得长记性！</p>\n<h3 id=\"投资结束\"><a href=\"#投资结束\" class=\"headerlink\" title=\"投资结束\"></a>投资结束</h3><p><strong>1.复盘，总结得失与经验，再接再厉！</strong></p>\n<p>一定要学一些技术分析，也要会看财报。这是我自己的要求，还要学习啊。</p>\n","excerpt":"","more":"<h2 id=\"说在前面\"><a href=\"#说在前面\" class=\"headerlink\" title=\"说在前面\"></a>说在前面</h2><p>寒假谋划了一下靠之前在大A撞运气赚的钱的布局，现在赔成傻子了，主要都是币圈亏了好多，今天早上一醒来看看行情天都塌了。 </p>\n<p>好好分析了一下，觉得实在是有必要记录一下这个东西，不管是教训还是原则什么的，都要写下来，好记性不如烂笔头嘛！</p>\n<h2 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h2><h3 id=\"投资前\"><a href=\"#投资前\" class=\"headerlink\" title=\"投资前\"></a>投资前</h3><p><strong>1.对某个东西感兴趣，有投资意向时，不要急着直接把钱扔进去，先问自己：我了解这行吗？</strong></p>\n<p>了解的方面：龙头是什么？行情和什么影响因素相关？身边有无该方面的专业人士？等等等等……</p>\n<p><strong>2.去了解了基本信息之后，问自己：我为什么要投？我看中了什么？</strong></p>\n<p>这一步一定要做好，不要感觉，一定不要感觉！！！</p>\n<p>无论是技术分析还是各项指标还是公司财报还是各种消息面与政策，一定要给自己理由！！！</p>\n<p><strong>3.然后再问自己：现在是一个进场的好时机吗？如果不是，又是多久呢？</strong></p>\n<p>这很重要，一个进场的时机决定了你的收益！</p>\n<p>同时自己也要给出充足的理由说明为什么“这个时候”进场比较好。</p>\n<p>其实就是学会看周期。</p>\n<p><strong>4.列出投资计划，包括周期和总额</strong></p>\n<p>投资时就要加以较为严格的执行。</p>\n<p><strong>总之，这是一个战胜自己赌徒心理的过程，同时也要做好输掉所有的心里准备，切记不要让投资活动影响到自己的日常生活！</strong></p>\n<h3 id=\"投资时\"><a href=\"#投资时\" class=\"headerlink\" title=\"投资时\"></a>投资时</h3><p><strong>1.消息最好每天看看，并分析该消息的影响。</strong></p>\n<p>主要是害怕出现黑天鹅事件。这次币圈就是这样的，特朗普加税影响我是没想到的。</p>\n<p><strong>2.小幅波动不要管。</strong></p>\n<p><strong>3.大幅波动切记注意！分析原因！</strong></p>\n<p>首先看是否是意料之中。</p>\n<p>意料之外：看看是什么方面自己没有注意到，是自己压根不知情还是分析错误？</p>\n<p>然后回观自己的计划是否应该修改，同时记得长记性！</p>\n<h3 id=\"投资结束\"><a href=\"#投资结束\" class=\"headerlink\" title=\"投资结束\"></a>投资结束</h3><p><strong>1.复盘，总结得失与经验，再接再厉！</strong></p>\n<p>一定要学一些技术分析，也要会看财报。这是我自己的要求，还要学习啊。</p>\n"},{"title":"新解！","date":"2025-02-14T16:00:00.000Z","toc":false,"mathjax":true,"_content":"\n有点高兴，第一次在做数学题时感受到了爆标的快乐。\n\n题目如下：\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/co8gabtz.png)\n\n官方做法过于复杂，贴一个自己的做法。\n\n题目当中的这个 $2017$ 肯定没啥特别的用处所以下文直接当 $n$ 来处理。\n\n首先先考虑一个问题是等腰三角形有几个，答案很显然是 $C_{n}^{2}$。\n\n因为考虑这个图形的每一条对角线都可以当做等腰三角形的底边，且因为 $2017$ 不是 $3$ 的倍数，所以不会出现等边三角形，从而可以做到不重不漏。\n\n接下来考虑如何把异色三角形给踢出去。\n\n有一件很显然的事情：异色三角形中一定有异色边，而且一定有2条。\n\n以一条异色边为腰的等腰有2个，为底的等腰有一个，所以一共是三个。\n\n但是每个三角形都被重复统计了两次所以最后异色三角形数就是 $\\frac{3}{2}R(n-R)$。\n\n所以同色三角形数就是 $C_{n}^{2}-\\frac{3}{2}R(n-R)$。\n\n与红点分布无关，证毕。\n\n虽然这个问题我只做了几分钟，但是看到自己比标答简洁很多时真的很高兴！\n","source":"_posts/0010.md","raw":"---\ntitle: 新解！\ndate: 2025-02-15\ntoc: false\ncategory: [做题记录]\nmathjax: true\n---\n\n有点高兴，第一次在做数学题时感受到了爆标的快乐。\n\n题目如下：\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/co8gabtz.png)\n\n官方做法过于复杂，贴一个自己的做法。\n\n题目当中的这个 $2017$ 肯定没啥特别的用处所以下文直接当 $n$ 来处理。\n\n首先先考虑一个问题是等腰三角形有几个，答案很显然是 $C_{n}^{2}$。\n\n因为考虑这个图形的每一条对角线都可以当做等腰三角形的底边，且因为 $2017$ 不是 $3$ 的倍数，所以不会出现等边三角形，从而可以做到不重不漏。\n\n接下来考虑如何把异色三角形给踢出去。\n\n有一件很显然的事情：异色三角形中一定有异色边，而且一定有2条。\n\n以一条异色边为腰的等腰有2个，为底的等腰有一个，所以一共是三个。\n\n但是每个三角形都被重复统计了两次所以最后异色三角形数就是 $\\frac{3}{2}R(n-R)$。\n\n所以同色三角形数就是 $C_{n}^{2}-\\frac{3}{2}R(n-R)$。\n\n与红点分布无关，证毕。\n\n虽然这个问题我只做了几分钟，但是看到自己比标答简洁很多时真的很高兴！\n","slug":"0010","published":1,"updated":"2025-06-28T13:44:17.466Z","comments":1,"layout":"post","photos":[],"_id":"cmcgb3qs5000hewrdajmn97um","content":"<p>有点高兴，第一次在做数学题时感受到了爆标的快乐。</p>\n<p>题目如下：</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/image_hosting/co8gabtz.png\" alt=\"\"></p>\n<p>官方做法过于复杂，贴一个自己的做法。</p>\n<p>题目当中的这个 $2017$ 肯定没啥特别的用处所以下文直接当 $n$ 来处理。</p>\n<p>首先先考虑一个问题是等腰三角形有几个，答案很显然是 $C_{n}^{2}$。</p>\n<p>因为考虑这个图形的每一条对角线都可以当做等腰三角形的底边，且因为 $2017$ 不是 $3$ 的倍数，所以不会出现等边三角形，从而可以做到不重不漏。</p>\n<p>接下来考虑如何把异色三角形给踢出去。</p>\n<p>有一件很显然的事情：异色三角形中一定有异色边，而且一定有2条。</p>\n<p>以一条异色边为腰的等腰有2个，为底的等腰有一个，所以一共是三个。</p>\n<p>但是每个三角形都被重复统计了两次所以最后异色三角形数就是 $\\frac{3}{2}R(n-R)$。</p>\n<p>所以同色三角形数就是 $C_{n}^{2}-\\frac{3}{2}R(n-R)$。</p>\n<p>与红点分布无关，证毕。</p>\n<p>虽然这个问题我只做了几分钟，但是看到自己比标答简洁很多时真的很高兴！</p>\n","excerpt":"","more":"<p>有点高兴，第一次在做数学题时感受到了爆标的快乐。</p>\n<p>题目如下：</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/image_hosting/co8gabtz.png\" alt=\"\"></p>\n<p>官方做法过于复杂，贴一个自己的做法。</p>\n<p>题目当中的这个 $2017$ 肯定没啥特别的用处所以下文直接当 $n$ 来处理。</p>\n<p>首先先考虑一个问题是等腰三角形有几个，答案很显然是 $C_{n}^{2}$。</p>\n<p>因为考虑这个图形的每一条对角线都可以当做等腰三角形的底边，且因为 $2017$ 不是 $3$ 的倍数，所以不会出现等边三角形，从而可以做到不重不漏。</p>\n<p>接下来考虑如何把异色三角形给踢出去。</p>\n<p>有一件很显然的事情：异色三角形中一定有异色边，而且一定有2条。</p>\n<p>以一条异色边为腰的等腰有2个，为底的等腰有一个，所以一共是三个。</p>\n<p>但是每个三角形都被重复统计了两次所以最后异色三角形数就是 $\\frac{3}{2}R(n-R)$。</p>\n<p>所以同色三角形数就是 $C_{n}^{2}-\\frac{3}{2}R(n-R)$。</p>\n<p>与红点分布无关，证毕。</p>\n<p>虽然这个问题我只做了几分钟，但是看到自己比标答简洁很多时真的很高兴！</p>\n"},{"title":"半期随想","date":"2025-04-24T16:00:00.000Z","toc":false,"mathjax":true,"_content":"\n随便写点东西，用以自诫。算是把自己钉在耻辱柱上吧，长点记性也好。\n\n感恩半期考试无比糟糕的发挥，使我认识到自己丑恶的嘴脸。\n\n感恩初中恩师曹杰祥对我中肯的评价：“你是一个很自负的孩子。”\n\n可惜学生甚愚，今日才能理解，才肯接受。\n\n很对啊，我是一个很自负的孩子，很自大，但是我也不知道自己在拽什么。\n\n总之就是对自己的能力有不切实际的幻想。\n\n一直以来粗心这个毛病我一直都无法改正。计算算错、条件看错、想问题想一半就跑了、想当然……诸如此类的错误层出不穷，我也去想过“这是怎么回事”，“我为什么会犯这样的错误”类似的问题，可惜最后都不了了之。现在找到了这一切的根源——自负，或者说傲慢。古人的智慧是可以相信的，“傲慢”好像就是《圣经》里七宗罪之一。\n\n我似乎在平日里不太把练习当回事儿，觉得“这么简单的东西我做它干嘛？”；也不太把犯错当回事儿，觉得“我下次肯定不会再犯了”，可是下次还要错；笔记也是不太爱记的，觉得“我应该记得住”。唉，“好记性不如烂笔头”我咋就听不进去呢？这下好了，本次半期考试绝大多数题目都在考察细心，自负的我、傲慢的我不出所料的败下阵来了。\n\n哥们儿，你没有你想象中的那么强。\n\n你只是一个普通到不能再普通的学生，仅此而已。\n\n醒醒吧，别活在虚妄中了。\n\n你的智商并不高，你的天赋也并不过人，甚至可以说你毫无天赋可言。\n\n你只是一个平平无奇、普通至极的人罢了。\n\n忘记你曾所拥有的一切光环，\n\n从今天起，请把自己当做一个普通人来对待。\n\n去做一个普通人该做的事，去踏踏实实地去做好每一件分内的事。\n\n看见这篇文章的朋友们，若发现我于平日生活有忘形之意，请肆意地批评我。\n\n作业，或许也该开始写了吧。\n","source":"_posts/0011.md","raw":"---\ntitle: 半期随想\ndate: 2025-04-25\ntoc: false\ncategory: [随笔]\nmathjax: true\n---\n\n随便写点东西，用以自诫。算是把自己钉在耻辱柱上吧，长点记性也好。\n\n感恩半期考试无比糟糕的发挥，使我认识到自己丑恶的嘴脸。\n\n感恩初中恩师曹杰祥对我中肯的评价：“你是一个很自负的孩子。”\n\n可惜学生甚愚，今日才能理解，才肯接受。\n\n很对啊，我是一个很自负的孩子，很自大，但是我也不知道自己在拽什么。\n\n总之就是对自己的能力有不切实际的幻想。\n\n一直以来粗心这个毛病我一直都无法改正。计算算错、条件看错、想问题想一半就跑了、想当然……诸如此类的错误层出不穷，我也去想过“这是怎么回事”，“我为什么会犯这样的错误”类似的问题，可惜最后都不了了之。现在找到了这一切的根源——自负，或者说傲慢。古人的智慧是可以相信的，“傲慢”好像就是《圣经》里七宗罪之一。\n\n我似乎在平日里不太把练习当回事儿，觉得“这么简单的东西我做它干嘛？”；也不太把犯错当回事儿，觉得“我下次肯定不会再犯了”，可是下次还要错；笔记也是不太爱记的，觉得“我应该记得住”。唉，“好记性不如烂笔头”我咋就听不进去呢？这下好了，本次半期考试绝大多数题目都在考察细心，自负的我、傲慢的我不出所料的败下阵来了。\n\n哥们儿，你没有你想象中的那么强。\n\n你只是一个普通到不能再普通的学生，仅此而已。\n\n醒醒吧，别活在虚妄中了。\n\n你的智商并不高，你的天赋也并不过人，甚至可以说你毫无天赋可言。\n\n你只是一个平平无奇、普通至极的人罢了。\n\n忘记你曾所拥有的一切光环，\n\n从今天起，请把自己当做一个普通人来对待。\n\n去做一个普通人该做的事，去踏踏实实地去做好每一件分内的事。\n\n看见这篇文章的朋友们，若发现我于平日生活有忘形之意，请肆意地批评我。\n\n作业，或许也该开始写了吧。\n","slug":"0011","published":1,"updated":"2025-06-28T13:44:17.466Z","comments":1,"layout":"post","photos":[],"_id":"cmcgb3qs6000rewrdazdx9jcm","content":"<p>随便写点东西，用以自诫。算是把自己钉在耻辱柱上吧，长点记性也好。</p>\n<p>感恩半期考试无比糟糕的发挥，使我认识到自己丑恶的嘴脸。</p>\n<p>感恩初中恩师曹杰祥对我中肯的评价：“你是一个很自负的孩子。”</p>\n<p>可惜学生甚愚，今日才能理解，才肯接受。</p>\n<p>很对啊，我是一个很自负的孩子，很自大，但是我也不知道自己在拽什么。</p>\n<p>总之就是对自己的能力有不切实际的幻想。</p>\n<p>一直以来粗心这个毛病我一直都无法改正。计算算错、条件看错、想问题想一半就跑了、想当然……诸如此类的错误层出不穷，我也去想过“这是怎么回事”，“我为什么会犯这样的错误”类似的问题，可惜最后都不了了之。现在找到了这一切的根源——自负，或者说傲慢。古人的智慧是可以相信的，“傲慢”好像就是《圣经》里七宗罪之一。</p>\n<p>我似乎在平日里不太把练习当回事儿，觉得“这么简单的东西我做它干嘛？”；也不太把犯错当回事儿，觉得“我下次肯定不会再犯了”，可是下次还要错；笔记也是不太爱记的，觉得“我应该记得住”。唉，“好记性不如烂笔头”我咋就听不进去呢？这下好了，本次半期考试绝大多数题目都在考察细心，自负的我、傲慢的我不出所料的败下阵来了。</p>\n<p>哥们儿，你没有你想象中的那么强。</p>\n<p>你只是一个普通到不能再普通的学生，仅此而已。</p>\n<p>醒醒吧，别活在虚妄中了。</p>\n<p>你的智商并不高，你的天赋也并不过人，甚至可以说你毫无天赋可言。</p>\n<p>你只是一个平平无奇、普通至极的人罢了。</p>\n<p>忘记你曾所拥有的一切光环，</p>\n<p>从今天起，请把自己当做一个普通人来对待。</p>\n<p>去做一个普通人该做的事，去踏踏实实地去做好每一件分内的事。</p>\n<p>看见这篇文章的朋友们，若发现我于平日生活有忘形之意，请肆意地批评我。</p>\n<p>作业，或许也该开始写了吧。</p>\n","excerpt":"","more":"<p>随便写点东西，用以自诫。算是把自己钉在耻辱柱上吧，长点记性也好。</p>\n<p>感恩半期考试无比糟糕的发挥，使我认识到自己丑恶的嘴脸。</p>\n<p>感恩初中恩师曹杰祥对我中肯的评价：“你是一个很自负的孩子。”</p>\n<p>可惜学生甚愚，今日才能理解，才肯接受。</p>\n<p>很对啊，我是一个很自负的孩子，很自大，但是我也不知道自己在拽什么。</p>\n<p>总之就是对自己的能力有不切实际的幻想。</p>\n<p>一直以来粗心这个毛病我一直都无法改正。计算算错、条件看错、想问题想一半就跑了、想当然……诸如此类的错误层出不穷，我也去想过“这是怎么回事”，“我为什么会犯这样的错误”类似的问题，可惜最后都不了了之。现在找到了这一切的根源——自负，或者说傲慢。古人的智慧是可以相信的，“傲慢”好像就是《圣经》里七宗罪之一。</p>\n<p>我似乎在平日里不太把练习当回事儿，觉得“这么简单的东西我做它干嘛？”；也不太把犯错当回事儿，觉得“我下次肯定不会再犯了”，可是下次还要错；笔记也是不太爱记的，觉得“我应该记得住”。唉，“好记性不如烂笔头”我咋就听不进去呢？这下好了，本次半期考试绝大多数题目都在考察细心，自负的我、傲慢的我不出所料的败下阵来了。</p>\n<p>哥们儿，你没有你想象中的那么强。</p>\n<p>你只是一个普通到不能再普通的学生，仅此而已。</p>\n<p>醒醒吧，别活在虚妄中了。</p>\n<p>你的智商并不高，你的天赋也并不过人，甚至可以说你毫无天赋可言。</p>\n<p>你只是一个平平无奇、普通至极的人罢了。</p>\n<p>忘记你曾所拥有的一切光环，</p>\n<p>从今天起，请把自己当做一个普通人来对待。</p>\n<p>去做一个普通人该做的事，去踏踏实实地去做好每一件分内的事。</p>\n<p>看见这篇文章的朋友们，若发现我于平日生活有忘形之意，请肆意地批评我。</p>\n<p>作业，或许也该开始写了吧。</p>\n"},{"title":"优雅纯几何——八省联考压轴","date":"2025-05-23T16:00:00.000Z","toc":true,"mathjax":true,"_content":"\n课上猜出答案，中午睡觉时突然就会了证明，记录一下。\n\n题目大意：平面四边形 $ABCD$ 中 $|AB|=|AC|=|CD|=1,\\angle ACD=\\frac{\\pi}{3},\\angle CAB=\\frac{\\pi}{4}$ ，沿 $AC$ 翻折 $\\triangle ACD$ 形成 $\\triangle ACP$，求二面角 $A-CP-B$ 余弦最小值。\n\n**Key Observation 1:观察到转ACP和ABC是本质相同的**\n\n为什么选择转ABC：这是一个直角三角形，而且旋转定点不在交线上，这就意味着我需要刻画的的是点而非线，而且这甚至是个等腰直角三角形，性质非常优秀。\n\n让我们画出示意图：\n\n![image.png](https://s2.loli.net/2025/05/24/yGQP9MaLjlNugBJ.png)\n\n延长 $PC,BA$ 交于点 $H$。 上面的椭圆是 $B$ 点的轨迹。 $B'$ 是运动中的 $B$ 点， $J$ 是 $B'$ 在原平面的投影。 $JK \\perp CP,B'K \\perp CP$。 此时二面角等于 $\\angle JKB'$。\n\n**Key Observation 2: $\\triangle JB'H$ 和 $\\triangle JB'K$ 是投影关系**\n\n这就意味着当 $\\angle JKB'$ 最大时， $\\angle JHB'$ 也是最大，而 $\\angle JHB'$ 最大的时候就是相切。\n\n接下来就是简单的带入计算了，计算得此时 $\\cos \\angle JKB'= \\frac{\\sqrt{3}}{3}$。\n","source":"_posts/0012.md","raw":"---\ntitle: 优雅纯几何——八省联考压轴\ndate: 2025-05-24\ntoc: true\ncategory: [做题记录]\nmathjax: true\n---\n\n课上猜出答案，中午睡觉时突然就会了证明，记录一下。\n\n题目大意：平面四边形 $ABCD$ 中 $|AB|=|AC|=|CD|=1,\\angle ACD=\\frac{\\pi}{3},\\angle CAB=\\frac{\\pi}{4}$ ，沿 $AC$ 翻折 $\\triangle ACD$ 形成 $\\triangle ACP$，求二面角 $A-CP-B$ 余弦最小值。\n\n**Key Observation 1:观察到转ACP和ABC是本质相同的**\n\n为什么选择转ABC：这是一个直角三角形，而且旋转定点不在交线上，这就意味着我需要刻画的的是点而非线，而且这甚至是个等腰直角三角形，性质非常优秀。\n\n让我们画出示意图：\n\n![image.png](https://s2.loli.net/2025/05/24/yGQP9MaLjlNugBJ.png)\n\n延长 $PC,BA$ 交于点 $H$。 上面的椭圆是 $B$ 点的轨迹。 $B'$ 是运动中的 $B$ 点， $J$ 是 $B'$ 在原平面的投影。 $JK \\perp CP,B'K \\perp CP$。 此时二面角等于 $\\angle JKB'$。\n\n**Key Observation 2: $\\triangle JB'H$ 和 $\\triangle JB'K$ 是投影关系**\n\n这就意味着当 $\\angle JKB'$ 最大时， $\\angle JHB'$ 也是最大，而 $\\angle JHB'$ 最大的时候就是相切。\n\n接下来就是简单的带入计算了，计算得此时 $\\cos \\angle JKB'= \\frac{\\sqrt{3}}{3}$。\n","slug":"0012","published":1,"updated":"2025-06-28T13:44:17.466Z","comments":1,"layout":"post","photos":[],"_id":"cmcgb3qs6000sewrd9bfsdlgz","content":"<p>课上猜出答案，中午睡觉时突然就会了证明，记录一下。</p>\n<p>题目大意：平面四边形 $ABCD$ 中 $|AB|=|AC|=|CD|=1,\\angle ACD=\\frac{\\pi}{3},\\angle CAB=\\frac{\\pi}{4}$ ，沿 $AC$ 翻折 $\\triangle ACD$ 形成 $\\triangle ACP$，求二面角 $A-CP-B$ 余弦最小值。</p>\n<p><strong>Key Observation 1:观察到转ACP和ABC是本质相同的</strong></p>\n<p>为什么选择转ABC：这是一个直角三角形，而且旋转定点不在交线上，这就意味着我需要刻画的的是点而非线，而且这甚至是个等腰直角三角形，性质非常优秀。</p>\n<p>让我们画出示意图：</p>\n<p><img src=\"https://s2.loli.net/2025/05/24/yGQP9MaLjlNugBJ.png\" alt=\"image.png\"></p>\n<p>延长 $PC,BA$ 交于点 $H$。 上面的椭圆是 $B$ 点的轨迹。 $B’$ 是运动中的 $B$ 点， $J$ 是 $B’$ 在原平面的投影。 $JK \\perp CP,B’K \\perp CP$。 此时二面角等于 $\\angle JKB’$。</p>\n<p><strong>Key Observation 2: $\\triangle JB’H$ 和 $\\triangle JB’K$ 是投影关系</strong></p>\n<p>这就意味着当 $\\angle JKB’$ 最大时， $\\angle JHB’$ 也是最大，而 $\\angle JHB’$ 最大的时候就是相切。</p>\n<p>接下来就是简单的带入计算了，计算得此时 $\\cos \\angle JKB’= \\frac{\\sqrt{3}}{3}$。</p>\n","excerpt":"","more":"<p>课上猜出答案，中午睡觉时突然就会了证明，记录一下。</p>\n<p>题目大意：平面四边形 $ABCD$ 中 $|AB|=|AC|=|CD|=1,\\angle ACD=\\frac{\\pi}{3},\\angle CAB=\\frac{\\pi}{4}$ ，沿 $AC$ 翻折 $\\triangle ACD$ 形成 $\\triangle ACP$，求二面角 $A-CP-B$ 余弦最小值。</p>\n<p><strong>Key Observation 1:观察到转ACP和ABC是本质相同的</strong></p>\n<p>为什么选择转ABC：这是一个直角三角形，而且旋转定点不在交线上，这就意味着我需要刻画的的是点而非线，而且这甚至是个等腰直角三角形，性质非常优秀。</p>\n<p>让我们画出示意图：</p>\n<p><img src=\"https://s2.loli.net/2025/05/24/yGQP9MaLjlNugBJ.png\" alt=\"image.png\"></p>\n<p>延长 $PC,BA$ 交于点 $H$。 上面的椭圆是 $B$ 点的轨迹。 $B’$ 是运动中的 $B$ 点， $J$ 是 $B’$ 在原平面的投影。 $JK \\perp CP,B’K \\perp CP$。 此时二面角等于 $\\angle JKB’$。</p>\n<p><strong>Key Observation 2: $\\triangle JB’H$ 和 $\\triangle JB’K$ 是投影关系</strong></p>\n<p>这就意味着当 $\\angle JKB’$ 最大时， $\\angle JHB’$ 也是最大，而 $\\angle JHB’$ 最大的时候就是相切。</p>\n<p>接下来就是简单的带入计算了，计算得此时 $\\cos \\angle JKB’= \\frac{\\sqrt{3}}{3}$。</p>\n"},{"title":"test","date":"2025-06-27T16:00:00.000Z","toc":true,"mathjax":true,"_content":"{% pdf \"/pdf/Combinatorics of permutations (Miklos Bona) (Z-Library).pdf\" %}\n","source":"_posts/test.md","raw":"---\ntitle: test\ndate: 2025-06-28\ntoc: true\ncategory: [test]\nmathjax: true\n---\n{% pdf \"/pdf/Combinatorics of permutations (Miklos Bona) (Z-Library).pdf\" %}\n","slug":"test","published":1,"updated":"2025-06-28T13:58:24.180Z","comments":1,"layout":"post","photos":[],"_id":"cmcgb3qs6000tewrd164048ue","content":"\n\n\t<div class=\"row\">\n    <embed src=\"/pdf/Combinatorics of permutations (Miklos Bona) (Z-Library).pdf\" width=\"100%\" height=\"550\" type=\"application/pdf\">\n\t</div>\n\n\n\n","excerpt":"","more":"\n\n\t<div class=\"row\">\n    <embed src=\"/pdf/Combinatorics of permutations (Miklos Bona) (Z-Library).pdf\" width=\"100%\" height=\"550\" type=\"application/pdf\">\n\t</div>\n\n\n\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cmcgb3qry0000ewrdecj51axb","category_id":"cmcgb3qs10002ewrd05uf5h2c","_id":"cmcgb3qs40009ewrdg6j8hkl5"},{"post_id":"cmcgb3qs30007ewrdgypdc626","category_id":"cmcgb3qs30006ewrdet0cahmq","_id":"cmcgb3qs5000dewrdhb3a68tq"},{"post_id":"cmcgb3qs00001ewrdhb7oh72s","category_id":"cmcgb3qs30006ewrdet0cahmq","_id":"cmcgb3qs5000gewrde0f5doq9"},{"post_id":"cmcgb3qs30008ewrddfhr8vfq","category_id":"cmcgb3qs30006ewrdet0cahmq","_id":"cmcgb3qs5000iewrd91gq8e4z"},{"post_id":"cmcgb3qs4000bewrdf2ur288n","category_id":"cmcgb3qs10002ewrd05uf5h2c","_id":"cmcgb3qs6000kewrdfdxx62s5"},{"post_id":"cmcgb3qs20003ewrd80ofaqqb","category_id":"cmcgb3qs30006ewrdet0cahmq","_id":"cmcgb3qs6000lewrd3grj19d4"},{"post_id":"cmcgb3qs4000cewrd4782ekqv","category_id":"cmcgb3qs10002ewrd05uf5h2c","_id":"cmcgb3qs6000mewrd57ij1h1f"},{"post_id":"cmcgb3qs5000fewrdbd9r8f0s","category_id":"cmcgb3qs10002ewrd05uf5h2c","_id":"cmcgb3qs6000newrd7g0b2f42"},{"post_id":"cmcgb3qs20004ewrd7hb8ac2p","category_id":"cmcgb3qs30006ewrdet0cahmq","_id":"cmcgb3qs6000oewrdcrga63xp"},{"post_id":"cmcgb3qs5000hewrdajmn97um","category_id":"cmcgb3qs30006ewrdet0cahmq","_id":"cmcgb3qs6000pewrd529b57k1"},{"post_id":"cmcgb3qs30005ewrd2uziao1f","category_id":"cmcgb3qs30006ewrdet0cahmq","_id":"cmcgb3qs6000qewrdbonnb9gs"},{"post_id":"cmcgb3qs6000rewrdazdx9jcm","category_id":"cmcgb3qs10002ewrd05uf5h2c","_id":"cmcgb3qs7000uewrd65ydedc9"},{"post_id":"cmcgb3qs6000sewrd9bfsdlgz","category_id":"cmcgb3qs30006ewrdet0cahmq","_id":"cmcgb3qs7000wewrd03f85d2z"},{"post_id":"cmcgb3qs6000tewrd164048ue","category_id":"cmcgb3qs7000vewrd15xzb0cz","_id":"cmcgb3qs7000xewrd7gneh0vn"}],"PostTag":[],"Tag":[]}}